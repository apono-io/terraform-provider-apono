name: Tests

on:
  pull_request:
    branches: [main, 'v2']
    paths-ignore:
      - 'README.md'
  push:
    branches: [main, 'v2']
    paths-ignore:
      - 'README.md'

permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@v8
        with:
          version: "v2.0"

  generate:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.11.4"
      - run: go mod download
      - name: Install mockery
        run: go install github.com/vektra/mockery/v2@latest
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        terraform:
          - '1.11.*'
          - '1.6.*'
          - '1.1.*'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
          IS_TEST_ACCOUNT: "1"
          APONO_PERSONAL_TOKEN: ${{ secrets.TERRAFORM_TEST_ACCOUNT_PERSONAL_TOKEN }}
        run: go test -v -cover ./...
        timeout-minutes: 10
  e2e-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - name: Run tests
        run: go run tests/main.go
        env:
          APONO_PERSONAL_TOKEN: ${{ secrets.TERRAFORM_TEST_ACCOUNT_PERSONAL_TOKEN }}
