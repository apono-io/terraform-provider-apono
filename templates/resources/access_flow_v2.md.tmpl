---
page_title: "{{.Name}} {{.Type}} - {{.ProviderName}}"
subcategory: "v2"
description: |-
  {{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.Type}}: {{.Name}}

{{ .Description | trimspace }}

## Example Usage

### Basic Example - Self-Serve Access Flow 

{{ tffile "examples/resources/apono_access_flow_v2/basic.tf" }}

### Automatic Approval Access Flow

{{ tffile "examples/resources/apono_access_flow_v2/automatic-approval.tf" }}

### Auto-approved Access Flow for on-call OpsGenie responders

Auto-approved Access Flow for on-call OpsGenie responders to request access on behalf of the R&D group.

{{ tffile "examples/resources/apono_access_flow_v2/oncall_request_for_rnd.tf" }}

### Access Flow for Managers to Request Access on Behalf of Their Direct Reports

This access flow allows **only those members of the specified group who are identified as managers** (based on identity provider) to request access **on behalf of their direct reports**. The manager-report relationship must be defined in the identity provider integration. Users in the group who are not managers will not be able to request access for others.

{{ tffile "examples/resources/apono_access_flow_v2/managers_request_for_employees.tf" }}

### Access to Sensitive Production for Users via Google Oauth IDP  

{{ tffile "examples/resources/apono_access_flow_v2/sensitive-production.tf" }}

### Access to Multiple Integration Targets and Specific Resource Names

{{ tffile "examples/resources/apono_access_flow_v2/multiple-targets.tf" }}

### Bundle and Access Scope as Access Targets 

{{ tffile "examples/resources/apono_access_flow_v2/bundle-and-access-scope.tf" }}

### Integration Owner as Approver

{{ tffile "examples/resources/apono_access_flow_v2/owner-approver.tf" }}

{{ .SchemaMarkdown | trimspace }}

## Import

In Terraform v1.5.0 and later, use an import block to import apono_access_flow_v2 using the Access Flow identifier. For example:

```terraform
import {
  to = apono_access_flow_v2.example
  id = "123e4567-e89b-12d3-a456-426614174000"
}
```

Or using the CLI:

```shell
terraform import apono_access_flow_v2.example 123e4567-e89b-12d3-a456-426614174000
```
