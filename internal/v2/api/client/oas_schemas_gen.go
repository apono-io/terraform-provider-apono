// Code generated by ogen, DO NOT EDIT.

package client

import (
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
)

// AccessBundleAccessTargetV2.
// Ref: #/components/schemas/AccessBundleAccessTargetPublicV2Model
type AccessBundleAccessTargetPublicV2Model struct {
	Integration OptNilIntegrationAccessTargetPublicV2Model `json:"integration"`
	AccessScope OptNilAccessScopeAccessTargetPublicV2Model `json:"access_scope"`
}

// GetIntegration returns the value of Integration.
func (s *AccessBundleAccessTargetPublicV2Model) GetIntegration() OptNilIntegrationAccessTargetPublicV2Model {
	return s.Integration
}

// GetAccessScope returns the value of AccessScope.
func (s *AccessBundleAccessTargetPublicV2Model) GetAccessScope() OptNilAccessScopeAccessTargetPublicV2Model {
	return s.AccessScope
}

// SetIntegration sets the value of Integration.
func (s *AccessBundleAccessTargetPublicV2Model) SetIntegration(val OptNilIntegrationAccessTargetPublicV2Model) {
	s.Integration = val
}

// SetAccessScope sets the value of AccessScope.
func (s *AccessBundleAccessTargetPublicV2Model) SetAccessScope(val OptNilAccessScopeAccessTargetPublicV2Model) {
	s.AccessScope = val
}

// AccessBundleAccessTargetUpsertV2.
// Ref: #/components/schemas/AccessBundleAccessTargetUpsertPublicV2Model
type AccessBundleAccessTargetUpsertPublicV2Model struct {
	Integration OptNilIntegrationAccessTargetUpsertPublicV2Model `json:"integration"`
	AccessScope OptNilAccessScopeAccessTargetUpsertPublicV2Model `json:"access_scope"`
}

// GetIntegration returns the value of Integration.
func (s *AccessBundleAccessTargetUpsertPublicV2Model) GetIntegration() OptNilIntegrationAccessTargetUpsertPublicV2Model {
	return s.Integration
}

// GetAccessScope returns the value of AccessScope.
func (s *AccessBundleAccessTargetUpsertPublicV2Model) GetAccessScope() OptNilAccessScopeAccessTargetUpsertPublicV2Model {
	return s.AccessScope
}

// SetIntegration sets the value of Integration.
func (s *AccessBundleAccessTargetUpsertPublicV2Model) SetIntegration(val OptNilIntegrationAccessTargetUpsertPublicV2Model) {
	s.Integration = val
}

// SetAccessScope sets the value of AccessScope.
func (s *AccessBundleAccessTargetUpsertPublicV2Model) SetAccessScope(val OptNilAccessScopeAccessTargetUpsertPublicV2Model) {
	s.AccessScope = val
}

// Ref: #/components/schemas/AccessBundleV1
type AccessBundleV1 struct {
	ID                 string                      `json:"id"`
	Name               string                      `json:"name"`
	IntegrationTargets []AccessTargetIntegrationV1 `json:"integration_targets"`
}

// GetID returns the value of ID.
func (s *AccessBundleV1) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *AccessBundleV1) GetName() string {
	return s.Name
}

// GetIntegrationTargets returns the value of IntegrationTargets.
func (s *AccessBundleV1) GetIntegrationTargets() []AccessTargetIntegrationV1 {
	return s.IntegrationTargets
}

// SetID sets the value of ID.
func (s *AccessBundleV1) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AccessBundleV1) SetName(val string) {
	s.Name = val
}

// SetIntegrationTargets sets the value of IntegrationTargets.
func (s *AccessBundleV1) SetIntegrationTargets(val []AccessTargetIntegrationV1) {
	s.IntegrationTargets = val
}

// AccessFlowV2.
// Ref: #/components/schemas/AccessFlowPublicV2Model
type AccessFlowPublicV2Model struct {
	ID                 string                                 `json:"id"`
	Name               string                                 `json:"name"`
	Active             bool                                   `json:"active"`
	Trigger            string                                 `json:"trigger"`
	Requestors         RequestorsPublicV2Model                `json:"requestors"`
	AccessTargets      []AccessTargetPublicV2Model            `json:"access_targets"`
	ApproverPolicy     OptNilApproverPolicyPublicV2Model      `json:"approver_policy"`
	GrantDurationInMin OptNilInt32                            `json:"grant_duration_in_min"`
	Timeframe          OptNilAccessFlowTimeframePublicV2Model `json:"timeframe"`
	Settings           AccessFlowSettingsPublicV2Model        `json:"settings"`
	CreationDate       ApiInstant                             `json:"creation_date"`
	UpdateDate         OptNilApiInstant                       `json:"update_date"`
}

// GetID returns the value of ID.
func (s *AccessFlowPublicV2Model) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *AccessFlowPublicV2Model) GetName() string {
	return s.Name
}

// GetActive returns the value of Active.
func (s *AccessFlowPublicV2Model) GetActive() bool {
	return s.Active
}

// GetTrigger returns the value of Trigger.
func (s *AccessFlowPublicV2Model) GetTrigger() string {
	return s.Trigger
}

// GetRequestors returns the value of Requestors.
func (s *AccessFlowPublicV2Model) GetRequestors() RequestorsPublicV2Model {
	return s.Requestors
}

// GetAccessTargets returns the value of AccessTargets.
func (s *AccessFlowPublicV2Model) GetAccessTargets() []AccessTargetPublicV2Model {
	return s.AccessTargets
}

// GetApproverPolicy returns the value of ApproverPolicy.
func (s *AccessFlowPublicV2Model) GetApproverPolicy() OptNilApproverPolicyPublicV2Model {
	return s.ApproverPolicy
}

// GetGrantDurationInMin returns the value of GrantDurationInMin.
func (s *AccessFlowPublicV2Model) GetGrantDurationInMin() OptNilInt32 {
	return s.GrantDurationInMin
}

// GetTimeframe returns the value of Timeframe.
func (s *AccessFlowPublicV2Model) GetTimeframe() OptNilAccessFlowTimeframePublicV2Model {
	return s.Timeframe
}

// GetSettings returns the value of Settings.
func (s *AccessFlowPublicV2Model) GetSettings() AccessFlowSettingsPublicV2Model {
	return s.Settings
}

// GetCreationDate returns the value of CreationDate.
func (s *AccessFlowPublicV2Model) GetCreationDate() ApiInstant {
	return s.CreationDate
}

// GetUpdateDate returns the value of UpdateDate.
func (s *AccessFlowPublicV2Model) GetUpdateDate() OptNilApiInstant {
	return s.UpdateDate
}

// SetID sets the value of ID.
func (s *AccessFlowPublicV2Model) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AccessFlowPublicV2Model) SetName(val string) {
	s.Name = val
}

// SetActive sets the value of Active.
func (s *AccessFlowPublicV2Model) SetActive(val bool) {
	s.Active = val
}

// SetTrigger sets the value of Trigger.
func (s *AccessFlowPublicV2Model) SetTrigger(val string) {
	s.Trigger = val
}

// SetRequestors sets the value of Requestors.
func (s *AccessFlowPublicV2Model) SetRequestors(val RequestorsPublicV2Model) {
	s.Requestors = val
}

// SetAccessTargets sets the value of AccessTargets.
func (s *AccessFlowPublicV2Model) SetAccessTargets(val []AccessTargetPublicV2Model) {
	s.AccessTargets = val
}

// SetApproverPolicy sets the value of ApproverPolicy.
func (s *AccessFlowPublicV2Model) SetApproverPolicy(val OptNilApproverPolicyPublicV2Model) {
	s.ApproverPolicy = val
}

// SetGrantDurationInMin sets the value of GrantDurationInMin.
func (s *AccessFlowPublicV2Model) SetGrantDurationInMin(val OptNilInt32) {
	s.GrantDurationInMin = val
}

// SetTimeframe sets the value of Timeframe.
func (s *AccessFlowPublicV2Model) SetTimeframe(val OptNilAccessFlowTimeframePublicV2Model) {
	s.Timeframe = val
}

// SetSettings sets the value of Settings.
func (s *AccessFlowPublicV2Model) SetSettings(val AccessFlowSettingsPublicV2Model) {
	s.Settings = val
}

// SetCreationDate sets the value of CreationDate.
func (s *AccessFlowPublicV2Model) SetCreationDate(val ApiInstant) {
	s.CreationDate = val
}

// SetUpdateDate sets the value of UpdateDate.
func (s *AccessFlowPublicV2Model) SetUpdateDate(val OptNilApiInstant) {
	s.UpdateDate = val
}

// AccessFlowSettingsV2.
// Ref: #/components/schemas/AccessFlowSettingsPublicV2Model
type AccessFlowSettingsPublicV2Model struct {
	JustificationRequired        bool     `json:"justification_required"`
	RequireApproverReason        bool     `json:"require_approver_reason"`
	ApproverCannotApproveHimself bool     `json:"approver_cannot_approve_himself"`
	RequireMfa                   bool     `json:"require_mfa"`
	Labels                       []string `json:"labels"`
}

// GetJustificationRequired returns the value of JustificationRequired.
func (s *AccessFlowSettingsPublicV2Model) GetJustificationRequired() bool {
	return s.JustificationRequired
}

// GetRequireApproverReason returns the value of RequireApproverReason.
func (s *AccessFlowSettingsPublicV2Model) GetRequireApproverReason() bool {
	return s.RequireApproverReason
}

// GetApproverCannotApproveHimself returns the value of ApproverCannotApproveHimself.
func (s *AccessFlowSettingsPublicV2Model) GetApproverCannotApproveHimself() bool {
	return s.ApproverCannotApproveHimself
}

// GetRequireMfa returns the value of RequireMfa.
func (s *AccessFlowSettingsPublicV2Model) GetRequireMfa() bool {
	return s.RequireMfa
}

// GetLabels returns the value of Labels.
func (s *AccessFlowSettingsPublicV2Model) GetLabels() []string {
	return s.Labels
}

// SetJustificationRequired sets the value of JustificationRequired.
func (s *AccessFlowSettingsPublicV2Model) SetJustificationRequired(val bool) {
	s.JustificationRequired = val
}

// SetRequireApproverReason sets the value of RequireApproverReason.
func (s *AccessFlowSettingsPublicV2Model) SetRequireApproverReason(val bool) {
	s.RequireApproverReason = val
}

// SetApproverCannotApproveHimself sets the value of ApproverCannotApproveHimself.
func (s *AccessFlowSettingsPublicV2Model) SetApproverCannotApproveHimself(val bool) {
	s.ApproverCannotApproveHimself = val
}

// SetRequireMfa sets the value of RequireMfa.
func (s *AccessFlowSettingsPublicV2Model) SetRequireMfa(val bool) {
	s.RequireMfa = val
}

// SetLabels sets the value of Labels.
func (s *AccessFlowSettingsPublicV2Model) SetLabels(val []string) {
	s.Labels = val
}

// Ref: #/components/schemas/AccessFlowSettingsV1
type AccessFlowSettingsV1 struct {
	RequireJustificationOnRequestAgain OptNilBool `json:"require_justification_on_request_again"`
	RequireAllApprovers                OptNilBool `json:"require_all_approvers"`
	RequireApproverJustification       OptNilBool `json:"require_approver_justification"`
	ApproverCannotApproveHimself       OptNilBool `json:"approver_cannot_approve_himself"`
}

// GetRequireJustificationOnRequestAgain returns the value of RequireJustificationOnRequestAgain.
func (s *AccessFlowSettingsV1) GetRequireJustificationOnRequestAgain() OptNilBool {
	return s.RequireJustificationOnRequestAgain
}

// GetRequireAllApprovers returns the value of RequireAllApprovers.
func (s *AccessFlowSettingsV1) GetRequireAllApprovers() OptNilBool {
	return s.RequireAllApprovers
}

// GetRequireApproverJustification returns the value of RequireApproverJustification.
func (s *AccessFlowSettingsV1) GetRequireApproverJustification() OptNilBool {
	return s.RequireApproverJustification
}

// GetApproverCannotApproveHimself returns the value of ApproverCannotApproveHimself.
func (s *AccessFlowSettingsV1) GetApproverCannotApproveHimself() OptNilBool {
	return s.ApproverCannotApproveHimself
}

// SetRequireJustificationOnRequestAgain sets the value of RequireJustificationOnRequestAgain.
func (s *AccessFlowSettingsV1) SetRequireJustificationOnRequestAgain(val OptNilBool) {
	s.RequireJustificationOnRequestAgain = val
}

// SetRequireAllApprovers sets the value of RequireAllApprovers.
func (s *AccessFlowSettingsV1) SetRequireAllApprovers(val OptNilBool) {
	s.RequireAllApprovers = val
}

// SetRequireApproverJustification sets the value of RequireApproverJustification.
func (s *AccessFlowSettingsV1) SetRequireApproverJustification(val OptNilBool) {
	s.RequireApproverJustification = val
}

// SetApproverCannotApproveHimself sets the value of ApproverCannotApproveHimself.
func (s *AccessFlowSettingsV1) SetApproverCannotApproveHimself(val OptNilBool) {
	s.ApproverCannotApproveHimself = val
}

// AccessFlowTimeframeV2.
// Ref: #/components/schemas/AccessFlowTimeframePublicV2Model
type AccessFlowTimeframePublicV2Model struct {
	StartTime  string                   `json:"start_time"`
	EndTime    string                   `json:"end_time"`
	DaysOfWeek []DayOfWeekPublicV2Model `json:"days_of_week"`
	TimeZone   string                   `json:"time_zone"`
}

// GetStartTime returns the value of StartTime.
func (s *AccessFlowTimeframePublicV2Model) GetStartTime() string {
	return s.StartTime
}

// GetEndTime returns the value of EndTime.
func (s *AccessFlowTimeframePublicV2Model) GetEndTime() string {
	return s.EndTime
}

// GetDaysOfWeek returns the value of DaysOfWeek.
func (s *AccessFlowTimeframePublicV2Model) GetDaysOfWeek() []DayOfWeekPublicV2Model {
	return s.DaysOfWeek
}

// GetTimeZone returns the value of TimeZone.
func (s *AccessFlowTimeframePublicV2Model) GetTimeZone() string {
	return s.TimeZone
}

// SetStartTime sets the value of StartTime.
func (s *AccessFlowTimeframePublicV2Model) SetStartTime(val string) {
	s.StartTime = val
}

// SetEndTime sets the value of EndTime.
func (s *AccessFlowTimeframePublicV2Model) SetEndTime(val string) {
	s.EndTime = val
}

// SetDaysOfWeek sets the value of DaysOfWeek.
func (s *AccessFlowTimeframePublicV2Model) SetDaysOfWeek(val []DayOfWeekPublicV2Model) {
	s.DaysOfWeek = val
}

// SetTimeZone sets the value of TimeZone.
func (s *AccessFlowTimeframePublicV2Model) SetTimeZone(val string) {
	s.TimeZone = val
}

// Ref: #/components/schemas/AccessFlowTriggerV1
type AccessFlowTriggerV1 struct {
	Type      string            `json:"type"`
	Timeframe OptNilTimeframeV1 `json:"timeframe"`
}

// GetType returns the value of Type.
func (s *AccessFlowTriggerV1) GetType() string {
	return s.Type
}

// GetTimeframe returns the value of Timeframe.
func (s *AccessFlowTriggerV1) GetTimeframe() OptNilTimeframeV1 {
	return s.Timeframe
}

// SetType sets the value of Type.
func (s *AccessFlowTriggerV1) SetType(val string) {
	s.Type = val
}

// SetTimeframe sets the value of Timeframe.
func (s *AccessFlowTriggerV1) SetTimeframe(val OptNilTimeframeV1) {
	s.Timeframe = val
}

// AccessFlowUpsertV2.
// Ref: #/components/schemas/AccessFlowUpsertPublicV2Model
type AccessFlowUpsertPublicV2Model struct {
	Name               string                                  `json:"name"`
	Active             bool                                    `json:"active"`
	Trigger            string                                  `json:"trigger"`
	Requestors         RequestorsUpsertPublicV2Model           `json:"requestors"`
	AccessTargets      []AccessTargetUpsertPublicV2Model       `json:"access_targets"`
	ApproverPolicy     OptNilApproverPolicyUpsertPublicV2Model `json:"approver_policy"`
	GrantDurationInMin OptNilInt32                             `json:"grant_duration_in_min"`
	Timeframe          OptNilAccessFlowTimeframePublicV2Model  `json:"timeframe"`
	Settings           AccessFlowSettingsPublicV2Model         `json:"settings"`
}

// GetName returns the value of Name.
func (s *AccessFlowUpsertPublicV2Model) GetName() string {
	return s.Name
}

// GetActive returns the value of Active.
func (s *AccessFlowUpsertPublicV2Model) GetActive() bool {
	return s.Active
}

// GetTrigger returns the value of Trigger.
func (s *AccessFlowUpsertPublicV2Model) GetTrigger() string {
	return s.Trigger
}

// GetRequestors returns the value of Requestors.
func (s *AccessFlowUpsertPublicV2Model) GetRequestors() RequestorsUpsertPublicV2Model {
	return s.Requestors
}

// GetAccessTargets returns the value of AccessTargets.
func (s *AccessFlowUpsertPublicV2Model) GetAccessTargets() []AccessTargetUpsertPublicV2Model {
	return s.AccessTargets
}

// GetApproverPolicy returns the value of ApproverPolicy.
func (s *AccessFlowUpsertPublicV2Model) GetApproverPolicy() OptNilApproverPolicyUpsertPublicV2Model {
	return s.ApproverPolicy
}

// GetGrantDurationInMin returns the value of GrantDurationInMin.
func (s *AccessFlowUpsertPublicV2Model) GetGrantDurationInMin() OptNilInt32 {
	return s.GrantDurationInMin
}

// GetTimeframe returns the value of Timeframe.
func (s *AccessFlowUpsertPublicV2Model) GetTimeframe() OptNilAccessFlowTimeframePublicV2Model {
	return s.Timeframe
}

// GetSettings returns the value of Settings.
func (s *AccessFlowUpsertPublicV2Model) GetSettings() AccessFlowSettingsPublicV2Model {
	return s.Settings
}

// SetName sets the value of Name.
func (s *AccessFlowUpsertPublicV2Model) SetName(val string) {
	s.Name = val
}

// SetActive sets the value of Active.
func (s *AccessFlowUpsertPublicV2Model) SetActive(val bool) {
	s.Active = val
}

// SetTrigger sets the value of Trigger.
func (s *AccessFlowUpsertPublicV2Model) SetTrigger(val string) {
	s.Trigger = val
}

// SetRequestors sets the value of Requestors.
func (s *AccessFlowUpsertPublicV2Model) SetRequestors(val RequestorsUpsertPublicV2Model) {
	s.Requestors = val
}

// SetAccessTargets sets the value of AccessTargets.
func (s *AccessFlowUpsertPublicV2Model) SetAccessTargets(val []AccessTargetUpsertPublicV2Model) {
	s.AccessTargets = val
}

// SetApproverPolicy sets the value of ApproverPolicy.
func (s *AccessFlowUpsertPublicV2Model) SetApproverPolicy(val OptNilApproverPolicyUpsertPublicV2Model) {
	s.ApproverPolicy = val
}

// SetGrantDurationInMin sets the value of GrantDurationInMin.
func (s *AccessFlowUpsertPublicV2Model) SetGrantDurationInMin(val OptNilInt32) {
	s.GrantDurationInMin = val
}

// SetTimeframe sets the value of Timeframe.
func (s *AccessFlowUpsertPublicV2Model) SetTimeframe(val OptNilAccessFlowTimeframePublicV2Model) {
	s.Timeframe = val
}

// SetSettings sets the value of Settings.
func (s *AccessFlowUpsertPublicV2Model) SetSettings(val AccessFlowSettingsPublicV2Model) {
	s.Settings = val
}

// Ref: #/components/schemas/AccessFlowV1
type AccessFlowV1 struct {
	ID                 string                      `json:"id"`
	Name               string                      `json:"name"`
	Active             bool                        `json:"active"`
	Trigger            AccessFlowTriggerV1         `json:"trigger"`
	Grantees           []GranteeV1                 `json:"grantees"`
	IntegrationTargets []AccessTargetIntegrationV1 `json:"integration_targets"`
	BundleTargets      []AccessTargetBundleV1      `json:"bundle_targets"`
	Approvers          OptNilApproverV1Array       `json:"approvers"`
	RevokeAfterInSec   int32                       `json:"revoke_after_in_sec"`
	Settings           OptNilAccessFlowSettingsV1  `json:"settings"`
	CreatedDate        Instant                     `json:"created_date"`
}

// GetID returns the value of ID.
func (s *AccessFlowV1) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *AccessFlowV1) GetName() string {
	return s.Name
}

// GetActive returns the value of Active.
func (s *AccessFlowV1) GetActive() bool {
	return s.Active
}

// GetTrigger returns the value of Trigger.
func (s *AccessFlowV1) GetTrigger() AccessFlowTriggerV1 {
	return s.Trigger
}

// GetGrantees returns the value of Grantees.
func (s *AccessFlowV1) GetGrantees() []GranteeV1 {
	return s.Grantees
}

// GetIntegrationTargets returns the value of IntegrationTargets.
func (s *AccessFlowV1) GetIntegrationTargets() []AccessTargetIntegrationV1 {
	return s.IntegrationTargets
}

// GetBundleTargets returns the value of BundleTargets.
func (s *AccessFlowV1) GetBundleTargets() []AccessTargetBundleV1 {
	return s.BundleTargets
}

// GetApprovers returns the value of Approvers.
func (s *AccessFlowV1) GetApprovers() OptNilApproverV1Array {
	return s.Approvers
}

// GetRevokeAfterInSec returns the value of RevokeAfterInSec.
func (s *AccessFlowV1) GetRevokeAfterInSec() int32 {
	return s.RevokeAfterInSec
}

// GetSettings returns the value of Settings.
func (s *AccessFlowV1) GetSettings() OptNilAccessFlowSettingsV1 {
	return s.Settings
}

// GetCreatedDate returns the value of CreatedDate.
func (s *AccessFlowV1) GetCreatedDate() Instant {
	return s.CreatedDate
}

// SetID sets the value of ID.
func (s *AccessFlowV1) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AccessFlowV1) SetName(val string) {
	s.Name = val
}

// SetActive sets the value of Active.
func (s *AccessFlowV1) SetActive(val bool) {
	s.Active = val
}

// SetTrigger sets the value of Trigger.
func (s *AccessFlowV1) SetTrigger(val AccessFlowTriggerV1) {
	s.Trigger = val
}

// SetGrantees sets the value of Grantees.
func (s *AccessFlowV1) SetGrantees(val []GranteeV1) {
	s.Grantees = val
}

// SetIntegrationTargets sets the value of IntegrationTargets.
func (s *AccessFlowV1) SetIntegrationTargets(val []AccessTargetIntegrationV1) {
	s.IntegrationTargets = val
}

// SetBundleTargets sets the value of BundleTargets.
func (s *AccessFlowV1) SetBundleTargets(val []AccessTargetBundleV1) {
	s.BundleTargets = val
}

// SetApprovers sets the value of Approvers.
func (s *AccessFlowV1) SetApprovers(val OptNilApproverV1Array) {
	s.Approvers = val
}

// SetRevokeAfterInSec sets the value of RevokeAfterInSec.
func (s *AccessFlowV1) SetRevokeAfterInSec(val int32) {
	s.RevokeAfterInSec = val
}

// SetSettings sets the value of Settings.
func (s *AccessFlowV1) SetSettings(val OptNilAccessFlowSettingsV1) {
	s.Settings = val
}

// SetCreatedDate sets the value of CreatedDate.
func (s *AccessFlowV1) SetCreatedDate(val Instant) {
	s.CreatedDate = val
}

// Ref: #/components/schemas/AccessRequest
type AccessRequest struct {
	RequestID         string            `json:"request_id"`
	FriendlyRequestID string            `json:"friendly_request_id"`
	UserID            string            `json:"user_id"`
	Status            AccessStatusModel `json:"status"`
	IntegrationID     string            `json:"integration_id"`
	ResourceIds       []string          `json:"resource_ids"`
	Permissions       []string          `json:"permissions"`
	Justification     string            `json:"justification"`
}

// GetRequestID returns the value of RequestID.
func (s *AccessRequest) GetRequestID() string {
	return s.RequestID
}

// GetFriendlyRequestID returns the value of FriendlyRequestID.
func (s *AccessRequest) GetFriendlyRequestID() string {
	return s.FriendlyRequestID
}

// GetUserID returns the value of UserID.
func (s *AccessRequest) GetUserID() string {
	return s.UserID
}

// GetStatus returns the value of Status.
func (s *AccessRequest) GetStatus() AccessStatusModel {
	return s.Status
}

// GetIntegrationID returns the value of IntegrationID.
func (s *AccessRequest) GetIntegrationID() string {
	return s.IntegrationID
}

// GetResourceIds returns the value of ResourceIds.
func (s *AccessRequest) GetResourceIds() []string {
	return s.ResourceIds
}

// GetPermissions returns the value of Permissions.
func (s *AccessRequest) GetPermissions() []string {
	return s.Permissions
}

// GetJustification returns the value of Justification.
func (s *AccessRequest) GetJustification() string {
	return s.Justification
}

// SetRequestID sets the value of RequestID.
func (s *AccessRequest) SetRequestID(val string) {
	s.RequestID = val
}

// SetFriendlyRequestID sets the value of FriendlyRequestID.
func (s *AccessRequest) SetFriendlyRequestID(val string) {
	s.FriendlyRequestID = val
}

// SetUserID sets the value of UserID.
func (s *AccessRequest) SetUserID(val string) {
	s.UserID = val
}

// SetStatus sets the value of Status.
func (s *AccessRequest) SetStatus(val AccessStatusModel) {
	s.Status = val
}

// SetIntegrationID sets the value of IntegrationID.
func (s *AccessRequest) SetIntegrationID(val string) {
	s.IntegrationID = val
}

// SetResourceIds sets the value of ResourceIds.
func (s *AccessRequest) SetResourceIds(val []string) {
	s.ResourceIds = val
}

// SetPermissions sets the value of Permissions.
func (s *AccessRequest) SetPermissions(val []string) {
	s.Permissions = val
}

// SetJustification sets the value of Justification.
func (s *AccessRequest) SetJustification(val string) {
	s.Justification = val
}

// Ref: #/components/schemas/AccessRequestAccessGroupV4
type AccessRequestAccessGroupV4 struct {
	Integration   IntegrationPartialV4 `json:"integration"`
	ResourceTypes []ResourceTypeV4     `json:"resource_types"`
}

// GetIntegration returns the value of Integration.
func (s *AccessRequestAccessGroupV4) GetIntegration() IntegrationPartialV4 {
	return s.Integration
}

// GetResourceTypes returns the value of ResourceTypes.
func (s *AccessRequestAccessGroupV4) GetResourceTypes() []ResourceTypeV4 {
	return s.ResourceTypes
}

// SetIntegration sets the value of Integration.
func (s *AccessRequestAccessGroupV4) SetIntegration(val IntegrationPartialV4) {
	s.Integration = val
}

// SetResourceTypes sets the value of ResourceTypes.
func (s *AccessRequestAccessGroupV4) SetResourceTypes(val []ResourceTypeV4) {
	s.ResourceTypes = val
}

// Ref: #/components/schemas/AccessRequestEntitlementV4
type AccessRequestEntitlementV4 struct {
	Integration IntegrationPartialV4           `json:"integration"`
	Resource    EntitlementResourceV4          `json:"resource"`
	Permission  RequestEntitlementPermissionV4 `json:"permission"`
	Status      string                         `json:"status"`
}

// GetIntegration returns the value of Integration.
func (s *AccessRequestEntitlementV4) GetIntegration() IntegrationPartialV4 {
	return s.Integration
}

// GetResource returns the value of Resource.
func (s *AccessRequestEntitlementV4) GetResource() EntitlementResourceV4 {
	return s.Resource
}

// GetPermission returns the value of Permission.
func (s *AccessRequestEntitlementV4) GetPermission() RequestEntitlementPermissionV4 {
	return s.Permission
}

// GetStatus returns the value of Status.
func (s *AccessRequestEntitlementV4) GetStatus() string {
	return s.Status
}

// SetIntegration sets the value of Integration.
func (s *AccessRequestEntitlementV4) SetIntegration(val IntegrationPartialV4) {
	s.Integration = val
}

// SetResource sets the value of Resource.
func (s *AccessRequestEntitlementV4) SetResource(val EntitlementResourceV4) {
	s.Resource = val
}

// SetPermission sets the value of Permission.
func (s *AccessRequestEntitlementV4) SetPermission(val RequestEntitlementPermissionV4) {
	s.Permission = val
}

// SetStatus sets the value of Status.
func (s *AccessRequestEntitlementV4) SetStatus(val string) {
	s.Status = val
}

// Ref: #/components/schemas/AccessRequestV4
type AccessRequestV4 struct {
	ID             string                       `json:"id"`
	Status         string                       `json:"status"`
	DurationInSec  OptNilInt32                  `json:"duration_in_sec"`
	Justification  OptNilString                 `json:"justification"`
	CreationDate   ApiInstant                   `json:"creation_date"`
	RevocationDate OptNilApiInstant             `json:"revocation_date"`
	CustomFields   AccessRequestV4CustomFields  `json:"custom_fields"`
	AccessGroups   []AccessRequestAccessGroupV4 `json:"access_groups"`
	Bundle         OptNilBundlePartialV4        `json:"bundle"`
}

// GetID returns the value of ID.
func (s *AccessRequestV4) GetID() string {
	return s.ID
}

// GetStatus returns the value of Status.
func (s *AccessRequestV4) GetStatus() string {
	return s.Status
}

// GetDurationInSec returns the value of DurationInSec.
func (s *AccessRequestV4) GetDurationInSec() OptNilInt32 {
	return s.DurationInSec
}

// GetJustification returns the value of Justification.
func (s *AccessRequestV4) GetJustification() OptNilString {
	return s.Justification
}

// GetCreationDate returns the value of CreationDate.
func (s *AccessRequestV4) GetCreationDate() ApiInstant {
	return s.CreationDate
}

// GetRevocationDate returns the value of RevocationDate.
func (s *AccessRequestV4) GetRevocationDate() OptNilApiInstant {
	return s.RevocationDate
}

// GetCustomFields returns the value of CustomFields.
func (s *AccessRequestV4) GetCustomFields() AccessRequestV4CustomFields {
	return s.CustomFields
}

// GetAccessGroups returns the value of AccessGroups.
func (s *AccessRequestV4) GetAccessGroups() []AccessRequestAccessGroupV4 {
	return s.AccessGroups
}

// GetBundle returns the value of Bundle.
func (s *AccessRequestV4) GetBundle() OptNilBundlePartialV4 {
	return s.Bundle
}

// SetID sets the value of ID.
func (s *AccessRequestV4) SetID(val string) {
	s.ID = val
}

// SetStatus sets the value of Status.
func (s *AccessRequestV4) SetStatus(val string) {
	s.Status = val
}

// SetDurationInSec sets the value of DurationInSec.
func (s *AccessRequestV4) SetDurationInSec(val OptNilInt32) {
	s.DurationInSec = val
}

// SetJustification sets the value of Justification.
func (s *AccessRequestV4) SetJustification(val OptNilString) {
	s.Justification = val
}

// SetCreationDate sets the value of CreationDate.
func (s *AccessRequestV4) SetCreationDate(val ApiInstant) {
	s.CreationDate = val
}

// SetRevocationDate sets the value of RevocationDate.
func (s *AccessRequestV4) SetRevocationDate(val OptNilApiInstant) {
	s.RevocationDate = val
}

// SetCustomFields sets the value of CustomFields.
func (s *AccessRequestV4) SetCustomFields(val AccessRequestV4CustomFields) {
	s.CustomFields = val
}

// SetAccessGroups sets the value of AccessGroups.
func (s *AccessRequestV4) SetAccessGroups(val []AccessRequestAccessGroupV4) {
	s.AccessGroups = val
}

// SetBundle sets the value of Bundle.
func (s *AccessRequestV4) SetBundle(val OptNilBundlePartialV4) {
	s.Bundle = val
}

type AccessRequestV4CustomFields map[string]string

func (s *AccessRequestV4CustomFields) init() AccessRequestV4CustomFields {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/AccessRequestsBulkRevokeRequestV3
type AccessRequestsBulkRevokeRequestV3 struct {
	RequestIds []string `json:"request_ids"`
}

// GetRequestIds returns the value of RequestIds.
func (s *AccessRequestsBulkRevokeRequestV3) GetRequestIds() []string {
	return s.RequestIds
}

// SetRequestIds sets the value of RequestIds.
func (s *AccessRequestsBulkRevokeRequestV3) SetRequestIds(val []string) {
	s.RequestIds = val
}

// AccessScopeAccessTargetV2.
// Ref: #/components/schemas/AccessScopeAccessTargetPublicV2Model
type AccessScopeAccessTargetPublicV2Model struct {
	AccessScopeID   string `json:"access_scope_id"`
	AccessScopeName string `json:"access_scope_name"`
}

// GetAccessScopeID returns the value of AccessScopeID.
func (s *AccessScopeAccessTargetPublicV2Model) GetAccessScopeID() string {
	return s.AccessScopeID
}

// GetAccessScopeName returns the value of AccessScopeName.
func (s *AccessScopeAccessTargetPublicV2Model) GetAccessScopeName() string {
	return s.AccessScopeName
}

// SetAccessScopeID sets the value of AccessScopeID.
func (s *AccessScopeAccessTargetPublicV2Model) SetAccessScopeID(val string) {
	s.AccessScopeID = val
}

// SetAccessScopeName sets the value of AccessScopeName.
func (s *AccessScopeAccessTargetPublicV2Model) SetAccessScopeName(val string) {
	s.AccessScopeName = val
}

// AccessScopeAccessTargetUpsertV2.
// Ref: #/components/schemas/AccessScopeAccessTargetUpsertPublicV2Model
type AccessScopeAccessTargetUpsertPublicV2Model struct {
	AccessScopeReference string `json:"access_scope_reference"`
}

// GetAccessScopeReference returns the value of AccessScopeReference.
func (s *AccessScopeAccessTargetUpsertPublicV2Model) GetAccessScopeReference() string {
	return s.AccessScopeReference
}

// SetAccessScopeReference sets the value of AccessScopeReference.
func (s *AccessScopeAccessTargetUpsertPublicV2Model) SetAccessScopeReference(val string) {
	s.AccessScopeReference = val
}

// Ref: #/components/schemas/AccessScopeV1
type AccessScopeV1 struct {
	ID           string     `json:"id"`
	Name         string     `json:"name"`
	Query        string     `json:"query"`
	CreationDate ApiInstant `json:"creation_date"`
	UpdateDate   ApiInstant `json:"update_date"`
}

// GetID returns the value of ID.
func (s *AccessScopeV1) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *AccessScopeV1) GetName() string {
	return s.Name
}

// GetQuery returns the value of Query.
func (s *AccessScopeV1) GetQuery() string {
	return s.Query
}

// GetCreationDate returns the value of CreationDate.
func (s *AccessScopeV1) GetCreationDate() ApiInstant {
	return s.CreationDate
}

// GetUpdateDate returns the value of UpdateDate.
func (s *AccessScopeV1) GetUpdateDate() ApiInstant {
	return s.UpdateDate
}

// SetID sets the value of ID.
func (s *AccessScopeV1) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AccessScopeV1) SetName(val string) {
	s.Name = val
}

// SetQuery sets the value of Query.
func (s *AccessScopeV1) SetQuery(val string) {
	s.Query = val
}

// SetCreationDate sets the value of CreationDate.
func (s *AccessScopeV1) SetCreationDate(val ApiInstant) {
	s.CreationDate = val
}

// SetUpdateDate sets the value of UpdateDate.
func (s *AccessScopeV1) SetUpdateDate(val ApiInstant) {
	s.UpdateDate = val
}

// Ref: #/components/schemas/AccessSessionDetailsV1
type AccessSessionDetailsV1 struct {
	Instructions       string                                 `json:"instructions"`
	CustomAdminMessage OptNilString                           `json:"custom_admin_message"`
	Parameters         OptNilAccessSessionDetailsV1Parameters `json:"parameters"`
	Cli                OptNilString                           `json:"cli"`
	Link               OptNilLinkV1                           `json:"link"`
}

// GetInstructions returns the value of Instructions.
func (s *AccessSessionDetailsV1) GetInstructions() string {
	return s.Instructions
}

// GetCustomAdminMessage returns the value of CustomAdminMessage.
func (s *AccessSessionDetailsV1) GetCustomAdminMessage() OptNilString {
	return s.CustomAdminMessage
}

// GetParameters returns the value of Parameters.
func (s *AccessSessionDetailsV1) GetParameters() OptNilAccessSessionDetailsV1Parameters {
	return s.Parameters
}

// GetCli returns the value of Cli.
func (s *AccessSessionDetailsV1) GetCli() OptNilString {
	return s.Cli
}

// GetLink returns the value of Link.
func (s *AccessSessionDetailsV1) GetLink() OptNilLinkV1 {
	return s.Link
}

// SetInstructions sets the value of Instructions.
func (s *AccessSessionDetailsV1) SetInstructions(val string) {
	s.Instructions = val
}

// SetCustomAdminMessage sets the value of CustomAdminMessage.
func (s *AccessSessionDetailsV1) SetCustomAdminMessage(val OptNilString) {
	s.CustomAdminMessage = val
}

// SetParameters sets the value of Parameters.
func (s *AccessSessionDetailsV1) SetParameters(val OptNilAccessSessionDetailsV1Parameters) {
	s.Parameters = val
}

// SetCli sets the value of Cli.
func (s *AccessSessionDetailsV1) SetCli(val OptNilString) {
	s.Cli = val
}

// SetLink sets the value of Link.
func (s *AccessSessionDetailsV1) SetLink(val OptNilLinkV1) {
	s.Link = val
}

type AccessSessionDetailsV1Parameters map[string]string

func (s *AccessSessionDetailsV1Parameters) init() AccessSessionDetailsV1Parameters {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/AccessSessionV1
type AccessSessionV1 struct {
	ID                  string               `json:"id"`
	Name                string               `json:"name"`
	Integration         IntegrationPartialV4 `json:"integration"`
	CredentialsStatus   string               `json:"credentials_status"`
	CanResetCredentials bool                 `json:"can_reset_credentials"`
}

// GetID returns the value of ID.
func (s *AccessSessionV1) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *AccessSessionV1) GetName() string {
	return s.Name
}

// GetIntegration returns the value of Integration.
func (s *AccessSessionV1) GetIntegration() IntegrationPartialV4 {
	return s.Integration
}

// GetCredentialsStatus returns the value of CredentialsStatus.
func (s *AccessSessionV1) GetCredentialsStatus() string {
	return s.CredentialsStatus
}

// GetCanResetCredentials returns the value of CanResetCredentials.
func (s *AccessSessionV1) GetCanResetCredentials() bool {
	return s.CanResetCredentials
}

// SetID sets the value of ID.
func (s *AccessSessionV1) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AccessSessionV1) SetName(val string) {
	s.Name = val
}

// SetIntegration sets the value of Integration.
func (s *AccessSessionV1) SetIntegration(val IntegrationPartialV4) {
	s.Integration = val
}

// SetCredentialsStatus sets the value of CredentialsStatus.
func (s *AccessSessionV1) SetCredentialsStatus(val string) {
	s.CredentialsStatus = val
}

// SetCanResetCredentials sets the value of CanResetCredentials.
func (s *AccessSessionV1) SetCanResetCredentials(val bool) {
	s.CanResetCredentials = val
}

// Ref: #/components/schemas/AccessStatusModel
type AccessStatusModel string

const (
	AccessStatusModelPENDING  AccessStatusModel = "PENDING"
	AccessStatusModelAPPROVED AccessStatusModel = "APPROVED"
	AccessStatusModelREJECTED AccessStatusModel = "REJECTED"
	AccessStatusModelGRANTED  AccessStatusModel = "GRANTED"
	AccessStatusModelREVOKING AccessStatusModel = "REVOKING"
	AccessStatusModelEXPIRED  AccessStatusModel = "EXPIRED"
	AccessStatusModelFAILED   AccessStatusModel = "FAILED"
)

// AllValues returns all AccessStatusModel values.
func (AccessStatusModel) AllValues() []AccessStatusModel {
	return []AccessStatusModel{
		AccessStatusModelPENDING,
		AccessStatusModelAPPROVED,
		AccessStatusModelREJECTED,
		AccessStatusModelGRANTED,
		AccessStatusModelREVOKING,
		AccessStatusModelEXPIRED,
		AccessStatusModelFAILED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AccessStatusModel) MarshalText() ([]byte, error) {
	switch s {
	case AccessStatusModelPENDING:
		return []byte(s), nil
	case AccessStatusModelAPPROVED:
		return []byte(s), nil
	case AccessStatusModelREJECTED:
		return []byte(s), nil
	case AccessStatusModelGRANTED:
		return []byte(s), nil
	case AccessStatusModelREVOKING:
		return []byte(s), nil
	case AccessStatusModelEXPIRED:
		return []byte(s), nil
	case AccessStatusModelFAILED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AccessStatusModel) UnmarshalText(data []byte) error {
	switch AccessStatusModel(data) {
	case AccessStatusModelPENDING:
		*s = AccessStatusModelPENDING
		return nil
	case AccessStatusModelAPPROVED:
		*s = AccessStatusModelAPPROVED
		return nil
	case AccessStatusModelREJECTED:
		*s = AccessStatusModelREJECTED
		return nil
	case AccessStatusModelGRANTED:
		*s = AccessStatusModelGRANTED
		return nil
	case AccessStatusModelREVOKING:
		*s = AccessStatusModelREVOKING
		return nil
	case AccessStatusModelEXPIRED:
		*s = AccessStatusModelEXPIRED
		return nil
	case AccessStatusModelFAILED:
		*s = AccessStatusModelFAILED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/AccessTargetBundleV1
type AccessTargetBundleV1 struct {
	BundleID string `json:"bundle_id"`
}

// GetBundleID returns the value of BundleID.
func (s *AccessTargetBundleV1) GetBundleID() string {
	return s.BundleID
}

// SetBundleID sets the value of BundleID.
func (s *AccessTargetBundleV1) SetBundleID(val string) {
	s.BundleID = val
}

// Ref: #/components/schemas/AccessTargetIntegrationV1
type AccessTargetIntegrationV1 struct {
	IntegrationID       string   `json:"integration_id"`
	ResourceType        string   `json:"resource_type"`
	ResourceTagIncludes []TagV1  `json:"resource_tag_includes"`
	ResourceTagExcludes []TagV1  `json:"resource_tag_excludes"`
	Permissions         []string `json:"permissions"`
}

// GetIntegrationID returns the value of IntegrationID.
func (s *AccessTargetIntegrationV1) GetIntegrationID() string {
	return s.IntegrationID
}

// GetResourceType returns the value of ResourceType.
func (s *AccessTargetIntegrationV1) GetResourceType() string {
	return s.ResourceType
}

// GetResourceTagIncludes returns the value of ResourceTagIncludes.
func (s *AccessTargetIntegrationV1) GetResourceTagIncludes() []TagV1 {
	return s.ResourceTagIncludes
}

// GetResourceTagExcludes returns the value of ResourceTagExcludes.
func (s *AccessTargetIntegrationV1) GetResourceTagExcludes() []TagV1 {
	return s.ResourceTagExcludes
}

// GetPermissions returns the value of Permissions.
func (s *AccessTargetIntegrationV1) GetPermissions() []string {
	return s.Permissions
}

// SetIntegrationID sets the value of IntegrationID.
func (s *AccessTargetIntegrationV1) SetIntegrationID(val string) {
	s.IntegrationID = val
}

// SetResourceType sets the value of ResourceType.
func (s *AccessTargetIntegrationV1) SetResourceType(val string) {
	s.ResourceType = val
}

// SetResourceTagIncludes sets the value of ResourceTagIncludes.
func (s *AccessTargetIntegrationV1) SetResourceTagIncludes(val []TagV1) {
	s.ResourceTagIncludes = val
}

// SetResourceTagExcludes sets the value of ResourceTagExcludes.
func (s *AccessTargetIntegrationV1) SetResourceTagExcludes(val []TagV1) {
	s.ResourceTagExcludes = val
}

// SetPermissions sets the value of Permissions.
func (s *AccessTargetIntegrationV1) SetPermissions(val []string) {
	s.Permissions = val
}

// AccessTargetV2.
// Ref: #/components/schemas/AccessTargetPublicV2Model
type AccessTargetPublicV2Model struct {
	Integration OptNilIntegrationAccessTargetPublicV2Model `json:"integration"`
	Bundle      OptNilBundleAccessTargetPublicV2Model      `json:"bundle"`
	AccessScope OptNilAccessScopeAccessTargetPublicV2Model `json:"access_scope"`
}

// GetIntegration returns the value of Integration.
func (s *AccessTargetPublicV2Model) GetIntegration() OptNilIntegrationAccessTargetPublicV2Model {
	return s.Integration
}

// GetBundle returns the value of Bundle.
func (s *AccessTargetPublicV2Model) GetBundle() OptNilBundleAccessTargetPublicV2Model {
	return s.Bundle
}

// GetAccessScope returns the value of AccessScope.
func (s *AccessTargetPublicV2Model) GetAccessScope() OptNilAccessScopeAccessTargetPublicV2Model {
	return s.AccessScope
}

// SetIntegration sets the value of Integration.
func (s *AccessTargetPublicV2Model) SetIntegration(val OptNilIntegrationAccessTargetPublicV2Model) {
	s.Integration = val
}

// SetBundle sets the value of Bundle.
func (s *AccessTargetPublicV2Model) SetBundle(val OptNilBundleAccessTargetPublicV2Model) {
	s.Bundle = val
}

// SetAccessScope sets the value of AccessScope.
func (s *AccessTargetPublicV2Model) SetAccessScope(val OptNilAccessScopeAccessTargetPublicV2Model) {
	s.AccessScope = val
}

// AccessTargetUpsertV2.
// Ref: #/components/schemas/AccessTargetUpsertPublicV2Model
type AccessTargetUpsertPublicV2Model struct {
	Integration OptNilIntegrationAccessTargetUpsertPublicV2Model `json:"integration"`
	Bundle      OptNilBundleAccessTargetUpsertPublicV2Model      `json:"bundle"`
	AccessScope OptNilAccessScopeAccessTargetUpsertPublicV2Model `json:"access_scope"`
}

// GetIntegration returns the value of Integration.
func (s *AccessTargetUpsertPublicV2Model) GetIntegration() OptNilIntegrationAccessTargetUpsertPublicV2Model {
	return s.Integration
}

// GetBundle returns the value of Bundle.
func (s *AccessTargetUpsertPublicV2Model) GetBundle() OptNilBundleAccessTargetUpsertPublicV2Model {
	return s.Bundle
}

// GetAccessScope returns the value of AccessScope.
func (s *AccessTargetUpsertPublicV2Model) GetAccessScope() OptNilAccessScopeAccessTargetUpsertPublicV2Model {
	return s.AccessScope
}

// SetIntegration sets the value of Integration.
func (s *AccessTargetUpsertPublicV2Model) SetIntegration(val OptNilIntegrationAccessTargetUpsertPublicV2Model) {
	s.Integration = val
}

// SetBundle sets the value of Bundle.
func (s *AccessTargetUpsertPublicV2Model) SetBundle(val OptNilBundleAccessTargetUpsertPublicV2Model) {
	s.Bundle = val
}

// SetAccessScope sets the value of AccessScope.
func (s *AccessTargetUpsertPublicV2Model) SetAccessScope(val OptNilAccessScopeAccessTargetUpsertPublicV2Model) {
	s.AccessScope = val
}

// Ref: #/components/schemas/ActivityReportJsonExportModel
type ActivityReportJsonExportModel struct {
	RequestID      OptNilString      `json:"request_id"`
	RequestDate    OptNilString      `json:"request_date"`
	RequestorName  OptNilString      `json:"requestor_name"`
	RequestorEmail OptNilString      `json:"requestor_email"`
	Integration    OptNilString      `json:"integration"`
	ResourceType   OptNilString      `json:"resource_type"`
	Resources      OptNilStringArray `json:"resources"`
	Permissions    OptNilStringArray `json:"permissions"`
	Justification  OptNilString      `json:"justification"`
	Status         OptNilString      `json:"status"`
	TriggerType    OptNilString      `json:"trigger_type"`
	AccessFlow     OptNilString      `json:"access_flow"`
}

// GetRequestID returns the value of RequestID.
func (s *ActivityReportJsonExportModel) GetRequestID() OptNilString {
	return s.RequestID
}

// GetRequestDate returns the value of RequestDate.
func (s *ActivityReportJsonExportModel) GetRequestDate() OptNilString {
	return s.RequestDate
}

// GetRequestorName returns the value of RequestorName.
func (s *ActivityReportJsonExportModel) GetRequestorName() OptNilString {
	return s.RequestorName
}

// GetRequestorEmail returns the value of RequestorEmail.
func (s *ActivityReportJsonExportModel) GetRequestorEmail() OptNilString {
	return s.RequestorEmail
}

// GetIntegration returns the value of Integration.
func (s *ActivityReportJsonExportModel) GetIntegration() OptNilString {
	return s.Integration
}

// GetResourceType returns the value of ResourceType.
func (s *ActivityReportJsonExportModel) GetResourceType() OptNilString {
	return s.ResourceType
}

// GetResources returns the value of Resources.
func (s *ActivityReportJsonExportModel) GetResources() OptNilStringArray {
	return s.Resources
}

// GetPermissions returns the value of Permissions.
func (s *ActivityReportJsonExportModel) GetPermissions() OptNilStringArray {
	return s.Permissions
}

// GetJustification returns the value of Justification.
func (s *ActivityReportJsonExportModel) GetJustification() OptNilString {
	return s.Justification
}

// GetStatus returns the value of Status.
func (s *ActivityReportJsonExportModel) GetStatus() OptNilString {
	return s.Status
}

// GetTriggerType returns the value of TriggerType.
func (s *ActivityReportJsonExportModel) GetTriggerType() OptNilString {
	return s.TriggerType
}

// GetAccessFlow returns the value of AccessFlow.
func (s *ActivityReportJsonExportModel) GetAccessFlow() OptNilString {
	return s.AccessFlow
}

// SetRequestID sets the value of RequestID.
func (s *ActivityReportJsonExportModel) SetRequestID(val OptNilString) {
	s.RequestID = val
}

// SetRequestDate sets the value of RequestDate.
func (s *ActivityReportJsonExportModel) SetRequestDate(val OptNilString) {
	s.RequestDate = val
}

// SetRequestorName sets the value of RequestorName.
func (s *ActivityReportJsonExportModel) SetRequestorName(val OptNilString) {
	s.RequestorName = val
}

// SetRequestorEmail sets the value of RequestorEmail.
func (s *ActivityReportJsonExportModel) SetRequestorEmail(val OptNilString) {
	s.RequestorEmail = val
}

// SetIntegration sets the value of Integration.
func (s *ActivityReportJsonExportModel) SetIntegration(val OptNilString) {
	s.Integration = val
}

// SetResourceType sets the value of ResourceType.
func (s *ActivityReportJsonExportModel) SetResourceType(val OptNilString) {
	s.ResourceType = val
}

// SetResources sets the value of Resources.
func (s *ActivityReportJsonExportModel) SetResources(val OptNilStringArray) {
	s.Resources = val
}

// SetPermissions sets the value of Permissions.
func (s *ActivityReportJsonExportModel) SetPermissions(val OptNilStringArray) {
	s.Permissions = val
}

// SetJustification sets the value of Justification.
func (s *ActivityReportJsonExportModel) SetJustification(val OptNilString) {
	s.Justification = val
}

// SetStatus sets the value of Status.
func (s *ActivityReportJsonExportModel) SetStatus(val OptNilString) {
	s.Status = val
}

// SetTriggerType sets the value of TriggerType.
func (s *ActivityReportJsonExportModel) SetTriggerType(val OptNilString) {
	s.TriggerType = val
}

// SetAccessFlow sets the value of AccessFlow.
func (s *ActivityReportJsonExportModel) SetAccessFlow(val OptNilString) {
	s.AccessFlow = val
}

// AddGroupMemberV1NoContent is response for AddGroupMemberV1 operation.
type AddGroupMemberV1NoContent struct{}

type ApiInstant time.Time

// Ref: #/components/schemas/AponoSecretConfigV4
type AponoSecretConfigV4 struct {
	Parameters AponoSecretConfigV4Parameters `json:"parameters"`
}

// GetParameters returns the value of Parameters.
func (s *AponoSecretConfigV4) GetParameters() AponoSecretConfigV4Parameters {
	return s.Parameters
}

// SetParameters sets the value of Parameters.
func (s *AponoSecretConfigV4) SetParameters(val AponoSecretConfigV4Parameters) {
	s.Parameters = val
}

type AponoSecretConfigV4Parameters map[string]string

func (s *AponoSecretConfigV4Parameters) init() AponoSecretConfigV4Parameters {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// ApproverGroupV2.
// Ref: #/components/schemas/ApproverGroupPublicV2Model
type ApproverGroupPublicV2Model struct {
	LogicalOperator string                   `json:"logical_operator"`
	Approvers       []ConditionPublicV2Model `json:"approvers"`
}

// GetLogicalOperator returns the value of LogicalOperator.
func (s *ApproverGroupPublicV2Model) GetLogicalOperator() string {
	return s.LogicalOperator
}

// GetApprovers returns the value of Approvers.
func (s *ApproverGroupPublicV2Model) GetApprovers() []ConditionPublicV2Model {
	return s.Approvers
}

// SetLogicalOperator sets the value of LogicalOperator.
func (s *ApproverGroupPublicV2Model) SetLogicalOperator(val string) {
	s.LogicalOperator = val
}

// SetApprovers sets the value of Approvers.
func (s *ApproverGroupPublicV2Model) SetApprovers(val []ConditionPublicV2Model) {
	s.Approvers = val
}

// ApproverGroupUpsertV2.
// Ref: #/components/schemas/ApproverGroupUpsertPublicV2Model
type ApproverGroupUpsertPublicV2Model struct {
	LogicalOperator string                         `json:"logical_operator"`
	Approvers       []ConditionUpsertPublicV2Model `json:"approvers"`
}

// GetLogicalOperator returns the value of LogicalOperator.
func (s *ApproverGroupUpsertPublicV2Model) GetLogicalOperator() string {
	return s.LogicalOperator
}

// GetApprovers returns the value of Approvers.
func (s *ApproverGroupUpsertPublicV2Model) GetApprovers() []ConditionUpsertPublicV2Model {
	return s.Approvers
}

// SetLogicalOperator sets the value of LogicalOperator.
func (s *ApproverGroupUpsertPublicV2Model) SetLogicalOperator(val string) {
	s.LogicalOperator = val
}

// SetApprovers sets the value of Approvers.
func (s *ApproverGroupUpsertPublicV2Model) SetApprovers(val []ConditionUpsertPublicV2Model) {
	s.Approvers = val
}

// ApproverPolicyV2.
// Ref: #/components/schemas/ApproverPolicyPublicV2Model
type ApproverPolicyPublicV2Model struct {
	ApprovalMode   string                       `json:"approval_mode"`
	ApproverGroups []ApproverGroupPublicV2Model `json:"approver_groups"`
}

// GetApprovalMode returns the value of ApprovalMode.
func (s *ApproverPolicyPublicV2Model) GetApprovalMode() string {
	return s.ApprovalMode
}

// GetApproverGroups returns the value of ApproverGroups.
func (s *ApproverPolicyPublicV2Model) GetApproverGroups() []ApproverGroupPublicV2Model {
	return s.ApproverGroups
}

// SetApprovalMode sets the value of ApprovalMode.
func (s *ApproverPolicyPublicV2Model) SetApprovalMode(val string) {
	s.ApprovalMode = val
}

// SetApproverGroups sets the value of ApproverGroups.
func (s *ApproverPolicyPublicV2Model) SetApproverGroups(val []ApproverGroupPublicV2Model) {
	s.ApproverGroups = val
}

// ApproverPolicyUpsertV2.
// Ref: #/components/schemas/ApproverPolicyUpsertPublicV2Model
type ApproverPolicyUpsertPublicV2Model struct {
	ApprovalMode   string                             `json:"approval_mode"`
	ApproverGroups []ApproverGroupUpsertPublicV2Model `json:"approver_groups"`
}

// GetApprovalMode returns the value of ApprovalMode.
func (s *ApproverPolicyUpsertPublicV2Model) GetApprovalMode() string {
	return s.ApprovalMode
}

// GetApproverGroups returns the value of ApproverGroups.
func (s *ApproverPolicyUpsertPublicV2Model) GetApproverGroups() []ApproverGroupUpsertPublicV2Model {
	return s.ApproverGroups
}

// SetApprovalMode sets the value of ApprovalMode.
func (s *ApproverPolicyUpsertPublicV2Model) SetApprovalMode(val string) {
	s.ApprovalMode = val
}

// SetApproverGroups sets the value of ApproverGroups.
func (s *ApproverPolicyUpsertPublicV2Model) SetApproverGroups(val []ApproverGroupUpsertPublicV2Model) {
	s.ApproverGroups = val
}

// Ref: #/components/schemas/ApproverV1
type ApproverV1 struct {
	ID   string `json:"id"`
	Type string `json:"type"`
}

// GetID returns the value of ID.
func (s *ApproverV1) GetID() string {
	return s.ID
}

// GetType returns the value of Type.
func (s *ApproverV1) GetType() string {
	return s.Type
}

// SetID sets the value of ID.
func (s *ApproverV1) SetID(val string) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *ApproverV1) SetType(val string) {
	s.Type = val
}

type Authorization struct {
	Token string
}

// GetToken returns the value of Token.
func (s *Authorization) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *Authorization) SetToken(val string) {
	s.Token = val
}

// Ref: #/components/schemas/AvailableBundleV1
type AvailableBundleV1 struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *AvailableBundleV1) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *AvailableBundleV1) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *AvailableBundleV1) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AvailableBundleV1) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/AvailableEntitlementV1
type AvailableEntitlementV1 struct {
	Integration IntegrationPartialV4    `json:"integration"`
	Resource    EntitlementResourceV4   `json:"resource"`
	Permission  EntitlementPermissionV4 `json:"permission"`
}

// GetIntegration returns the value of Integration.
func (s *AvailableEntitlementV1) GetIntegration() IntegrationPartialV4 {
	return s.Integration
}

// GetResource returns the value of Resource.
func (s *AvailableEntitlementV1) GetResource() EntitlementResourceV4 {
	return s.Resource
}

// GetPermission returns the value of Permission.
func (s *AvailableEntitlementV1) GetPermission() EntitlementPermissionV4 {
	return s.Permission
}

// SetIntegration sets the value of Integration.
func (s *AvailableEntitlementV1) SetIntegration(val IntegrationPartialV4) {
	s.Integration = val
}

// SetResource sets the value of Resource.
func (s *AvailableEntitlementV1) SetResource(val EntitlementResourceV4) {
	s.Resource = val
}

// SetPermission sets the value of Permission.
func (s *AvailableEntitlementV1) SetPermission(val EntitlementPermissionV4) {
	s.Permission = val
}

// Ref: #/components/schemas/AwsSecretConfigV4
type AwsSecretConfigV4 struct {
	Region   string `json:"region"`
	SecretID string `json:"secret_id"`
}

// GetRegion returns the value of Region.
func (s *AwsSecretConfigV4) GetRegion() string {
	return s.Region
}

// GetSecretID returns the value of SecretID.
func (s *AwsSecretConfigV4) GetSecretID() string {
	return s.SecretID
}

// SetRegion sets the value of Region.
func (s *AwsSecretConfigV4) SetRegion(val string) {
	s.Region = val
}

// SetSecretID sets the value of SecretID.
func (s *AwsSecretConfigV4) SetSecretID(val string) {
	s.SecretID = val
}

// Ref: #/components/schemas/AzureSecretConfigV4
type AzureSecretConfigV4 struct {
	VaultURL string `json:"vault_url"`
	Name     string `json:"name"`
}

// GetVaultURL returns the value of VaultURL.
func (s *AzureSecretConfigV4) GetVaultURL() string {
	return s.VaultURL
}

// GetName returns the value of Name.
func (s *AzureSecretConfigV4) GetName() string {
	return s.Name
}

// SetVaultURL sets the value of VaultURL.
func (s *AzureSecretConfigV4) SetVaultURL(val string) {
	s.VaultURL = val
}

// SetName sets the value of Name.
func (s *AzureSecretConfigV4) SetName(val string) {
	s.Name = val
}

// BundleAccessTargetV2.
// Ref: #/components/schemas/BundleAccessTargetPublicV2Model
type BundleAccessTargetPublicV2Model struct {
	BundleID   string `json:"bundle_id"`
	BundleName string `json:"bundle_name"`
}

// GetBundleID returns the value of BundleID.
func (s *BundleAccessTargetPublicV2Model) GetBundleID() string {
	return s.BundleID
}

// GetBundleName returns the value of BundleName.
func (s *BundleAccessTargetPublicV2Model) GetBundleName() string {
	return s.BundleName
}

// SetBundleID sets the value of BundleID.
func (s *BundleAccessTargetPublicV2Model) SetBundleID(val string) {
	s.BundleID = val
}

// SetBundleName sets the value of BundleName.
func (s *BundleAccessTargetPublicV2Model) SetBundleName(val string) {
	s.BundleName = val
}

// BundleAccessTargetUpsertV2.
// Ref: #/components/schemas/BundleAccessTargetUpsertPublicV2Model
type BundleAccessTargetUpsertPublicV2Model struct {
	BundleReference string `json:"bundle_reference"`
}

// GetBundleReference returns the value of BundleReference.
func (s *BundleAccessTargetUpsertPublicV2Model) GetBundleReference() string {
	return s.BundleReference
}

// SetBundleReference sets the value of BundleReference.
func (s *BundleAccessTargetUpsertPublicV2Model) SetBundleReference(val string) {
	s.BundleReference = val
}

// Ref: #/components/schemas/BundlePartialV4
type BundlePartialV4 struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *BundlePartialV4) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *BundlePartialV4) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *BundlePartialV4) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *BundlePartialV4) SetName(val string) {
	s.Name = val
}

// BundleV2.
// Ref: #/components/schemas/BundlePublicV2Model
type BundlePublicV2Model struct {
	ID            string                                  `json:"id"`
	Name          string                                  `json:"name"`
	AccessTargets []AccessBundleAccessTargetPublicV2Model `json:"access_targets"`
	CreatedDate   ApiInstant                              `json:"created_date"`
	UpdatedDate   ApiInstant                              `json:"updated_date"`
}

// GetID returns the value of ID.
func (s *BundlePublicV2Model) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *BundlePublicV2Model) GetName() string {
	return s.Name
}

// GetAccessTargets returns the value of AccessTargets.
func (s *BundlePublicV2Model) GetAccessTargets() []AccessBundleAccessTargetPublicV2Model {
	return s.AccessTargets
}

// GetCreatedDate returns the value of CreatedDate.
func (s *BundlePublicV2Model) GetCreatedDate() ApiInstant {
	return s.CreatedDate
}

// GetUpdatedDate returns the value of UpdatedDate.
func (s *BundlePublicV2Model) GetUpdatedDate() ApiInstant {
	return s.UpdatedDate
}

// SetID sets the value of ID.
func (s *BundlePublicV2Model) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *BundlePublicV2Model) SetName(val string) {
	s.Name = val
}

// SetAccessTargets sets the value of AccessTargets.
func (s *BundlePublicV2Model) SetAccessTargets(val []AccessBundleAccessTargetPublicV2Model) {
	s.AccessTargets = val
}

// SetCreatedDate sets the value of CreatedDate.
func (s *BundlePublicV2Model) SetCreatedDate(val ApiInstant) {
	s.CreatedDate = val
}

// SetUpdatedDate sets the value of UpdatedDate.
func (s *BundlePublicV2Model) SetUpdatedDate(val ApiInstant) {
	s.UpdatedDate = val
}

// ConditionV2.
// Ref: #/components/schemas/ConditionPublicV2Model
type ConditionPublicV2Model struct {
	SourceIntegrationID   OptNilString      `json:"source_integration_id"`
	SourceIntegrationName OptNilString      `json:"source_integration_name"`
	Type                  string            `json:"type"`
	MatchOperator         OptNilString      `json:"match_operator"`
	Values                OptNilStringArray `json:"values"`
}

// GetSourceIntegrationID returns the value of SourceIntegrationID.
func (s *ConditionPublicV2Model) GetSourceIntegrationID() OptNilString {
	return s.SourceIntegrationID
}

// GetSourceIntegrationName returns the value of SourceIntegrationName.
func (s *ConditionPublicV2Model) GetSourceIntegrationName() OptNilString {
	return s.SourceIntegrationName
}

// GetType returns the value of Type.
func (s *ConditionPublicV2Model) GetType() string {
	return s.Type
}

// GetMatchOperator returns the value of MatchOperator.
func (s *ConditionPublicV2Model) GetMatchOperator() OptNilString {
	return s.MatchOperator
}

// GetValues returns the value of Values.
func (s *ConditionPublicV2Model) GetValues() OptNilStringArray {
	return s.Values
}

// SetSourceIntegrationID sets the value of SourceIntegrationID.
func (s *ConditionPublicV2Model) SetSourceIntegrationID(val OptNilString) {
	s.SourceIntegrationID = val
}

// SetSourceIntegrationName sets the value of SourceIntegrationName.
func (s *ConditionPublicV2Model) SetSourceIntegrationName(val OptNilString) {
	s.SourceIntegrationName = val
}

// SetType sets the value of Type.
func (s *ConditionPublicV2Model) SetType(val string) {
	s.Type = val
}

// SetMatchOperator sets the value of MatchOperator.
func (s *ConditionPublicV2Model) SetMatchOperator(val OptNilString) {
	s.MatchOperator = val
}

// SetValues sets the value of Values.
func (s *ConditionPublicV2Model) SetValues(val OptNilStringArray) {
	s.Values = val
}

// ConditionUpsertV2.
// Ref: #/components/schemas/ConditionUpsertPublicV2Model
type ConditionUpsertPublicV2Model struct {
	SourceIntegrationReference OptNilString      `json:"source_integration_reference"`
	Type                       string            `json:"type"`
	MatchOperator              OptNilString      `json:"match_operator"`
	Values                     OptNilStringArray `json:"values"`
}

// GetSourceIntegrationReference returns the value of SourceIntegrationReference.
func (s *ConditionUpsertPublicV2Model) GetSourceIntegrationReference() OptNilString {
	return s.SourceIntegrationReference
}

// GetType returns the value of Type.
func (s *ConditionUpsertPublicV2Model) GetType() string {
	return s.Type
}

// GetMatchOperator returns the value of MatchOperator.
func (s *ConditionUpsertPublicV2Model) GetMatchOperator() OptNilString {
	return s.MatchOperator
}

// GetValues returns the value of Values.
func (s *ConditionUpsertPublicV2Model) GetValues() OptNilStringArray {
	return s.Values
}

// SetSourceIntegrationReference sets the value of SourceIntegrationReference.
func (s *ConditionUpsertPublicV2Model) SetSourceIntegrationReference(val OptNilString) {
	s.SourceIntegrationReference = val
}

// SetType sets the value of Type.
func (s *ConditionUpsertPublicV2Model) SetType(val string) {
	s.Type = val
}

// SetMatchOperator sets the value of MatchOperator.
func (s *ConditionUpsertPublicV2Model) SetMatchOperator(val OptNilString) {
	s.MatchOperator = val
}

// SetValues sets the value of Values.
func (s *ConditionUpsertPublicV2Model) SetValues(val OptNilStringArray) {
	s.Values = val
}

// Ref: #/components/schemas/ConnectDetailsResponse
type ConnectDetailsResponse struct {
	Details string `json:"details"`
}

// GetDetails returns the value of Details.
func (s *ConnectDetailsResponse) GetDetails() string {
	return s.Details
}

// SetDetails sets the value of Details.
func (s *ConnectDetailsResponse) SetDetails(val string) {
	s.Details = val
}

// Ref: #/components/schemas/ConnectionMetadata
type ConnectionMetadata struct{}

// Ref: #/components/schemas/Connector
type Connector struct {
	ConnectorID   string        `json:"connector_id"`
	LastConnected OptNilInstant `json:"last_connected"`
	Status        string        `json:"status"`
}

// GetConnectorID returns the value of ConnectorID.
func (s *Connector) GetConnectorID() string {
	return s.ConnectorID
}

// GetLastConnected returns the value of LastConnected.
func (s *Connector) GetLastConnected() OptNilInstant {
	return s.LastConnected
}

// GetStatus returns the value of Status.
func (s *Connector) GetStatus() string {
	return s.Status
}

// SetConnectorID sets the value of ConnectorID.
func (s *Connector) SetConnectorID(val string) {
	s.ConnectorID = val
}

// SetLastConnected sets the value of LastConnected.
func (s *Connector) SetLastConnected(val OptNilInstant) {
	s.LastConnected = val
}

// SetStatus sets the value of Status.
func (s *Connector) SetStatus(val string) {
	s.Status = val
}

// Ref: #/components/schemas/ConnectorActionParamsModel
type ConnectorActionParamsModel struct {
	IntegrationType        string                                           `json:"integration_type"`
	IntegrationMetadata    OptConnectorActionParamsModelIntegrationMetadata `json:"integration_metadata"`
	SecretConfig           OptSecretConfig1                                 `json:"secret_config"`
	ProviderName           OptNilString                                     `json:"provider_name"`
	Action                 string                                           `json:"action"`
	Params                 ConnectorActionParamsModelParams                 `json:"params"`
	ForceReloadSecretCache bool                                             `json:"force_reload_secret_cache"`
	Timeout                int64                                            `json:"timeout"`
}

// GetIntegrationType returns the value of IntegrationType.
func (s *ConnectorActionParamsModel) GetIntegrationType() string {
	return s.IntegrationType
}

// GetIntegrationMetadata returns the value of IntegrationMetadata.
func (s *ConnectorActionParamsModel) GetIntegrationMetadata() OptConnectorActionParamsModelIntegrationMetadata {
	return s.IntegrationMetadata
}

// GetSecretConfig returns the value of SecretConfig.
func (s *ConnectorActionParamsModel) GetSecretConfig() OptSecretConfig1 {
	return s.SecretConfig
}

// GetProviderName returns the value of ProviderName.
func (s *ConnectorActionParamsModel) GetProviderName() OptNilString {
	return s.ProviderName
}

// GetAction returns the value of Action.
func (s *ConnectorActionParamsModel) GetAction() string {
	return s.Action
}

// GetParams returns the value of Params.
func (s *ConnectorActionParamsModel) GetParams() ConnectorActionParamsModelParams {
	return s.Params
}

// GetForceReloadSecretCache returns the value of ForceReloadSecretCache.
func (s *ConnectorActionParamsModel) GetForceReloadSecretCache() bool {
	return s.ForceReloadSecretCache
}

// GetTimeout returns the value of Timeout.
func (s *ConnectorActionParamsModel) GetTimeout() int64 {
	return s.Timeout
}

// SetIntegrationType sets the value of IntegrationType.
func (s *ConnectorActionParamsModel) SetIntegrationType(val string) {
	s.IntegrationType = val
}

// SetIntegrationMetadata sets the value of IntegrationMetadata.
func (s *ConnectorActionParamsModel) SetIntegrationMetadata(val OptConnectorActionParamsModelIntegrationMetadata) {
	s.IntegrationMetadata = val
}

// SetSecretConfig sets the value of SecretConfig.
func (s *ConnectorActionParamsModel) SetSecretConfig(val OptSecretConfig1) {
	s.SecretConfig = val
}

// SetProviderName sets the value of ProviderName.
func (s *ConnectorActionParamsModel) SetProviderName(val OptNilString) {
	s.ProviderName = val
}

// SetAction sets the value of Action.
func (s *ConnectorActionParamsModel) SetAction(val string) {
	s.Action = val
}

// SetParams sets the value of Params.
func (s *ConnectorActionParamsModel) SetParams(val ConnectorActionParamsModelParams) {
	s.Params = val
}

// SetForceReloadSecretCache sets the value of ForceReloadSecretCache.
func (s *ConnectorActionParamsModel) SetForceReloadSecretCache(val bool) {
	s.ForceReloadSecretCache = val
}

// SetTimeout sets the value of Timeout.
func (s *ConnectorActionParamsModel) SetTimeout(val int64) {
	s.Timeout = val
}

type ConnectorActionParamsModelIntegrationMetadata struct{}

type ConnectorActionParamsModelParams struct{}

// Ref: #/components/schemas/ConnectorSessionMetadataV3
type ConnectorSessionMetadataV3 struct {
	CloudProviderMetadata OptNilConnectorSessionsCloudProviderMetadataV3 `json:"cloud_provider_metadata"`
	ConnectorVersion      OptNilString                                   `json:"connector_version"`
}

// GetCloudProviderMetadata returns the value of CloudProviderMetadata.
func (s *ConnectorSessionMetadataV3) GetCloudProviderMetadata() OptNilConnectorSessionsCloudProviderMetadataV3 {
	return s.CloudProviderMetadata
}

// GetConnectorVersion returns the value of ConnectorVersion.
func (s *ConnectorSessionMetadataV3) GetConnectorVersion() OptNilString {
	return s.ConnectorVersion
}

// SetCloudProviderMetadata sets the value of CloudProviderMetadata.
func (s *ConnectorSessionMetadataV3) SetCloudProviderMetadata(val OptNilConnectorSessionsCloudProviderMetadataV3) {
	s.CloudProviderMetadata = val
}

// SetConnectorVersion sets the value of ConnectorVersion.
func (s *ConnectorSessionMetadataV3) SetConnectorVersion(val OptNilString) {
	s.ConnectorVersion = val
}

// Ref: #/components/schemas/ConnectorSessionV3
type ConnectorSessionV3 struct {
	ID                string                     `json:"id"`
	Metadata          ConnectorSessionMetadataV3 `json:"metadata"`
	LastConnectedTime ApiInstant                 `json:"last_connected_time"`
}

// GetID returns the value of ID.
func (s *ConnectorSessionV3) GetID() string {
	return s.ID
}

// GetMetadata returns the value of Metadata.
func (s *ConnectorSessionV3) GetMetadata() ConnectorSessionMetadataV3 {
	return s.Metadata
}

// GetLastConnectedTime returns the value of LastConnectedTime.
func (s *ConnectorSessionV3) GetLastConnectedTime() ApiInstant {
	return s.LastConnectedTime
}

// SetID sets the value of ID.
func (s *ConnectorSessionV3) SetID(val string) {
	s.ID = val
}

// SetMetadata sets the value of Metadata.
func (s *ConnectorSessionV3) SetMetadata(val ConnectorSessionMetadataV3) {
	s.Metadata = val
}

// SetLastConnectedTime sets the value of LastConnectedTime.
func (s *ConnectorSessionV3) SetLastConnectedTime(val ApiInstant) {
	s.LastConnectedTime = val
}

// Ref: #/components/schemas/ConnectorSessionsCloudProviderMetadataV3
type ConnectorSessionsCloudProviderMetadataV3 struct {
	KubernetesType    OptNilString `json:"kubernetes_type"`
	KubernetesVersion OptNilString `json:"kubernetes_version"`
	IsKubernetesAdmin OptNilBool   `json:"is_kubernetes_admin"`
	LocalDeploy       OptNilBool   `json:"local_deploy"`
	AWSAccountID      OptNilString `json:"aws_account_id"`
	Region            OptNilString `json:"region"`
	AvailabilityZone  OptNilString `json:"availability_zone"`
	ProjectID         OptNilString `json:"project_id"`
	OrganizationID    OptNilString `json:"organization_id"`
	Zone              OptNilString `json:"zone"`
	SubscriptionID    OptNilString `json:"subscription_id"`
	ResourceGroup     OptNilString `json:"resource_group"`
	IsAzureAdmin      OptNilBool   `json:"is_azure_admin"`
}

// GetKubernetesType returns the value of KubernetesType.
func (s *ConnectorSessionsCloudProviderMetadataV3) GetKubernetesType() OptNilString {
	return s.KubernetesType
}

// GetKubernetesVersion returns the value of KubernetesVersion.
func (s *ConnectorSessionsCloudProviderMetadataV3) GetKubernetesVersion() OptNilString {
	return s.KubernetesVersion
}

// GetIsKubernetesAdmin returns the value of IsKubernetesAdmin.
func (s *ConnectorSessionsCloudProviderMetadataV3) GetIsKubernetesAdmin() OptNilBool {
	return s.IsKubernetesAdmin
}

// GetLocalDeploy returns the value of LocalDeploy.
func (s *ConnectorSessionsCloudProviderMetadataV3) GetLocalDeploy() OptNilBool {
	return s.LocalDeploy
}

// GetAWSAccountID returns the value of AWSAccountID.
func (s *ConnectorSessionsCloudProviderMetadataV3) GetAWSAccountID() OptNilString {
	return s.AWSAccountID
}

// GetRegion returns the value of Region.
func (s *ConnectorSessionsCloudProviderMetadataV3) GetRegion() OptNilString {
	return s.Region
}

// GetAvailabilityZone returns the value of AvailabilityZone.
func (s *ConnectorSessionsCloudProviderMetadataV3) GetAvailabilityZone() OptNilString {
	return s.AvailabilityZone
}

// GetProjectID returns the value of ProjectID.
func (s *ConnectorSessionsCloudProviderMetadataV3) GetProjectID() OptNilString {
	return s.ProjectID
}

// GetOrganizationID returns the value of OrganizationID.
func (s *ConnectorSessionsCloudProviderMetadataV3) GetOrganizationID() OptNilString {
	return s.OrganizationID
}

// GetZone returns the value of Zone.
func (s *ConnectorSessionsCloudProviderMetadataV3) GetZone() OptNilString {
	return s.Zone
}

// GetSubscriptionID returns the value of SubscriptionID.
func (s *ConnectorSessionsCloudProviderMetadataV3) GetSubscriptionID() OptNilString {
	return s.SubscriptionID
}

// GetResourceGroup returns the value of ResourceGroup.
func (s *ConnectorSessionsCloudProviderMetadataV3) GetResourceGroup() OptNilString {
	return s.ResourceGroup
}

// GetIsAzureAdmin returns the value of IsAzureAdmin.
func (s *ConnectorSessionsCloudProviderMetadataV3) GetIsAzureAdmin() OptNilBool {
	return s.IsAzureAdmin
}

// SetKubernetesType sets the value of KubernetesType.
func (s *ConnectorSessionsCloudProviderMetadataV3) SetKubernetesType(val OptNilString) {
	s.KubernetesType = val
}

// SetKubernetesVersion sets the value of KubernetesVersion.
func (s *ConnectorSessionsCloudProviderMetadataV3) SetKubernetesVersion(val OptNilString) {
	s.KubernetesVersion = val
}

// SetIsKubernetesAdmin sets the value of IsKubernetesAdmin.
func (s *ConnectorSessionsCloudProviderMetadataV3) SetIsKubernetesAdmin(val OptNilBool) {
	s.IsKubernetesAdmin = val
}

// SetLocalDeploy sets the value of LocalDeploy.
func (s *ConnectorSessionsCloudProviderMetadataV3) SetLocalDeploy(val OptNilBool) {
	s.LocalDeploy = val
}

// SetAWSAccountID sets the value of AWSAccountID.
func (s *ConnectorSessionsCloudProviderMetadataV3) SetAWSAccountID(val OptNilString) {
	s.AWSAccountID = val
}

// SetRegion sets the value of Region.
func (s *ConnectorSessionsCloudProviderMetadataV3) SetRegion(val OptNilString) {
	s.Region = val
}

// SetAvailabilityZone sets the value of AvailabilityZone.
func (s *ConnectorSessionsCloudProviderMetadataV3) SetAvailabilityZone(val OptNilString) {
	s.AvailabilityZone = val
}

// SetProjectID sets the value of ProjectID.
func (s *ConnectorSessionsCloudProviderMetadataV3) SetProjectID(val OptNilString) {
	s.ProjectID = val
}

// SetOrganizationID sets the value of OrganizationID.
func (s *ConnectorSessionsCloudProviderMetadataV3) SetOrganizationID(val OptNilString) {
	s.OrganizationID = val
}

// SetZone sets the value of Zone.
func (s *ConnectorSessionsCloudProviderMetadataV3) SetZone(val OptNilString) {
	s.Zone = val
}

// SetSubscriptionID sets the value of SubscriptionID.
func (s *ConnectorSessionsCloudProviderMetadataV3) SetSubscriptionID(val OptNilString) {
	s.SubscriptionID = val
}

// SetResourceGroup sets the value of ResourceGroup.
func (s *ConnectorSessionsCloudProviderMetadataV3) SetResourceGroup(val OptNilString) {
	s.ResourceGroup = val
}

// SetIsAzureAdmin sets the value of IsAzureAdmin.
func (s *ConnectorSessionsCloudProviderMetadataV3) SetIsAzureAdmin(val OptNilBool) {
	s.IsAzureAdmin = val
}

// Ref: #/components/schemas/ConnectorV3
type ConnectorV3 struct {
	ID                string               `json:"id"`
	Name              string               `json:"name"`
	Status            string               `json:"status"`
	Version           string               `json:"version"`
	LastConnected     OptNilApiInstant     `json:"last_connected"`
	IsLatestVersion   bool                 `json:"is_latest_version"`
	CloudProviderType string               `json:"cloud_provider_type"`
	Sessions          []ConnectorSessionV3 `json:"sessions"`
}

// GetID returns the value of ID.
func (s *ConnectorV3) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *ConnectorV3) GetName() string {
	return s.Name
}

// GetStatus returns the value of Status.
func (s *ConnectorV3) GetStatus() string {
	return s.Status
}

// GetVersion returns the value of Version.
func (s *ConnectorV3) GetVersion() string {
	return s.Version
}

// GetLastConnected returns the value of LastConnected.
func (s *ConnectorV3) GetLastConnected() OptNilApiInstant {
	return s.LastConnected
}

// GetIsLatestVersion returns the value of IsLatestVersion.
func (s *ConnectorV3) GetIsLatestVersion() bool {
	return s.IsLatestVersion
}

// GetCloudProviderType returns the value of CloudProviderType.
func (s *ConnectorV3) GetCloudProviderType() string {
	return s.CloudProviderType
}

// GetSessions returns the value of Sessions.
func (s *ConnectorV3) GetSessions() []ConnectorSessionV3 {
	return s.Sessions
}

// SetID sets the value of ID.
func (s *ConnectorV3) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ConnectorV3) SetName(val string) {
	s.Name = val
}

// SetStatus sets the value of Status.
func (s *ConnectorV3) SetStatus(val string) {
	s.Status = val
}

// SetVersion sets the value of Version.
func (s *ConnectorV3) SetVersion(val string) {
	s.Version = val
}

// SetLastConnected sets the value of LastConnected.
func (s *ConnectorV3) SetLastConnected(val OptNilApiInstant) {
	s.LastConnected = val
}

// SetIsLatestVersion sets the value of IsLatestVersion.
func (s *ConnectorV3) SetIsLatestVersion(val bool) {
	s.IsLatestVersion = val
}

// SetCloudProviderType sets the value of CloudProviderType.
func (s *ConnectorV3) SetCloudProviderType(val string) {
	s.CloudProviderType = val
}

// SetSessions sets the value of Sessions.
func (s *ConnectorV3) SetSessions(val []ConnectorSessionV3) {
	s.Sessions = val
}

// Ref: #/components/schemas/CreateAccessRequest
type CreateAccessRequest struct {
	UserID        string      `json:"user_id"`
	IntegrationID string      `json:"integration_id"`
	ResourceIds   []string    `json:"resource_ids"`
	Permissions   []string    `json:"permissions"`
	Justification string      `json:"justification"`
	DurationInSec OptNilInt32 `json:"duration_in_sec"`
}

// GetUserID returns the value of UserID.
func (s *CreateAccessRequest) GetUserID() string {
	return s.UserID
}

// GetIntegrationID returns the value of IntegrationID.
func (s *CreateAccessRequest) GetIntegrationID() string {
	return s.IntegrationID
}

// GetResourceIds returns the value of ResourceIds.
func (s *CreateAccessRequest) GetResourceIds() []string {
	return s.ResourceIds
}

// GetPermissions returns the value of Permissions.
func (s *CreateAccessRequest) GetPermissions() []string {
	return s.Permissions
}

// GetJustification returns the value of Justification.
func (s *CreateAccessRequest) GetJustification() string {
	return s.Justification
}

// GetDurationInSec returns the value of DurationInSec.
func (s *CreateAccessRequest) GetDurationInSec() OptNilInt32 {
	return s.DurationInSec
}

// SetUserID sets the value of UserID.
func (s *CreateAccessRequest) SetUserID(val string) {
	s.UserID = val
}

// SetIntegrationID sets the value of IntegrationID.
func (s *CreateAccessRequest) SetIntegrationID(val string) {
	s.IntegrationID = val
}

// SetResourceIds sets the value of ResourceIds.
func (s *CreateAccessRequest) SetResourceIds(val []string) {
	s.ResourceIds = val
}

// SetPermissions sets the value of Permissions.
func (s *CreateAccessRequest) SetPermissions(val []string) {
	s.Permissions = val
}

// SetJustification sets the value of Justification.
func (s *CreateAccessRequest) SetJustification(val string) {
	s.Justification = val
}

// SetDurationInSec sets the value of DurationInSec.
func (s *CreateAccessRequest) SetDurationInSec(val OptNilInt32) {
	s.DurationInSec = val
}

// Ref: #/components/schemas/CreateAccessRequestEntitlementV4
type CreateAccessRequestEntitlementV4 struct {
	ResourceID   string `json:"resource_id"`
	PermissionID string `json:"permission_id"`
}

// GetResourceID returns the value of ResourceID.
func (s *CreateAccessRequestEntitlementV4) GetResourceID() string {
	return s.ResourceID
}

// GetPermissionID returns the value of PermissionID.
func (s *CreateAccessRequestEntitlementV4) GetPermissionID() string {
	return s.PermissionID
}

// SetResourceID sets the value of ResourceID.
func (s *CreateAccessRequestEntitlementV4) SetResourceID(val string) {
	s.ResourceID = val
}

// SetPermissionID sets the value of PermissionID.
func (s *CreateAccessRequestEntitlementV4) SetPermissionID(val string) {
	s.PermissionID = val
}

// Ref: #/components/schemas/CreateAccessRequestV4
type CreateAccessRequestV4 struct {
	BundleReference OptNilString                                `json:"bundle_reference"`
	Entitlements    OptNilCreateAccessRequestEntitlementV4Array `json:"entitlements"`
	Justification   OptNilString                                `json:"justification"`
	DurationInSec   OptNilInt32                                 `json:"duration_in_sec"`
	CustomFields    CreateAccessRequestV4CustomFields           `json:"custom_fields"`
}

// GetBundleReference returns the value of BundleReference.
func (s *CreateAccessRequestV4) GetBundleReference() OptNilString {
	return s.BundleReference
}

// GetEntitlements returns the value of Entitlements.
func (s *CreateAccessRequestV4) GetEntitlements() OptNilCreateAccessRequestEntitlementV4Array {
	return s.Entitlements
}

// GetJustification returns the value of Justification.
func (s *CreateAccessRequestV4) GetJustification() OptNilString {
	return s.Justification
}

// GetDurationInSec returns the value of DurationInSec.
func (s *CreateAccessRequestV4) GetDurationInSec() OptNilInt32 {
	return s.DurationInSec
}

// GetCustomFields returns the value of CustomFields.
func (s *CreateAccessRequestV4) GetCustomFields() CreateAccessRequestV4CustomFields {
	return s.CustomFields
}

// SetBundleReference sets the value of BundleReference.
func (s *CreateAccessRequestV4) SetBundleReference(val OptNilString) {
	s.BundleReference = val
}

// SetEntitlements sets the value of Entitlements.
func (s *CreateAccessRequestV4) SetEntitlements(val OptNilCreateAccessRequestEntitlementV4Array) {
	s.Entitlements = val
}

// SetJustification sets the value of Justification.
func (s *CreateAccessRequestV4) SetJustification(val OptNilString) {
	s.Justification = val
}

// SetDurationInSec sets the value of DurationInSec.
func (s *CreateAccessRequestV4) SetDurationInSec(val OptNilInt32) {
	s.DurationInSec = val
}

// SetCustomFields sets the value of CustomFields.
func (s *CreateAccessRequestV4) SetCustomFields(val CreateAccessRequestV4CustomFields) {
	s.CustomFields = val
}

type CreateAccessRequestV4CustomFields map[string]string

func (s *CreateAccessRequestV4CustomFields) init() CreateAccessRequestV4CustomFields {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/CreateGroupV1
type CreateGroupV1 struct {
	Name          string   `json:"name"`
	MembersEmails []string `json:"members_emails"`
}

// GetName returns the value of Name.
func (s *CreateGroupV1) GetName() string {
	return s.Name
}

// GetMembersEmails returns the value of MembersEmails.
func (s *CreateGroupV1) GetMembersEmails() []string {
	return s.MembersEmails
}

// SetName sets the value of Name.
func (s *CreateGroupV1) SetName(val string) {
	s.Name = val
}

// SetMembersEmails sets the value of MembersEmails.
func (s *CreateGroupV1) SetMembersEmails(val []string) {
	s.MembersEmails = val
}

// Ref: #/components/schemas/CreateIntegration
type CreateIntegration struct {
	Name                   string                    `json:"name"`
	Type                   string                    `json:"type"`
	ProvisionerID          OptNilString              `json:"provisioner_id"`
	Metadata               CreateIntegrationMetadata `json:"metadata"`
	SecretConfig           OptNilSecretConfig        `json:"secret_config"`
	ConnectedResourceTypes OptNilStringArray         `json:"connected_resource_types"`
	CustomAccessDetails    OptNilString              `json:"custom_access_details"`
}

// GetName returns the value of Name.
func (s *CreateIntegration) GetName() string {
	return s.Name
}

// GetType returns the value of Type.
func (s *CreateIntegration) GetType() string {
	return s.Type
}

// GetProvisionerID returns the value of ProvisionerID.
func (s *CreateIntegration) GetProvisionerID() OptNilString {
	return s.ProvisionerID
}

// GetMetadata returns the value of Metadata.
func (s *CreateIntegration) GetMetadata() CreateIntegrationMetadata {
	return s.Metadata
}

// GetSecretConfig returns the value of SecretConfig.
func (s *CreateIntegration) GetSecretConfig() OptNilSecretConfig {
	return s.SecretConfig
}

// GetConnectedResourceTypes returns the value of ConnectedResourceTypes.
func (s *CreateIntegration) GetConnectedResourceTypes() OptNilStringArray {
	return s.ConnectedResourceTypes
}

// GetCustomAccessDetails returns the value of CustomAccessDetails.
func (s *CreateIntegration) GetCustomAccessDetails() OptNilString {
	return s.CustomAccessDetails
}

// SetName sets the value of Name.
func (s *CreateIntegration) SetName(val string) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *CreateIntegration) SetType(val string) {
	s.Type = val
}

// SetProvisionerID sets the value of ProvisionerID.
func (s *CreateIntegration) SetProvisionerID(val OptNilString) {
	s.ProvisionerID = val
}

// SetMetadata sets the value of Metadata.
func (s *CreateIntegration) SetMetadata(val CreateIntegrationMetadata) {
	s.Metadata = val
}

// SetSecretConfig sets the value of SecretConfig.
func (s *CreateIntegration) SetSecretConfig(val OptNilSecretConfig) {
	s.SecretConfig = val
}

// SetConnectedResourceTypes sets the value of ConnectedResourceTypes.
func (s *CreateIntegration) SetConnectedResourceTypes(val OptNilStringArray) {
	s.ConnectedResourceTypes = val
}

// SetCustomAccessDetails sets the value of CustomAccessDetails.
func (s *CreateIntegration) SetCustomAccessDetails(val OptNilString) {
	s.CustomAccessDetails = val
}

type CreateIntegrationMetadata struct{}

// Ref: #/components/schemas/CreateIntegrationV4
type CreateIntegrationV4 struct {
	Name                   string                          `json:"name"`
	Type                   string                          `json:"type"`
	ConnectorID            OptNilString                    `json:"connector_id"`
	IntegrationConfig      JsonMapModel                    `json:"integration_config"`
	SecretStoreConfig      OptNilUpsertSecretStoreConfigV4 `json:"secret_store_config"`
	ConnectedResourceTypes OptNilStringArray               `json:"connected_resource_types"`
	CustomAccessDetails    OptNilString                    `json:"custom_access_details"`
	Owner                  OptNilUpsertOwnerV4             `json:"owner"`
	OwnersMapping          OptNilUpsertOwnerMappingV4      `json:"owners_mapping"`
}

// GetName returns the value of Name.
func (s *CreateIntegrationV4) GetName() string {
	return s.Name
}

// GetType returns the value of Type.
func (s *CreateIntegrationV4) GetType() string {
	return s.Type
}

// GetConnectorID returns the value of ConnectorID.
func (s *CreateIntegrationV4) GetConnectorID() OptNilString {
	return s.ConnectorID
}

// GetIntegrationConfig returns the value of IntegrationConfig.
func (s *CreateIntegrationV4) GetIntegrationConfig() JsonMapModel {
	return s.IntegrationConfig
}

// GetSecretStoreConfig returns the value of SecretStoreConfig.
func (s *CreateIntegrationV4) GetSecretStoreConfig() OptNilUpsertSecretStoreConfigV4 {
	return s.SecretStoreConfig
}

// GetConnectedResourceTypes returns the value of ConnectedResourceTypes.
func (s *CreateIntegrationV4) GetConnectedResourceTypes() OptNilStringArray {
	return s.ConnectedResourceTypes
}

// GetCustomAccessDetails returns the value of CustomAccessDetails.
func (s *CreateIntegrationV4) GetCustomAccessDetails() OptNilString {
	return s.CustomAccessDetails
}

// GetOwner returns the value of Owner.
func (s *CreateIntegrationV4) GetOwner() OptNilUpsertOwnerV4 {
	return s.Owner
}

// GetOwnersMapping returns the value of OwnersMapping.
func (s *CreateIntegrationV4) GetOwnersMapping() OptNilUpsertOwnerMappingV4 {
	return s.OwnersMapping
}

// SetName sets the value of Name.
func (s *CreateIntegrationV4) SetName(val string) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *CreateIntegrationV4) SetType(val string) {
	s.Type = val
}

// SetConnectorID sets the value of ConnectorID.
func (s *CreateIntegrationV4) SetConnectorID(val OptNilString) {
	s.ConnectorID = val
}

// SetIntegrationConfig sets the value of IntegrationConfig.
func (s *CreateIntegrationV4) SetIntegrationConfig(val JsonMapModel) {
	s.IntegrationConfig = val
}

// SetSecretStoreConfig sets the value of SecretStoreConfig.
func (s *CreateIntegrationV4) SetSecretStoreConfig(val OptNilUpsertSecretStoreConfigV4) {
	s.SecretStoreConfig = val
}

// SetConnectedResourceTypes sets the value of ConnectedResourceTypes.
func (s *CreateIntegrationV4) SetConnectedResourceTypes(val OptNilStringArray) {
	s.ConnectedResourceTypes = val
}

// SetCustomAccessDetails sets the value of CustomAccessDetails.
func (s *CreateIntegrationV4) SetCustomAccessDetails(val OptNilString) {
	s.CustomAccessDetails = val
}

// SetOwner sets the value of Owner.
func (s *CreateIntegrationV4) SetOwner(val OptNilUpsertOwnerV4) {
	s.Owner = val
}

// SetOwnersMapping sets the value of OwnersMapping.
func (s *CreateIntegrationV4) SetOwnersMapping(val OptNilUpsertOwnerMappingV4) {
	s.OwnersMapping = val
}

// Ref: #/components/schemas/DayOfWeek
type DayOfWeek string

const (
	DayOfWeekMONDAY    DayOfWeek = "MONDAY"
	DayOfWeekTUESDAY   DayOfWeek = "TUESDAY"
	DayOfWeekWEDNESDAY DayOfWeek = "WEDNESDAY"
	DayOfWeekTHURSDAY  DayOfWeek = "THURSDAY"
	DayOfWeekFRIDAY    DayOfWeek = "FRIDAY"
	DayOfWeekSATURDAY  DayOfWeek = "SATURDAY"
	DayOfWeekSUNDAY    DayOfWeek = "SUNDAY"
)

// AllValues returns all DayOfWeek values.
func (DayOfWeek) AllValues() []DayOfWeek {
	return []DayOfWeek{
		DayOfWeekMONDAY,
		DayOfWeekTUESDAY,
		DayOfWeekWEDNESDAY,
		DayOfWeekTHURSDAY,
		DayOfWeekFRIDAY,
		DayOfWeekSATURDAY,
		DayOfWeekSUNDAY,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DayOfWeek) MarshalText() ([]byte, error) {
	switch s {
	case DayOfWeekMONDAY:
		return []byte(s), nil
	case DayOfWeekTUESDAY:
		return []byte(s), nil
	case DayOfWeekWEDNESDAY:
		return []byte(s), nil
	case DayOfWeekTHURSDAY:
		return []byte(s), nil
	case DayOfWeekFRIDAY:
		return []byte(s), nil
	case DayOfWeekSATURDAY:
		return []byte(s), nil
	case DayOfWeekSUNDAY:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DayOfWeek) UnmarshalText(data []byte) error {
	switch DayOfWeek(data) {
	case DayOfWeekMONDAY:
		*s = DayOfWeekMONDAY
		return nil
	case DayOfWeekTUESDAY:
		*s = DayOfWeekTUESDAY
		return nil
	case DayOfWeekWEDNESDAY:
		*s = DayOfWeekWEDNESDAY
		return nil
	case DayOfWeekTHURSDAY:
		*s = DayOfWeekTHURSDAY
		return nil
	case DayOfWeekFRIDAY:
		*s = DayOfWeekFRIDAY
		return nil
	case DayOfWeekSATURDAY:
		*s = DayOfWeekSATURDAY
		return nil
	case DayOfWeekSUNDAY:
		*s = DayOfWeekSUNDAY
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// DayOfWeek.
// Ref: #/components/schemas/DayOfWeekPublicV2Model
type DayOfWeekPublicV2Model string

const (
	DayOfWeekPublicV2ModelMONDAY    DayOfWeekPublicV2Model = "MONDAY"
	DayOfWeekPublicV2ModelTUESDAY   DayOfWeekPublicV2Model = "TUESDAY"
	DayOfWeekPublicV2ModelWEDNESDAY DayOfWeekPublicV2Model = "WEDNESDAY"
	DayOfWeekPublicV2ModelTHURSDAY  DayOfWeekPublicV2Model = "THURSDAY"
	DayOfWeekPublicV2ModelFRIDAY    DayOfWeekPublicV2Model = "FRIDAY"
	DayOfWeekPublicV2ModelSATURDAY  DayOfWeekPublicV2Model = "SATURDAY"
	DayOfWeekPublicV2ModelSUNDAY    DayOfWeekPublicV2Model = "SUNDAY"
)

// AllValues returns all DayOfWeekPublicV2Model values.
func (DayOfWeekPublicV2Model) AllValues() []DayOfWeekPublicV2Model {
	return []DayOfWeekPublicV2Model{
		DayOfWeekPublicV2ModelMONDAY,
		DayOfWeekPublicV2ModelTUESDAY,
		DayOfWeekPublicV2ModelWEDNESDAY,
		DayOfWeekPublicV2ModelTHURSDAY,
		DayOfWeekPublicV2ModelFRIDAY,
		DayOfWeekPublicV2ModelSATURDAY,
		DayOfWeekPublicV2ModelSUNDAY,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DayOfWeekPublicV2Model) MarshalText() ([]byte, error) {
	switch s {
	case DayOfWeekPublicV2ModelMONDAY:
		return []byte(s), nil
	case DayOfWeekPublicV2ModelTUESDAY:
		return []byte(s), nil
	case DayOfWeekPublicV2ModelWEDNESDAY:
		return []byte(s), nil
	case DayOfWeekPublicV2ModelTHURSDAY:
		return []byte(s), nil
	case DayOfWeekPublicV2ModelFRIDAY:
		return []byte(s), nil
	case DayOfWeekPublicV2ModelSATURDAY:
		return []byte(s), nil
	case DayOfWeekPublicV2ModelSUNDAY:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DayOfWeekPublicV2Model) UnmarshalText(data []byte) error {
	switch DayOfWeekPublicV2Model(data) {
	case DayOfWeekPublicV2ModelMONDAY:
		*s = DayOfWeekPublicV2ModelMONDAY
		return nil
	case DayOfWeekPublicV2ModelTUESDAY:
		*s = DayOfWeekPublicV2ModelTUESDAY
		return nil
	case DayOfWeekPublicV2ModelWEDNESDAY:
		*s = DayOfWeekPublicV2ModelWEDNESDAY
		return nil
	case DayOfWeekPublicV2ModelTHURSDAY:
		*s = DayOfWeekPublicV2ModelTHURSDAY
		return nil
	case DayOfWeekPublicV2ModelFRIDAY:
		*s = DayOfWeekPublicV2ModelFRIDAY
		return nil
	case DayOfWeekPublicV2ModelSATURDAY:
		*s = DayOfWeekPublicV2ModelSATURDAY
		return nil
	case DayOfWeekPublicV2ModelSUNDAY:
		*s = DayOfWeekPublicV2ModelSUNDAY
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// DeleteAccessFlowV2NoContent is response for DeleteAccessFlowV2 operation.
type DeleteAccessFlowV2NoContent struct{}

// DeleteAccessScopesV1NoContent is response for DeleteAccessScopesV1 operation.
type DeleteAccessScopesV1NoContent struct{}

// DeleteBundleV2NoContent is response for DeleteBundleV2 operation.
type DeleteBundleV2NoContent struct{}

// DeleteConnectorV3NoContent is response for DeleteConnectorV3 operation.
type DeleteConnectorV3NoContent struct{}

// DeleteGroupV1NoContent is response for DeleteGroupV1 operation.
type DeleteGroupV1NoContent struct{}

// DeleteIntegrationV4NoContent is response for DeleteIntegrationV4 operation.
type DeleteIntegrationV4NoContent struct{}

// Ref: #/components/schemas/EntitlementPermissionV4
type EntitlementPermissionV4 struct {
	ID       string `json:"id"`
	SourceID string `json:"source_id"`
	Name     string `json:"name"`
}

// GetID returns the value of ID.
func (s *EntitlementPermissionV4) GetID() string {
	return s.ID
}

// GetSourceID returns the value of SourceID.
func (s *EntitlementPermissionV4) GetSourceID() string {
	return s.SourceID
}

// GetName returns the value of Name.
func (s *EntitlementPermissionV4) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *EntitlementPermissionV4) SetID(val string) {
	s.ID = val
}

// SetSourceID sets the value of SourceID.
func (s *EntitlementPermissionV4) SetSourceID(val string) {
	s.SourceID = val
}

// SetName sets the value of Name.
func (s *EntitlementPermissionV4) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/EntitlementResourceV4
type EntitlementResourceV4 struct {
	ID       string         `json:"id"`
	SourceID string         `json:"source_id"`
	Type     ResourceTypeV4 `json:"type"`
	Name     string         `json:"name"`
}

// GetID returns the value of ID.
func (s *EntitlementResourceV4) GetID() string {
	return s.ID
}

// GetSourceID returns the value of SourceID.
func (s *EntitlementResourceV4) GetSourceID() string {
	return s.SourceID
}

// GetType returns the value of Type.
func (s *EntitlementResourceV4) GetType() ResourceTypeV4 {
	return s.Type
}

// GetName returns the value of Name.
func (s *EntitlementResourceV4) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *EntitlementResourceV4) SetID(val string) {
	s.ID = val
}

// SetSourceID sets the value of SourceID.
func (s *EntitlementResourceV4) SetSourceID(val string) {
	s.SourceID = val
}

// SetType sets the value of Type.
func (s *EntitlementResourceV4) SetType(val ResourceTypeV4) {
	s.Type = val
}

// SetName sets the value of Name.
func (s *EntitlementResourceV4) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/GcpSecretConfigV4
type GcpSecretConfigV4 struct {
	Project  string `json:"project"`
	SecretID string `json:"secret_id"`
}

// GetProject returns the value of Project.
func (s *GcpSecretConfigV4) GetProject() string {
	return s.Project
}

// GetSecretID returns the value of SecretID.
func (s *GcpSecretConfigV4) GetSecretID() string {
	return s.SecretID
}

// SetProject sets the value of Project.
func (s *GcpSecretConfigV4) SetProject(val string) {
	s.Project = val
}

// SetSecretID sets the value of SecretID.
func (s *GcpSecretConfigV4) SetSecretID(val string) {
	s.SecretID = val
}

// Ref: #/components/schemas/GetGrantRevokeAccessConnectorActionParamsModel
type GetGrantRevokeAccessConnectorActionParamsModel struct {
	RequestID          string   `json:"request_id"`
	FriendlyRequestID  string   `json:"friendly_request_id"`
	Username           string   `json:"username"`
	IntegrationID      string   `json:"integration_id"`
	ResourceType       string   `json:"resource_type"`
	ResourceSourceIds  []string `json:"resource_source_ids"`
	PermissionSourceID string   `json:"permission_source_id"`
}

// GetRequestID returns the value of RequestID.
func (s *GetGrantRevokeAccessConnectorActionParamsModel) GetRequestID() string {
	return s.RequestID
}

// GetFriendlyRequestID returns the value of FriendlyRequestID.
func (s *GetGrantRevokeAccessConnectorActionParamsModel) GetFriendlyRequestID() string {
	return s.FriendlyRequestID
}

// GetUsername returns the value of Username.
func (s *GetGrantRevokeAccessConnectorActionParamsModel) GetUsername() string {
	return s.Username
}

// GetIntegrationID returns the value of IntegrationID.
func (s *GetGrantRevokeAccessConnectorActionParamsModel) GetIntegrationID() string {
	return s.IntegrationID
}

// GetResourceType returns the value of ResourceType.
func (s *GetGrantRevokeAccessConnectorActionParamsModel) GetResourceType() string {
	return s.ResourceType
}

// GetResourceSourceIds returns the value of ResourceSourceIds.
func (s *GetGrantRevokeAccessConnectorActionParamsModel) GetResourceSourceIds() []string {
	return s.ResourceSourceIds
}

// GetPermissionSourceID returns the value of PermissionSourceID.
func (s *GetGrantRevokeAccessConnectorActionParamsModel) GetPermissionSourceID() string {
	return s.PermissionSourceID
}

// SetRequestID sets the value of RequestID.
func (s *GetGrantRevokeAccessConnectorActionParamsModel) SetRequestID(val string) {
	s.RequestID = val
}

// SetFriendlyRequestID sets the value of FriendlyRequestID.
func (s *GetGrantRevokeAccessConnectorActionParamsModel) SetFriendlyRequestID(val string) {
	s.FriendlyRequestID = val
}

// SetUsername sets the value of Username.
func (s *GetGrantRevokeAccessConnectorActionParamsModel) SetUsername(val string) {
	s.Username = val
}

// SetIntegrationID sets the value of IntegrationID.
func (s *GetGrantRevokeAccessConnectorActionParamsModel) SetIntegrationID(val string) {
	s.IntegrationID = val
}

// SetResourceType sets the value of ResourceType.
func (s *GetGrantRevokeAccessConnectorActionParamsModel) SetResourceType(val string) {
	s.ResourceType = val
}

// SetResourceSourceIds sets the value of ResourceSourceIds.
func (s *GetGrantRevokeAccessConnectorActionParamsModel) SetResourceSourceIds(val []string) {
	s.ResourceSourceIds = val
}

// SetPermissionSourceID sets the value of PermissionSourceID.
func (s *GetGrantRevokeAccessConnectorActionParamsModel) SetPermissionSourceID(val string) {
	s.PermissionSourceID = val
}

// Ref: #/components/schemas/GranteeV1
type GranteeV1 struct {
	ID   string `json:"id"`
	Type string `json:"type"`
}

// GetID returns the value of ID.
func (s *GranteeV1) GetID() string {
	return s.ID
}

// GetType returns the value of Type.
func (s *GranteeV1) GetType() string {
	return s.Type
}

// SetID sets the value of ID.
func (s *GranteeV1) SetID(val string) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *GranteeV1) SetType(val string) {
	s.Type = val
}

// Ref: #/components/schemas/GroupMemberV1
type GroupMemberV1 struct {
	Email string `json:"email"`
}

// GetEmail returns the value of Email.
func (s *GroupMemberV1) GetEmail() string {
	return s.Email
}

// SetEmail sets the value of Email.
func (s *GroupMemberV1) SetEmail(val string) {
	s.Email = val
}

// Ref: #/components/schemas/GroupV1
type GroupV1 struct {
	ID                    string       `json:"id"`
	Name                  string       `json:"name"`
	SourceID              OptNilString `json:"source_id"`
	SourceIntegrationID   OptNilString `json:"source_integration_id"`
	SourceIntegrationName OptNilString `json:"source_integration_name"`
}

// GetID returns the value of ID.
func (s *GroupV1) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *GroupV1) GetName() string {
	return s.Name
}

// GetSourceID returns the value of SourceID.
func (s *GroupV1) GetSourceID() OptNilString {
	return s.SourceID
}

// GetSourceIntegrationID returns the value of SourceIntegrationID.
func (s *GroupV1) GetSourceIntegrationID() OptNilString {
	return s.SourceIntegrationID
}

// GetSourceIntegrationName returns the value of SourceIntegrationName.
func (s *GroupV1) GetSourceIntegrationName() OptNilString {
	return s.SourceIntegrationName
}

// SetID sets the value of ID.
func (s *GroupV1) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GroupV1) SetName(val string) {
	s.Name = val
}

// SetSourceID sets the value of SourceID.
func (s *GroupV1) SetSourceID(val OptNilString) {
	s.SourceID = val
}

// SetSourceIntegrationID sets the value of SourceIntegrationID.
func (s *GroupV1) SetSourceIntegrationID(val OptNilString) {
	s.SourceIntegrationID = val
}

// SetSourceIntegrationName sets the value of SourceIntegrationName.
func (s *GroupV1) SetSourceIntegrationName(val OptNilString) {
	s.SourceIntegrationName = val
}

// Ref: #/components/schemas/HashicorpVaultSecretConfigV4
type HashicorpVaultSecretConfigV4 struct {
	SecretEngine string `json:"secret_engine"`
	Path         string `json:"path"`
}

// GetSecretEngine returns the value of SecretEngine.
func (s *HashicorpVaultSecretConfigV4) GetSecretEngine() string {
	return s.SecretEngine
}

// GetPath returns the value of Path.
func (s *HashicorpVaultSecretConfigV4) GetPath() string {
	return s.Path
}

// SetSecretEngine sets the value of SecretEngine.
func (s *HashicorpVaultSecretConfigV4) SetSecretEngine(val string) {
	s.SecretEngine = val
}

// SetPath sets the value of Path.
func (s *HashicorpVaultSecretConfigV4) SetPath(val string) {
	s.Path = val
}

// Ref: #/components/schemas/IdentitiesAttributesResponseModel
type IdentitiesAttributesResponseModel struct {
	Summary IdentitiesAttributesResponseSummaryModel `json:"summary"`
	Results []IdentityResultModel                    `json:"results"`
}

// GetSummary returns the value of Summary.
func (s *IdentitiesAttributesResponseModel) GetSummary() IdentitiesAttributesResponseSummaryModel {
	return s.Summary
}

// GetResults returns the value of Results.
func (s *IdentitiesAttributesResponseModel) GetResults() []IdentityResultModel {
	return s.Results
}

// SetSummary sets the value of Summary.
func (s *IdentitiesAttributesResponseModel) SetSummary(val IdentitiesAttributesResponseSummaryModel) {
	s.Summary = val
}

// SetResults sets the value of Results.
func (s *IdentitiesAttributesResponseModel) SetResults(val []IdentityResultModel) {
	s.Results = val
}

// Ref: #/components/schemas/IdentitiesAttributesResponseSummaryModel
type IdentitiesAttributesResponseSummaryModel struct {
	Total     int32 `json:"total"`
	Succeeded int32 `json:"succeeded"`
	Failed    int32 `json:"failed"`
}

// GetTotal returns the value of Total.
func (s *IdentitiesAttributesResponseSummaryModel) GetTotal() int32 {
	return s.Total
}

// GetSucceeded returns the value of Succeeded.
func (s *IdentitiesAttributesResponseSummaryModel) GetSucceeded() int32 {
	return s.Succeeded
}

// GetFailed returns the value of Failed.
func (s *IdentitiesAttributesResponseSummaryModel) GetFailed() int32 {
	return s.Failed
}

// SetTotal sets the value of Total.
func (s *IdentitiesAttributesResponseSummaryModel) SetTotal(val int32) {
	s.Total = val
}

// SetSucceeded sets the value of Succeeded.
func (s *IdentitiesAttributesResponseSummaryModel) SetSucceeded(val int32) {
	s.Succeeded = val
}

// SetFailed sets the value of Failed.
func (s *IdentitiesAttributesResponseSummaryModel) SetFailed(val int32) {
	s.Failed = val
}

// Ref: #/components/schemas/IdentityAttributeKeysModel
type IdentityAttributeKeysModel struct {
	Email          string   `json:"email"`
	AttributeTypes []string `json:"attribute_types"`
}

// GetEmail returns the value of Email.
func (s *IdentityAttributeKeysModel) GetEmail() string {
	return s.Email
}

// GetAttributeTypes returns the value of AttributeTypes.
func (s *IdentityAttributeKeysModel) GetAttributeTypes() []string {
	return s.AttributeTypes
}

// SetEmail sets the value of Email.
func (s *IdentityAttributeKeysModel) SetEmail(val string) {
	s.Email = val
}

// SetAttributeTypes sets the value of AttributeTypes.
func (s *IdentityAttributeKeysModel) SetAttributeTypes(val []string) {
	s.AttributeTypes = val
}

// Ref: #/components/schemas/IdentityAttributeModel
type IdentityAttributeModel struct {
	Email      string                           `json:"email"`
	Attributes IdentityAttributeModelAttributes `json:"attributes"`
}

// GetEmail returns the value of Email.
func (s *IdentityAttributeModel) GetEmail() string {
	return s.Email
}

// GetAttributes returns the value of Attributes.
func (s *IdentityAttributeModel) GetAttributes() IdentityAttributeModelAttributes {
	return s.Attributes
}

// SetEmail sets the value of Email.
func (s *IdentityAttributeModel) SetEmail(val string) {
	s.Email = val
}

// SetAttributes sets the value of Attributes.
func (s *IdentityAttributeModel) SetAttributes(val IdentityAttributeModelAttributes) {
	s.Attributes = val
}

type IdentityAttributeModelAttributes map[string]string

func (s *IdentityAttributeModelAttributes) init() IdentityAttributeModelAttributes {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/IdentityModel2
type IdentityModel2 struct {
	Type string `json:"type"`
	Name string `json:"name"`
	ID   string `json:"id"`
}

// GetType returns the value of Type.
func (s *IdentityModel2) GetType() string {
	return s.Type
}

// GetName returns the value of Name.
func (s *IdentityModel2) GetName() string {
	return s.Name
}

// GetID returns the value of ID.
func (s *IdentityModel2) GetID() string {
	return s.ID
}

// SetType sets the value of Type.
func (s *IdentityModel2) SetType(val string) {
	s.Type = val
}

// SetName sets the value of Name.
func (s *IdentityModel2) SetName(val string) {
	s.Name = val
}

// SetID sets the value of ID.
func (s *IdentityModel2) SetID(val string) {
	s.ID = val
}

// Ref: #/components/schemas/IdentityResultModel
type IdentityResultModel struct {
	Email   string             `json:"email"`
	Success bool               `json:"success"`
	Errors  []UpsertErrorModel `json:"errors"`
}

// GetEmail returns the value of Email.
func (s *IdentityResultModel) GetEmail() string {
	return s.Email
}

// GetSuccess returns the value of Success.
func (s *IdentityResultModel) GetSuccess() bool {
	return s.Success
}

// GetErrors returns the value of Errors.
func (s *IdentityResultModel) GetErrors() []UpsertErrorModel {
	return s.Errors
}

// SetEmail sets the value of Email.
func (s *IdentityResultModel) SetEmail(val string) {
	s.Email = val
}

// SetSuccess sets the value of Success.
func (s *IdentityResultModel) SetSuccess(val bool) {
	s.Success = val
}

// SetErrors sets the value of Errors.
func (s *IdentityResultModel) SetErrors(val []UpsertErrorModel) {
	s.Errors = val
}

type Instant float64

// Ref: #/components/schemas/Integration
type Integration struct {
	ID                     string                `json:"id"`
	Name                   string                `json:"name"`
	Type                   string                `json:"type"`
	Status                 IntegrationStatus     `json:"status"`
	Details                OptNilString          `json:"details"`
	ProvisionerID          OptNilString          `json:"provisioner_id"`
	Connection             OptConnectionMetadata `json:"connection"`
	LastSyncTime           OptNilInstant         `json:"last_sync_time"`
	Metadata               IntegrationMetadata   `json:"metadata"`
	SecretConfig           OptNilSecretConfig    `json:"secret_config"`
	ConnectedResourceTypes []string              `json:"connected_resource_types"`
	CustomAccessDetails    OptNilString          `json:"custom_access_details"`
}

// GetID returns the value of ID.
func (s *Integration) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *Integration) GetName() string {
	return s.Name
}

// GetType returns the value of Type.
func (s *Integration) GetType() string {
	return s.Type
}

// GetStatus returns the value of Status.
func (s *Integration) GetStatus() IntegrationStatus {
	return s.Status
}

// GetDetails returns the value of Details.
func (s *Integration) GetDetails() OptNilString {
	return s.Details
}

// GetProvisionerID returns the value of ProvisionerID.
func (s *Integration) GetProvisionerID() OptNilString {
	return s.ProvisionerID
}

// GetConnection returns the value of Connection.
func (s *Integration) GetConnection() OptConnectionMetadata {
	return s.Connection
}

// GetLastSyncTime returns the value of LastSyncTime.
func (s *Integration) GetLastSyncTime() OptNilInstant {
	return s.LastSyncTime
}

// GetMetadata returns the value of Metadata.
func (s *Integration) GetMetadata() IntegrationMetadata {
	return s.Metadata
}

// GetSecretConfig returns the value of SecretConfig.
func (s *Integration) GetSecretConfig() OptNilSecretConfig {
	return s.SecretConfig
}

// GetConnectedResourceTypes returns the value of ConnectedResourceTypes.
func (s *Integration) GetConnectedResourceTypes() []string {
	return s.ConnectedResourceTypes
}

// GetCustomAccessDetails returns the value of CustomAccessDetails.
func (s *Integration) GetCustomAccessDetails() OptNilString {
	return s.CustomAccessDetails
}

// SetID sets the value of ID.
func (s *Integration) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Integration) SetName(val string) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *Integration) SetType(val string) {
	s.Type = val
}

// SetStatus sets the value of Status.
func (s *Integration) SetStatus(val IntegrationStatus) {
	s.Status = val
}

// SetDetails sets the value of Details.
func (s *Integration) SetDetails(val OptNilString) {
	s.Details = val
}

// SetProvisionerID sets the value of ProvisionerID.
func (s *Integration) SetProvisionerID(val OptNilString) {
	s.ProvisionerID = val
}

// SetConnection sets the value of Connection.
func (s *Integration) SetConnection(val OptConnectionMetadata) {
	s.Connection = val
}

// SetLastSyncTime sets the value of LastSyncTime.
func (s *Integration) SetLastSyncTime(val OptNilInstant) {
	s.LastSyncTime = val
}

// SetMetadata sets the value of Metadata.
func (s *Integration) SetMetadata(val IntegrationMetadata) {
	s.Metadata = val
}

// SetSecretConfig sets the value of SecretConfig.
func (s *Integration) SetSecretConfig(val OptNilSecretConfig) {
	s.SecretConfig = val
}

// SetConnectedResourceTypes sets the value of ConnectedResourceTypes.
func (s *Integration) SetConnectedResourceTypes(val []string) {
	s.ConnectedResourceTypes = val
}

// SetCustomAccessDetails sets the value of CustomAccessDetails.
func (s *Integration) SetCustomAccessDetails(val OptNilString) {
	s.CustomAccessDetails = val
}

// IntegrationAccessTargetV2.
// Ref: #/components/schemas/IntegrationAccessTargetPublicV2Model
type IntegrationAccessTargetPublicV2Model struct {
	IntegrationID   string                                                        `json:"integration_id"`
	IntegrationName string                                                        `json:"integration_name"`
	ResourceType    string                                                        `json:"resource_type"`
	Permissions     []string                                                      `json:"permissions"`
	ResourcesScopes OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray `json:"resources_scopes"`
}

// GetIntegrationID returns the value of IntegrationID.
func (s *IntegrationAccessTargetPublicV2Model) GetIntegrationID() string {
	return s.IntegrationID
}

// GetIntegrationName returns the value of IntegrationName.
func (s *IntegrationAccessTargetPublicV2Model) GetIntegrationName() string {
	return s.IntegrationName
}

// GetResourceType returns the value of ResourceType.
func (s *IntegrationAccessTargetPublicV2Model) GetResourceType() string {
	return s.ResourceType
}

// GetPermissions returns the value of Permissions.
func (s *IntegrationAccessTargetPublicV2Model) GetPermissions() []string {
	return s.Permissions
}

// GetResourcesScopes returns the value of ResourcesScopes.
func (s *IntegrationAccessTargetPublicV2Model) GetResourcesScopes() OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray {
	return s.ResourcesScopes
}

// SetIntegrationID sets the value of IntegrationID.
func (s *IntegrationAccessTargetPublicV2Model) SetIntegrationID(val string) {
	s.IntegrationID = val
}

// SetIntegrationName sets the value of IntegrationName.
func (s *IntegrationAccessTargetPublicV2Model) SetIntegrationName(val string) {
	s.IntegrationName = val
}

// SetResourceType sets the value of ResourceType.
func (s *IntegrationAccessTargetPublicV2Model) SetResourceType(val string) {
	s.ResourceType = val
}

// SetPermissions sets the value of Permissions.
func (s *IntegrationAccessTargetPublicV2Model) SetPermissions(val []string) {
	s.Permissions = val
}

// SetResourcesScopes sets the value of ResourcesScopes.
func (s *IntegrationAccessTargetPublicV2Model) SetResourcesScopes(val OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray) {
	s.ResourcesScopes = val
}

// IntegrationAccessTargetUpsertV2.
// Ref: #/components/schemas/IntegrationAccessTargetUpsertPublicV2Model
type IntegrationAccessTargetUpsertPublicV2Model struct {
	IntegrationReference string                                                        `json:"integration_reference"`
	ResourceType         string                                                        `json:"resource_type"`
	Permissions          []string                                                      `json:"permissions"`
	ResourcesScopes      OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray `json:"resources_scopes"`
}

// GetIntegrationReference returns the value of IntegrationReference.
func (s *IntegrationAccessTargetUpsertPublicV2Model) GetIntegrationReference() string {
	return s.IntegrationReference
}

// GetResourceType returns the value of ResourceType.
func (s *IntegrationAccessTargetUpsertPublicV2Model) GetResourceType() string {
	return s.ResourceType
}

// GetPermissions returns the value of Permissions.
func (s *IntegrationAccessTargetUpsertPublicV2Model) GetPermissions() []string {
	return s.Permissions
}

// GetResourcesScopes returns the value of ResourcesScopes.
func (s *IntegrationAccessTargetUpsertPublicV2Model) GetResourcesScopes() OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray {
	return s.ResourcesScopes
}

// SetIntegrationReference sets the value of IntegrationReference.
func (s *IntegrationAccessTargetUpsertPublicV2Model) SetIntegrationReference(val string) {
	s.IntegrationReference = val
}

// SetResourceType sets the value of ResourceType.
func (s *IntegrationAccessTargetUpsertPublicV2Model) SetResourceType(val string) {
	s.ResourceType = val
}

// SetPermissions sets the value of Permissions.
func (s *IntegrationAccessTargetUpsertPublicV2Model) SetPermissions(val []string) {
	s.Permissions = val
}

// SetResourcesScopes sets the value of ResourcesScopes.
func (s *IntegrationAccessTargetUpsertPublicV2Model) SetResourcesScopes(val OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray) {
	s.ResourcesScopes = val
}

// Ref: #/components/schemas/IntegrationConfig
type IntegrationConfig struct {
	Name                 string                   `json:"name"`
	Type                 string                   `json:"type"`
	Description          string                   `json:"description"`
	Params               []IntegrationConfigParam `json:"params"`
	RequiresSecret       bool                     `json:"requires_secret"`
	SupportedSecretTypes []string                 `json:"supported_secret_types"`
}

// GetName returns the value of Name.
func (s *IntegrationConfig) GetName() string {
	return s.Name
}

// GetType returns the value of Type.
func (s *IntegrationConfig) GetType() string {
	return s.Type
}

// GetDescription returns the value of Description.
func (s *IntegrationConfig) GetDescription() string {
	return s.Description
}

// GetParams returns the value of Params.
func (s *IntegrationConfig) GetParams() []IntegrationConfigParam {
	return s.Params
}

// GetRequiresSecret returns the value of RequiresSecret.
func (s *IntegrationConfig) GetRequiresSecret() bool {
	return s.RequiresSecret
}

// GetSupportedSecretTypes returns the value of SupportedSecretTypes.
func (s *IntegrationConfig) GetSupportedSecretTypes() []string {
	return s.SupportedSecretTypes
}

// SetName sets the value of Name.
func (s *IntegrationConfig) SetName(val string) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *IntegrationConfig) SetType(val string) {
	s.Type = val
}

// SetDescription sets the value of Description.
func (s *IntegrationConfig) SetDescription(val string) {
	s.Description = val
}

// SetParams sets the value of Params.
func (s *IntegrationConfig) SetParams(val []IntegrationConfigParam) {
	s.Params = val
}

// SetRequiresSecret sets the value of RequiresSecret.
func (s *IntegrationConfig) SetRequiresSecret(val bool) {
	s.RequiresSecret = val
}

// SetSupportedSecretTypes sets the value of SupportedSecretTypes.
func (s *IntegrationConfig) SetSupportedSecretTypes(val []string) {
	s.SupportedSecretTypes = val
}

// Ref: #/components/schemas/IntegrationConfigParam
type IntegrationConfigParam struct {
	ID       string   `json:"id"`
	Label    string   `json:"label"`
	Values   []string `json:"values"`
	Default  string   `json:"default"`
	Optional bool     `json:"optional"`
}

// GetID returns the value of ID.
func (s *IntegrationConfigParam) GetID() string {
	return s.ID
}

// GetLabel returns the value of Label.
func (s *IntegrationConfigParam) GetLabel() string {
	return s.Label
}

// GetValues returns the value of Values.
func (s *IntegrationConfigParam) GetValues() []string {
	return s.Values
}

// GetDefault returns the value of Default.
func (s *IntegrationConfigParam) GetDefault() string {
	return s.Default
}

// GetOptional returns the value of Optional.
func (s *IntegrationConfigParam) GetOptional() bool {
	return s.Optional
}

// SetID sets the value of ID.
func (s *IntegrationConfigParam) SetID(val string) {
	s.ID = val
}

// SetLabel sets the value of Label.
func (s *IntegrationConfigParam) SetLabel(val string) {
	s.Label = val
}

// SetValues sets the value of Values.
func (s *IntegrationConfigParam) SetValues(val []string) {
	s.Values = val
}

// SetDefault sets the value of Default.
func (s *IntegrationConfigParam) SetDefault(val string) {
	s.Default = val
}

// SetOptional sets the value of Optional.
func (s *IntegrationConfigParam) SetOptional(val bool) {
	s.Optional = val
}

type IntegrationMetadata struct{}

// Ref: #/components/schemas/IntegrationPartialV4
type IntegrationPartialV4 struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *IntegrationPartialV4) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *IntegrationPartialV4) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *IntegrationPartialV4) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *IntegrationPartialV4) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/IntegrationStatus
type IntegrationStatus string

const (
	IntegrationStatusInitializing IntegrationStatus = "Initializing"
	IntegrationStatusRefreshing   IntegrationStatus = "Refreshing"
	IntegrationStatusActive       IntegrationStatus = "Active"
	IntegrationStatusError        IntegrationStatus = "Error"
	IntegrationStatusWarning      IntegrationStatus = "Warning"
	IntegrationStatusDisabled     IntegrationStatus = "Disabled"
)

// AllValues returns all IntegrationStatus values.
func (IntegrationStatus) AllValues() []IntegrationStatus {
	return []IntegrationStatus{
		IntegrationStatusInitializing,
		IntegrationStatusRefreshing,
		IntegrationStatusActive,
		IntegrationStatusError,
		IntegrationStatusWarning,
		IntegrationStatusDisabled,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s IntegrationStatus) MarshalText() ([]byte, error) {
	switch s {
	case IntegrationStatusInitializing:
		return []byte(s), nil
	case IntegrationStatusRefreshing:
		return []byte(s), nil
	case IntegrationStatusActive:
		return []byte(s), nil
	case IntegrationStatusError:
		return []byte(s), nil
	case IntegrationStatusWarning:
		return []byte(s), nil
	case IntegrationStatusDisabled:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *IntegrationStatus) UnmarshalText(data []byte) error {
	switch IntegrationStatus(data) {
	case IntegrationStatusInitializing:
		*s = IntegrationStatusInitializing
		return nil
	case IntegrationStatusRefreshing:
		*s = IntegrationStatusRefreshing
		return nil
	case IntegrationStatusActive:
		*s = IntegrationStatusActive
		return nil
	case IntegrationStatusError:
		*s = IntegrationStatusError
		return nil
	case IntegrationStatusWarning:
		*s = IntegrationStatusWarning
		return nil
	case IntegrationStatusDisabled:
		*s = IntegrationStatusDisabled
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/IntegrationV4
type IntegrationV4 struct {
	ID                     string                    `json:"id"`
	Name                   string                    `json:"name"`
	Type                   string                    `json:"type"`
	Category               string                    `json:"category"`
	ConnectorID            OptNilString              `json:"connector_id"`
	Status                 string                    `json:"status"`
	LastSyncTime           OptNilApiInstant          `json:"last_sync_time"`
	IntegrationConfig      JsonMapModel              `json:"integration_config"`
	SecretStoreConfig      OptNilSecretStoreConfigV4 `json:"secret_store_config"`
	ConnectedResourceTypes OptNilStringArray         `json:"connected_resource_types"`
	CustomAccessDetails    OptNilString              `json:"custom_access_details"`
	Owner                  OptNilOwnerV4             `json:"owner"`
	OwnersMapping          OptNilOwnerMappingV4      `json:"owners_mapping"`
}

// GetID returns the value of ID.
func (s *IntegrationV4) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *IntegrationV4) GetName() string {
	return s.Name
}

// GetType returns the value of Type.
func (s *IntegrationV4) GetType() string {
	return s.Type
}

// GetCategory returns the value of Category.
func (s *IntegrationV4) GetCategory() string {
	return s.Category
}

// GetConnectorID returns the value of ConnectorID.
func (s *IntegrationV4) GetConnectorID() OptNilString {
	return s.ConnectorID
}

// GetStatus returns the value of Status.
func (s *IntegrationV4) GetStatus() string {
	return s.Status
}

// GetLastSyncTime returns the value of LastSyncTime.
func (s *IntegrationV4) GetLastSyncTime() OptNilApiInstant {
	return s.LastSyncTime
}

// GetIntegrationConfig returns the value of IntegrationConfig.
func (s *IntegrationV4) GetIntegrationConfig() JsonMapModel {
	return s.IntegrationConfig
}

// GetSecretStoreConfig returns the value of SecretStoreConfig.
func (s *IntegrationV4) GetSecretStoreConfig() OptNilSecretStoreConfigV4 {
	return s.SecretStoreConfig
}

// GetConnectedResourceTypes returns the value of ConnectedResourceTypes.
func (s *IntegrationV4) GetConnectedResourceTypes() OptNilStringArray {
	return s.ConnectedResourceTypes
}

// GetCustomAccessDetails returns the value of CustomAccessDetails.
func (s *IntegrationV4) GetCustomAccessDetails() OptNilString {
	return s.CustomAccessDetails
}

// GetOwner returns the value of Owner.
func (s *IntegrationV4) GetOwner() OptNilOwnerV4 {
	return s.Owner
}

// GetOwnersMapping returns the value of OwnersMapping.
func (s *IntegrationV4) GetOwnersMapping() OptNilOwnerMappingV4 {
	return s.OwnersMapping
}

// SetID sets the value of ID.
func (s *IntegrationV4) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *IntegrationV4) SetName(val string) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *IntegrationV4) SetType(val string) {
	s.Type = val
}

// SetCategory sets the value of Category.
func (s *IntegrationV4) SetCategory(val string) {
	s.Category = val
}

// SetConnectorID sets the value of ConnectorID.
func (s *IntegrationV4) SetConnectorID(val OptNilString) {
	s.ConnectorID = val
}

// SetStatus sets the value of Status.
func (s *IntegrationV4) SetStatus(val string) {
	s.Status = val
}

// SetLastSyncTime sets the value of LastSyncTime.
func (s *IntegrationV4) SetLastSyncTime(val OptNilApiInstant) {
	s.LastSyncTime = val
}

// SetIntegrationConfig sets the value of IntegrationConfig.
func (s *IntegrationV4) SetIntegrationConfig(val JsonMapModel) {
	s.IntegrationConfig = val
}

// SetSecretStoreConfig sets the value of SecretStoreConfig.
func (s *IntegrationV4) SetSecretStoreConfig(val OptNilSecretStoreConfigV4) {
	s.SecretStoreConfig = val
}

// SetConnectedResourceTypes sets the value of ConnectedResourceTypes.
func (s *IntegrationV4) SetConnectedResourceTypes(val OptNilStringArray) {
	s.ConnectedResourceTypes = val
}

// SetCustomAccessDetails sets the value of CustomAccessDetails.
func (s *IntegrationV4) SetCustomAccessDetails(val OptNilString) {
	s.CustomAccessDetails = val
}

// SetOwner sets the value of Owner.
func (s *IntegrationV4) SetOwner(val OptNilOwnerV4) {
	s.Owner = val
}

// SetOwnersMapping sets the value of OwnersMapping.
func (s *IntegrationV4) SetOwnersMapping(val OptNilOwnerMappingV4) {
	s.OwnersMapping = val
}

// Ref: #/components/schemas/JsonMapModel
type JsonMapModel map[string]jx.Raw

func (s *JsonMapModel) init() JsonMapModel {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/KubernetesSecretConfigV4
type KubernetesSecretConfigV4 struct {
	Namespace string `json:"namespace"`
	Name      string `json:"name"`
}

// GetNamespace returns the value of Namespace.
func (s *KubernetesSecretConfigV4) GetNamespace() string {
	return s.Namespace
}

// GetName returns the value of Name.
func (s *KubernetesSecretConfigV4) GetName() string {
	return s.Name
}

// SetNamespace sets the value of Namespace.
func (s *KubernetesSecretConfigV4) SetNamespace(val string) {
	s.Namespace = val
}

// SetName sets the value of Name.
func (s *KubernetesSecretConfigV4) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/LinkV1
type LinkV1 struct {
	URL   string       `json:"url"`
	Title OptNilString `json:"title"`
}

// GetURL returns the value of URL.
func (s *LinkV1) GetURL() string {
	return s.URL
}

// GetTitle returns the value of Title.
func (s *LinkV1) GetTitle() OptNilString {
	return s.Title
}

// SetURL sets the value of URL.
func (s *LinkV1) SetURL(val string) {
	s.URL = val
}

// SetTitle sets the value of Title.
func (s *LinkV1) SetTitle(val OptNilString) {
	s.Title = val
}

// Ref: #/components/schemas/MessageResponse
type MessageResponse struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *MessageResponse) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *MessageResponse) SetMessage(val string) {
	s.Message = val
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *NilString) SetToNull() {
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptConnectionMetadata returns new OptConnectionMetadata with value set to v.
func NewOptConnectionMetadata(v *ConnectionMetadata) OptConnectionMetadata {
	return OptConnectionMetadata{
		Value: v,
		Set:   true,
	}
}

// OptConnectionMetadata is optional *ConnectionMetadata.
type OptConnectionMetadata struct {
	Value *ConnectionMetadata
	Set   bool
}

// IsSet returns true if OptConnectionMetadata was set.
func (o OptConnectionMetadata) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptConnectionMetadata) Reset() {
	var v *ConnectionMetadata
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptConnectionMetadata) SetTo(v *ConnectionMetadata) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptConnectionMetadata) Get() (v *ConnectionMetadata, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptConnectionMetadata) Or(d *ConnectionMetadata) *ConnectionMetadata {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptConnectorActionParamsModelIntegrationMetadata returns new OptConnectorActionParamsModelIntegrationMetadata with value set to v.
func NewOptConnectorActionParamsModelIntegrationMetadata(v *ConnectorActionParamsModelIntegrationMetadata) OptConnectorActionParamsModelIntegrationMetadata {
	return OptConnectorActionParamsModelIntegrationMetadata{
		Value: v,
		Set:   true,
	}
}

// OptConnectorActionParamsModelIntegrationMetadata is optional *ConnectorActionParamsModelIntegrationMetadata.
type OptConnectorActionParamsModelIntegrationMetadata struct {
	Value *ConnectorActionParamsModelIntegrationMetadata
	Set   bool
}

// IsSet returns true if OptConnectorActionParamsModelIntegrationMetadata was set.
func (o OptConnectorActionParamsModelIntegrationMetadata) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptConnectorActionParamsModelIntegrationMetadata) Reset() {
	var v *ConnectorActionParamsModelIntegrationMetadata
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptConnectorActionParamsModelIntegrationMetadata) SetTo(v *ConnectorActionParamsModelIntegrationMetadata) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptConnectorActionParamsModelIntegrationMetadata) Get() (v *ConnectorActionParamsModelIntegrationMetadata, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptConnectorActionParamsModelIntegrationMetadata) Or(d *ConnectorActionParamsModelIntegrationMetadata) *ConnectorActionParamsModelIntegrationMetadata {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAccessFlowSettingsV1 returns new OptNilAccessFlowSettingsV1 with value set to v.
func NewOptNilAccessFlowSettingsV1(v AccessFlowSettingsV1) OptNilAccessFlowSettingsV1 {
	return OptNilAccessFlowSettingsV1{
		Value: v,
		Set:   true,
	}
}

// OptNilAccessFlowSettingsV1 is optional nullable AccessFlowSettingsV1.
type OptNilAccessFlowSettingsV1 struct {
	Value AccessFlowSettingsV1
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAccessFlowSettingsV1 was set.
func (o OptNilAccessFlowSettingsV1) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAccessFlowSettingsV1) Reset() {
	var v AccessFlowSettingsV1
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAccessFlowSettingsV1) SetTo(v AccessFlowSettingsV1) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilAccessFlowSettingsV1) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilAccessFlowSettingsV1) SetToNull() {
	o.Set = true
	o.Null = true
	var v AccessFlowSettingsV1
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAccessFlowSettingsV1) Get() (v AccessFlowSettingsV1, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAccessFlowSettingsV1) Or(d AccessFlowSettingsV1) AccessFlowSettingsV1 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAccessFlowTimeframePublicV2Model returns new OptNilAccessFlowTimeframePublicV2Model with value set to v.
func NewOptNilAccessFlowTimeframePublicV2Model(v AccessFlowTimeframePublicV2Model) OptNilAccessFlowTimeframePublicV2Model {
	return OptNilAccessFlowTimeframePublicV2Model{
		Value: v,
		Set:   true,
	}
}

// OptNilAccessFlowTimeframePublicV2Model is optional nullable AccessFlowTimeframePublicV2Model.
type OptNilAccessFlowTimeframePublicV2Model struct {
	Value AccessFlowTimeframePublicV2Model
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAccessFlowTimeframePublicV2Model was set.
func (o OptNilAccessFlowTimeframePublicV2Model) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAccessFlowTimeframePublicV2Model) Reset() {
	var v AccessFlowTimeframePublicV2Model
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAccessFlowTimeframePublicV2Model) SetTo(v AccessFlowTimeframePublicV2Model) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilAccessFlowTimeframePublicV2Model) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilAccessFlowTimeframePublicV2Model) SetToNull() {
	o.Set = true
	o.Null = true
	var v AccessFlowTimeframePublicV2Model
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAccessFlowTimeframePublicV2Model) Get() (v AccessFlowTimeframePublicV2Model, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAccessFlowTimeframePublicV2Model) Or(d AccessFlowTimeframePublicV2Model) AccessFlowTimeframePublicV2Model {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAccessFlowTriggerV1 returns new OptNilAccessFlowTriggerV1 with value set to v.
func NewOptNilAccessFlowTriggerV1(v AccessFlowTriggerV1) OptNilAccessFlowTriggerV1 {
	return OptNilAccessFlowTriggerV1{
		Value: v,
		Set:   true,
	}
}

// OptNilAccessFlowTriggerV1 is optional nullable AccessFlowTriggerV1.
type OptNilAccessFlowTriggerV1 struct {
	Value AccessFlowTriggerV1
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAccessFlowTriggerV1 was set.
func (o OptNilAccessFlowTriggerV1) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAccessFlowTriggerV1) Reset() {
	var v AccessFlowTriggerV1
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAccessFlowTriggerV1) SetTo(v AccessFlowTriggerV1) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilAccessFlowTriggerV1) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilAccessFlowTriggerV1) SetToNull() {
	o.Set = true
	o.Null = true
	var v AccessFlowTriggerV1
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAccessFlowTriggerV1) Get() (v AccessFlowTriggerV1, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAccessFlowTriggerV1) Or(d AccessFlowTriggerV1) AccessFlowTriggerV1 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAccessScopeAccessTargetPublicV2Model returns new OptNilAccessScopeAccessTargetPublicV2Model with value set to v.
func NewOptNilAccessScopeAccessTargetPublicV2Model(v AccessScopeAccessTargetPublicV2Model) OptNilAccessScopeAccessTargetPublicV2Model {
	return OptNilAccessScopeAccessTargetPublicV2Model{
		Value: v,
		Set:   true,
	}
}

// OptNilAccessScopeAccessTargetPublicV2Model is optional nullable AccessScopeAccessTargetPublicV2Model.
type OptNilAccessScopeAccessTargetPublicV2Model struct {
	Value AccessScopeAccessTargetPublicV2Model
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAccessScopeAccessTargetPublicV2Model was set.
func (o OptNilAccessScopeAccessTargetPublicV2Model) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAccessScopeAccessTargetPublicV2Model) Reset() {
	var v AccessScopeAccessTargetPublicV2Model
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAccessScopeAccessTargetPublicV2Model) SetTo(v AccessScopeAccessTargetPublicV2Model) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilAccessScopeAccessTargetPublicV2Model) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilAccessScopeAccessTargetPublicV2Model) SetToNull() {
	o.Set = true
	o.Null = true
	var v AccessScopeAccessTargetPublicV2Model
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAccessScopeAccessTargetPublicV2Model) Get() (v AccessScopeAccessTargetPublicV2Model, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAccessScopeAccessTargetPublicV2Model) Or(d AccessScopeAccessTargetPublicV2Model) AccessScopeAccessTargetPublicV2Model {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAccessScopeAccessTargetUpsertPublicV2Model returns new OptNilAccessScopeAccessTargetUpsertPublicV2Model with value set to v.
func NewOptNilAccessScopeAccessTargetUpsertPublicV2Model(v AccessScopeAccessTargetUpsertPublicV2Model) OptNilAccessScopeAccessTargetUpsertPublicV2Model {
	return OptNilAccessScopeAccessTargetUpsertPublicV2Model{
		Value: v,
		Set:   true,
	}
}

// OptNilAccessScopeAccessTargetUpsertPublicV2Model is optional nullable AccessScopeAccessTargetUpsertPublicV2Model.
type OptNilAccessScopeAccessTargetUpsertPublicV2Model struct {
	Value AccessScopeAccessTargetUpsertPublicV2Model
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAccessScopeAccessTargetUpsertPublicV2Model was set.
func (o OptNilAccessScopeAccessTargetUpsertPublicV2Model) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAccessScopeAccessTargetUpsertPublicV2Model) Reset() {
	var v AccessScopeAccessTargetUpsertPublicV2Model
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAccessScopeAccessTargetUpsertPublicV2Model) SetTo(v AccessScopeAccessTargetUpsertPublicV2Model) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilAccessScopeAccessTargetUpsertPublicV2Model) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilAccessScopeAccessTargetUpsertPublicV2Model) SetToNull() {
	o.Set = true
	o.Null = true
	var v AccessScopeAccessTargetUpsertPublicV2Model
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAccessScopeAccessTargetUpsertPublicV2Model) Get() (v AccessScopeAccessTargetUpsertPublicV2Model, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAccessScopeAccessTargetUpsertPublicV2Model) Or(d AccessScopeAccessTargetUpsertPublicV2Model) AccessScopeAccessTargetUpsertPublicV2Model {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAccessSessionDetailsV1Parameters returns new OptNilAccessSessionDetailsV1Parameters with value set to v.
func NewOptNilAccessSessionDetailsV1Parameters(v AccessSessionDetailsV1Parameters) OptNilAccessSessionDetailsV1Parameters {
	return OptNilAccessSessionDetailsV1Parameters{
		Value: v,
		Set:   true,
	}
}

// OptNilAccessSessionDetailsV1Parameters is optional nullable AccessSessionDetailsV1Parameters.
type OptNilAccessSessionDetailsV1Parameters struct {
	Value AccessSessionDetailsV1Parameters
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAccessSessionDetailsV1Parameters was set.
func (o OptNilAccessSessionDetailsV1Parameters) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAccessSessionDetailsV1Parameters) Reset() {
	var v AccessSessionDetailsV1Parameters
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAccessSessionDetailsV1Parameters) SetTo(v AccessSessionDetailsV1Parameters) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilAccessSessionDetailsV1Parameters) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilAccessSessionDetailsV1Parameters) SetToNull() {
	o.Set = true
	o.Null = true
	var v AccessSessionDetailsV1Parameters
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAccessSessionDetailsV1Parameters) Get() (v AccessSessionDetailsV1Parameters, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAccessSessionDetailsV1Parameters) Or(d AccessSessionDetailsV1Parameters) AccessSessionDetailsV1Parameters {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAccessTargetBundleV1Array returns new OptNilAccessTargetBundleV1Array with value set to v.
func NewOptNilAccessTargetBundleV1Array(v []AccessTargetBundleV1) OptNilAccessTargetBundleV1Array {
	return OptNilAccessTargetBundleV1Array{
		Value: v,
		Set:   true,
	}
}

// OptNilAccessTargetBundleV1Array is optional nullable []AccessTargetBundleV1.
type OptNilAccessTargetBundleV1Array struct {
	Value []AccessTargetBundleV1
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAccessTargetBundleV1Array was set.
func (o OptNilAccessTargetBundleV1Array) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAccessTargetBundleV1Array) Reset() {
	var v []AccessTargetBundleV1
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAccessTargetBundleV1Array) SetTo(v []AccessTargetBundleV1) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilAccessTargetBundleV1Array) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilAccessTargetBundleV1Array) SetToNull() {
	o.Set = true
	o.Null = true
	var v []AccessTargetBundleV1
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAccessTargetBundleV1Array) Get() (v []AccessTargetBundleV1, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAccessTargetBundleV1Array) Or(d []AccessTargetBundleV1) []AccessTargetBundleV1 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAccessTargetIntegrationV1Array returns new OptNilAccessTargetIntegrationV1Array with value set to v.
func NewOptNilAccessTargetIntegrationV1Array(v []AccessTargetIntegrationV1) OptNilAccessTargetIntegrationV1Array {
	return OptNilAccessTargetIntegrationV1Array{
		Value: v,
		Set:   true,
	}
}

// OptNilAccessTargetIntegrationV1Array is optional nullable []AccessTargetIntegrationV1.
type OptNilAccessTargetIntegrationV1Array struct {
	Value []AccessTargetIntegrationV1
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAccessTargetIntegrationV1Array was set.
func (o OptNilAccessTargetIntegrationV1Array) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAccessTargetIntegrationV1Array) Reset() {
	var v []AccessTargetIntegrationV1
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAccessTargetIntegrationV1Array) SetTo(v []AccessTargetIntegrationV1) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilAccessTargetIntegrationV1Array) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilAccessTargetIntegrationV1Array) SetToNull() {
	o.Set = true
	o.Null = true
	var v []AccessTargetIntegrationV1
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAccessTargetIntegrationV1Array) Get() (v []AccessTargetIntegrationV1, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAccessTargetIntegrationV1Array) Or(d []AccessTargetIntegrationV1) []AccessTargetIntegrationV1 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilApiInstant returns new OptNilApiInstant with value set to v.
func NewOptNilApiInstant(v ApiInstant) OptNilApiInstant {
	return OptNilApiInstant{
		Value: v,
		Set:   true,
	}
}

// OptNilApiInstant is optional nullable ApiInstant.
type OptNilApiInstant struct {
	Value ApiInstant
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilApiInstant was set.
func (o OptNilApiInstant) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilApiInstant) Reset() {
	var v ApiInstant
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilApiInstant) SetTo(v ApiInstant) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilApiInstant) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilApiInstant) SetToNull() {
	o.Set = true
	o.Null = true
	var v ApiInstant
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilApiInstant) Get() (v ApiInstant, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilApiInstant) Or(d ApiInstant) ApiInstant {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAponoSecretConfigV4 returns new OptNilAponoSecretConfigV4 with value set to v.
func NewOptNilAponoSecretConfigV4(v AponoSecretConfigV4) OptNilAponoSecretConfigV4 {
	return OptNilAponoSecretConfigV4{
		Value: v,
		Set:   true,
	}
}

// OptNilAponoSecretConfigV4 is optional nullable AponoSecretConfigV4.
type OptNilAponoSecretConfigV4 struct {
	Value AponoSecretConfigV4
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAponoSecretConfigV4 was set.
func (o OptNilAponoSecretConfigV4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAponoSecretConfigV4) Reset() {
	var v AponoSecretConfigV4
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAponoSecretConfigV4) SetTo(v AponoSecretConfigV4) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilAponoSecretConfigV4) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilAponoSecretConfigV4) SetToNull() {
	o.Set = true
	o.Null = true
	var v AponoSecretConfigV4
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAponoSecretConfigV4) Get() (v AponoSecretConfigV4, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAponoSecretConfigV4) Or(d AponoSecretConfigV4) AponoSecretConfigV4 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilApproverPolicyPublicV2Model returns new OptNilApproverPolicyPublicV2Model with value set to v.
func NewOptNilApproverPolicyPublicV2Model(v ApproverPolicyPublicV2Model) OptNilApproverPolicyPublicV2Model {
	return OptNilApproverPolicyPublicV2Model{
		Value: v,
		Set:   true,
	}
}

// OptNilApproverPolicyPublicV2Model is optional nullable ApproverPolicyPublicV2Model.
type OptNilApproverPolicyPublicV2Model struct {
	Value ApproverPolicyPublicV2Model
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilApproverPolicyPublicV2Model was set.
func (o OptNilApproverPolicyPublicV2Model) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilApproverPolicyPublicV2Model) Reset() {
	var v ApproverPolicyPublicV2Model
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilApproverPolicyPublicV2Model) SetTo(v ApproverPolicyPublicV2Model) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilApproverPolicyPublicV2Model) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilApproverPolicyPublicV2Model) SetToNull() {
	o.Set = true
	o.Null = true
	var v ApproverPolicyPublicV2Model
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilApproverPolicyPublicV2Model) Get() (v ApproverPolicyPublicV2Model, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilApproverPolicyPublicV2Model) Or(d ApproverPolicyPublicV2Model) ApproverPolicyPublicV2Model {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilApproverPolicyUpsertPublicV2Model returns new OptNilApproverPolicyUpsertPublicV2Model with value set to v.
func NewOptNilApproverPolicyUpsertPublicV2Model(v ApproverPolicyUpsertPublicV2Model) OptNilApproverPolicyUpsertPublicV2Model {
	return OptNilApproverPolicyUpsertPublicV2Model{
		Value: v,
		Set:   true,
	}
}

// OptNilApproverPolicyUpsertPublicV2Model is optional nullable ApproverPolicyUpsertPublicV2Model.
type OptNilApproverPolicyUpsertPublicV2Model struct {
	Value ApproverPolicyUpsertPublicV2Model
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilApproverPolicyUpsertPublicV2Model was set.
func (o OptNilApproverPolicyUpsertPublicV2Model) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilApproverPolicyUpsertPublicV2Model) Reset() {
	var v ApproverPolicyUpsertPublicV2Model
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilApproverPolicyUpsertPublicV2Model) SetTo(v ApproverPolicyUpsertPublicV2Model) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilApproverPolicyUpsertPublicV2Model) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilApproverPolicyUpsertPublicV2Model) SetToNull() {
	o.Set = true
	o.Null = true
	var v ApproverPolicyUpsertPublicV2Model
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilApproverPolicyUpsertPublicV2Model) Get() (v ApproverPolicyUpsertPublicV2Model, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilApproverPolicyUpsertPublicV2Model) Or(d ApproverPolicyUpsertPublicV2Model) ApproverPolicyUpsertPublicV2Model {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilApproverV1Array returns new OptNilApproverV1Array with value set to v.
func NewOptNilApproverV1Array(v []ApproverV1) OptNilApproverV1Array {
	return OptNilApproverV1Array{
		Value: v,
		Set:   true,
	}
}

// OptNilApproverV1Array is optional nullable []ApproverV1.
type OptNilApproverV1Array struct {
	Value []ApproverV1
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilApproverV1Array was set.
func (o OptNilApproverV1Array) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilApproverV1Array) Reset() {
	var v []ApproverV1
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilApproverV1Array) SetTo(v []ApproverV1) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilApproverV1Array) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilApproverV1Array) SetToNull() {
	o.Set = true
	o.Null = true
	var v []ApproverV1
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilApproverV1Array) Get() (v []ApproverV1, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilApproverV1Array) Or(d []ApproverV1) []ApproverV1 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAwsSecretConfigV4 returns new OptNilAwsSecretConfigV4 with value set to v.
func NewOptNilAwsSecretConfigV4(v AwsSecretConfigV4) OptNilAwsSecretConfigV4 {
	return OptNilAwsSecretConfigV4{
		Value: v,
		Set:   true,
	}
}

// OptNilAwsSecretConfigV4 is optional nullable AwsSecretConfigV4.
type OptNilAwsSecretConfigV4 struct {
	Value AwsSecretConfigV4
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAwsSecretConfigV4 was set.
func (o OptNilAwsSecretConfigV4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAwsSecretConfigV4) Reset() {
	var v AwsSecretConfigV4
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAwsSecretConfigV4) SetTo(v AwsSecretConfigV4) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilAwsSecretConfigV4) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilAwsSecretConfigV4) SetToNull() {
	o.Set = true
	o.Null = true
	var v AwsSecretConfigV4
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAwsSecretConfigV4) Get() (v AwsSecretConfigV4, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAwsSecretConfigV4) Or(d AwsSecretConfigV4) AwsSecretConfigV4 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilAzureSecretConfigV4 returns new OptNilAzureSecretConfigV4 with value set to v.
func NewOptNilAzureSecretConfigV4(v AzureSecretConfigV4) OptNilAzureSecretConfigV4 {
	return OptNilAzureSecretConfigV4{
		Value: v,
		Set:   true,
	}
}

// OptNilAzureSecretConfigV4 is optional nullable AzureSecretConfigV4.
type OptNilAzureSecretConfigV4 struct {
	Value AzureSecretConfigV4
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilAzureSecretConfigV4 was set.
func (o OptNilAzureSecretConfigV4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilAzureSecretConfigV4) Reset() {
	var v AzureSecretConfigV4
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilAzureSecretConfigV4) SetTo(v AzureSecretConfigV4) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilAzureSecretConfigV4) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilAzureSecretConfigV4) SetToNull() {
	o.Set = true
	o.Null = true
	var v AzureSecretConfigV4
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilAzureSecretConfigV4) Get() (v AzureSecretConfigV4, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilAzureSecretConfigV4) Or(d AzureSecretConfigV4) AzureSecretConfigV4 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBool returns new OptNilBool with value set to v.
func NewOptNilBool(v bool) OptNilBool {
	return OptNilBool{
		Value: v,
		Set:   true,
	}
}

// OptNilBool is optional nullable bool.
type OptNilBool struct {
	Value bool
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBool was set.
func (o OptNilBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBool) SetTo(v bool) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilBool) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilBool) SetToNull() {
	o.Set = true
	o.Null = true
	var v bool
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBool) Get() (v bool, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBundleAccessTargetPublicV2Model returns new OptNilBundleAccessTargetPublicV2Model with value set to v.
func NewOptNilBundleAccessTargetPublicV2Model(v BundleAccessTargetPublicV2Model) OptNilBundleAccessTargetPublicV2Model {
	return OptNilBundleAccessTargetPublicV2Model{
		Value: v,
		Set:   true,
	}
}

// OptNilBundleAccessTargetPublicV2Model is optional nullable BundleAccessTargetPublicV2Model.
type OptNilBundleAccessTargetPublicV2Model struct {
	Value BundleAccessTargetPublicV2Model
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBundleAccessTargetPublicV2Model was set.
func (o OptNilBundleAccessTargetPublicV2Model) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBundleAccessTargetPublicV2Model) Reset() {
	var v BundleAccessTargetPublicV2Model
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBundleAccessTargetPublicV2Model) SetTo(v BundleAccessTargetPublicV2Model) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilBundleAccessTargetPublicV2Model) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilBundleAccessTargetPublicV2Model) SetToNull() {
	o.Set = true
	o.Null = true
	var v BundleAccessTargetPublicV2Model
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBundleAccessTargetPublicV2Model) Get() (v BundleAccessTargetPublicV2Model, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBundleAccessTargetPublicV2Model) Or(d BundleAccessTargetPublicV2Model) BundleAccessTargetPublicV2Model {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBundleAccessTargetUpsertPublicV2Model returns new OptNilBundleAccessTargetUpsertPublicV2Model with value set to v.
func NewOptNilBundleAccessTargetUpsertPublicV2Model(v BundleAccessTargetUpsertPublicV2Model) OptNilBundleAccessTargetUpsertPublicV2Model {
	return OptNilBundleAccessTargetUpsertPublicV2Model{
		Value: v,
		Set:   true,
	}
}

// OptNilBundleAccessTargetUpsertPublicV2Model is optional nullable BundleAccessTargetUpsertPublicV2Model.
type OptNilBundleAccessTargetUpsertPublicV2Model struct {
	Value BundleAccessTargetUpsertPublicV2Model
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBundleAccessTargetUpsertPublicV2Model was set.
func (o OptNilBundleAccessTargetUpsertPublicV2Model) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBundleAccessTargetUpsertPublicV2Model) Reset() {
	var v BundleAccessTargetUpsertPublicV2Model
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBundleAccessTargetUpsertPublicV2Model) SetTo(v BundleAccessTargetUpsertPublicV2Model) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilBundleAccessTargetUpsertPublicV2Model) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilBundleAccessTargetUpsertPublicV2Model) SetToNull() {
	o.Set = true
	o.Null = true
	var v BundleAccessTargetUpsertPublicV2Model
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBundleAccessTargetUpsertPublicV2Model) Get() (v BundleAccessTargetUpsertPublicV2Model, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBundleAccessTargetUpsertPublicV2Model) Or(d BundleAccessTargetUpsertPublicV2Model) BundleAccessTargetUpsertPublicV2Model {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilBundlePartialV4 returns new OptNilBundlePartialV4 with value set to v.
func NewOptNilBundlePartialV4(v BundlePartialV4) OptNilBundlePartialV4 {
	return OptNilBundlePartialV4{
		Value: v,
		Set:   true,
	}
}

// OptNilBundlePartialV4 is optional nullable BundlePartialV4.
type OptNilBundlePartialV4 struct {
	Value BundlePartialV4
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilBundlePartialV4 was set.
func (o OptNilBundlePartialV4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilBundlePartialV4) Reset() {
	var v BundlePartialV4
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilBundlePartialV4) SetTo(v BundlePartialV4) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilBundlePartialV4) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilBundlePartialV4) SetToNull() {
	o.Set = true
	o.Null = true
	var v BundlePartialV4
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilBundlePartialV4) Get() (v BundlePartialV4, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilBundlePartialV4) Or(d BundlePartialV4) BundlePartialV4 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilConnectorSessionsCloudProviderMetadataV3 returns new OptNilConnectorSessionsCloudProviderMetadataV3 with value set to v.
func NewOptNilConnectorSessionsCloudProviderMetadataV3(v ConnectorSessionsCloudProviderMetadataV3) OptNilConnectorSessionsCloudProviderMetadataV3 {
	return OptNilConnectorSessionsCloudProviderMetadataV3{
		Value: v,
		Set:   true,
	}
}

// OptNilConnectorSessionsCloudProviderMetadataV3 is optional nullable ConnectorSessionsCloudProviderMetadataV3.
type OptNilConnectorSessionsCloudProviderMetadataV3 struct {
	Value ConnectorSessionsCloudProviderMetadataV3
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilConnectorSessionsCloudProviderMetadataV3 was set.
func (o OptNilConnectorSessionsCloudProviderMetadataV3) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilConnectorSessionsCloudProviderMetadataV3) Reset() {
	var v ConnectorSessionsCloudProviderMetadataV3
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilConnectorSessionsCloudProviderMetadataV3) SetTo(v ConnectorSessionsCloudProviderMetadataV3) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilConnectorSessionsCloudProviderMetadataV3) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilConnectorSessionsCloudProviderMetadataV3) SetToNull() {
	o.Set = true
	o.Null = true
	var v ConnectorSessionsCloudProviderMetadataV3
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilConnectorSessionsCloudProviderMetadataV3) Get() (v ConnectorSessionsCloudProviderMetadataV3, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilConnectorSessionsCloudProviderMetadataV3) Or(d ConnectorSessionsCloudProviderMetadataV3) ConnectorSessionsCloudProviderMetadataV3 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilCreateAccessRequestEntitlementV4Array returns new OptNilCreateAccessRequestEntitlementV4Array with value set to v.
func NewOptNilCreateAccessRequestEntitlementV4Array(v []CreateAccessRequestEntitlementV4) OptNilCreateAccessRequestEntitlementV4Array {
	return OptNilCreateAccessRequestEntitlementV4Array{
		Value: v,
		Set:   true,
	}
}

// OptNilCreateAccessRequestEntitlementV4Array is optional nullable []CreateAccessRequestEntitlementV4.
type OptNilCreateAccessRequestEntitlementV4Array struct {
	Value []CreateAccessRequestEntitlementV4
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilCreateAccessRequestEntitlementV4Array was set.
func (o OptNilCreateAccessRequestEntitlementV4Array) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilCreateAccessRequestEntitlementV4Array) Reset() {
	var v []CreateAccessRequestEntitlementV4
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilCreateAccessRequestEntitlementV4Array) SetTo(v []CreateAccessRequestEntitlementV4) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilCreateAccessRequestEntitlementV4Array) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilCreateAccessRequestEntitlementV4Array) SetToNull() {
	o.Set = true
	o.Null = true
	var v []CreateAccessRequestEntitlementV4
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilCreateAccessRequestEntitlementV4Array) Get() (v []CreateAccessRequestEntitlementV4, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilCreateAccessRequestEntitlementV4Array) Or(d []CreateAccessRequestEntitlementV4) []CreateAccessRequestEntitlementV4 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilGcpSecretConfigV4 returns new OptNilGcpSecretConfigV4 with value set to v.
func NewOptNilGcpSecretConfigV4(v GcpSecretConfigV4) OptNilGcpSecretConfigV4 {
	return OptNilGcpSecretConfigV4{
		Value: v,
		Set:   true,
	}
}

// OptNilGcpSecretConfigV4 is optional nullable GcpSecretConfigV4.
type OptNilGcpSecretConfigV4 struct {
	Value GcpSecretConfigV4
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGcpSecretConfigV4 was set.
func (o OptNilGcpSecretConfigV4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGcpSecretConfigV4) Reset() {
	var v GcpSecretConfigV4
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGcpSecretConfigV4) SetTo(v GcpSecretConfigV4) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilGcpSecretConfigV4) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilGcpSecretConfigV4) SetToNull() {
	o.Set = true
	o.Null = true
	var v GcpSecretConfigV4
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGcpSecretConfigV4) Get() (v GcpSecretConfigV4, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilGcpSecretConfigV4) Or(d GcpSecretConfigV4) GcpSecretConfigV4 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilGranteeV1Array returns new OptNilGranteeV1Array with value set to v.
func NewOptNilGranteeV1Array(v []GranteeV1) OptNilGranteeV1Array {
	return OptNilGranteeV1Array{
		Value: v,
		Set:   true,
	}
}

// OptNilGranteeV1Array is optional nullable []GranteeV1.
type OptNilGranteeV1Array struct {
	Value []GranteeV1
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilGranteeV1Array was set.
func (o OptNilGranteeV1Array) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilGranteeV1Array) Reset() {
	var v []GranteeV1
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilGranteeV1Array) SetTo(v []GranteeV1) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilGranteeV1Array) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilGranteeV1Array) SetToNull() {
	o.Set = true
	o.Null = true
	var v []GranteeV1
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilGranteeV1Array) Get() (v []GranteeV1, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilGranteeV1Array) Or(d []GranteeV1) []GranteeV1 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilHashicorpVaultSecretConfigV4 returns new OptNilHashicorpVaultSecretConfigV4 with value set to v.
func NewOptNilHashicorpVaultSecretConfigV4(v HashicorpVaultSecretConfigV4) OptNilHashicorpVaultSecretConfigV4 {
	return OptNilHashicorpVaultSecretConfigV4{
		Value: v,
		Set:   true,
	}
}

// OptNilHashicorpVaultSecretConfigV4 is optional nullable HashicorpVaultSecretConfigV4.
type OptNilHashicorpVaultSecretConfigV4 struct {
	Value HashicorpVaultSecretConfigV4
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilHashicorpVaultSecretConfigV4 was set.
func (o OptNilHashicorpVaultSecretConfigV4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilHashicorpVaultSecretConfigV4) Reset() {
	var v HashicorpVaultSecretConfigV4
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilHashicorpVaultSecretConfigV4) SetTo(v HashicorpVaultSecretConfigV4) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilHashicorpVaultSecretConfigV4) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilHashicorpVaultSecretConfigV4) SetToNull() {
	o.Set = true
	o.Null = true
	var v HashicorpVaultSecretConfigV4
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilHashicorpVaultSecretConfigV4) Get() (v HashicorpVaultSecretConfigV4, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilHashicorpVaultSecretConfigV4) Or(d HashicorpVaultSecretConfigV4) HashicorpVaultSecretConfigV4 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInstant returns new OptNilInstant with value set to v.
func NewOptNilInstant(v Instant) OptNilInstant {
	return OptNilInstant{
		Value: v,
		Set:   true,
	}
}

// OptNilInstant is optional nullable Instant.
type OptNilInstant struct {
	Value Instant
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInstant was set.
func (o OptNilInstant) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInstant) Reset() {
	var v Instant
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInstant) SetTo(v Instant) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilInstant) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilInstant) SetToNull() {
	o.Set = true
	o.Null = true
	var v Instant
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInstant) Get() (v Instant, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInstant) Or(d Instant) Instant {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt32 returns new OptNilInt32 with value set to v.
func NewOptNilInt32(v int32) OptNilInt32 {
	return OptNilInt32{
		Value: v,
		Set:   true,
	}
}

// OptNilInt32 is optional nullable int32.
type OptNilInt32 struct {
	Value int32
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt32 was set.
func (o OptNilInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt32) SetTo(v int32) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilInt32) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilInt32) SetToNull() {
	o.Set = true
	o.Null = true
	var v int32
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt32) Get() (v int32, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilInt64 returns new OptNilInt64 with value set to v.
func NewOptNilInt64(v int64) OptNilInt64 {
	return OptNilInt64{
		Value: v,
		Set:   true,
	}
}

// OptNilInt64 is optional nullable int64.
type OptNilInt64 struct {
	Value int64
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilInt64 was set.
func (o OptNilInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilInt64) SetTo(v int64) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilInt64) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilInt64) SetToNull() {
	o.Set = true
	o.Null = true
	var v int64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilInt64) Get() (v int64, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilIntegrationAccessTargetPublicV2Model returns new OptNilIntegrationAccessTargetPublicV2Model with value set to v.
func NewOptNilIntegrationAccessTargetPublicV2Model(v IntegrationAccessTargetPublicV2Model) OptNilIntegrationAccessTargetPublicV2Model {
	return OptNilIntegrationAccessTargetPublicV2Model{
		Value: v,
		Set:   true,
	}
}

// OptNilIntegrationAccessTargetPublicV2Model is optional nullable IntegrationAccessTargetPublicV2Model.
type OptNilIntegrationAccessTargetPublicV2Model struct {
	Value IntegrationAccessTargetPublicV2Model
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilIntegrationAccessTargetPublicV2Model was set.
func (o OptNilIntegrationAccessTargetPublicV2Model) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilIntegrationAccessTargetPublicV2Model) Reset() {
	var v IntegrationAccessTargetPublicV2Model
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilIntegrationAccessTargetPublicV2Model) SetTo(v IntegrationAccessTargetPublicV2Model) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilIntegrationAccessTargetPublicV2Model) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilIntegrationAccessTargetPublicV2Model) SetToNull() {
	o.Set = true
	o.Null = true
	var v IntegrationAccessTargetPublicV2Model
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilIntegrationAccessTargetPublicV2Model) Get() (v IntegrationAccessTargetPublicV2Model, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilIntegrationAccessTargetPublicV2Model) Or(d IntegrationAccessTargetPublicV2Model) IntegrationAccessTargetPublicV2Model {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilIntegrationAccessTargetUpsertPublicV2Model returns new OptNilIntegrationAccessTargetUpsertPublicV2Model with value set to v.
func NewOptNilIntegrationAccessTargetUpsertPublicV2Model(v IntegrationAccessTargetUpsertPublicV2Model) OptNilIntegrationAccessTargetUpsertPublicV2Model {
	return OptNilIntegrationAccessTargetUpsertPublicV2Model{
		Value: v,
		Set:   true,
	}
}

// OptNilIntegrationAccessTargetUpsertPublicV2Model is optional nullable IntegrationAccessTargetUpsertPublicV2Model.
type OptNilIntegrationAccessTargetUpsertPublicV2Model struct {
	Value IntegrationAccessTargetUpsertPublicV2Model
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilIntegrationAccessTargetUpsertPublicV2Model was set.
func (o OptNilIntegrationAccessTargetUpsertPublicV2Model) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilIntegrationAccessTargetUpsertPublicV2Model) Reset() {
	var v IntegrationAccessTargetUpsertPublicV2Model
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilIntegrationAccessTargetUpsertPublicV2Model) SetTo(v IntegrationAccessTargetUpsertPublicV2Model) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilIntegrationAccessTargetUpsertPublicV2Model) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilIntegrationAccessTargetUpsertPublicV2Model) SetToNull() {
	o.Set = true
	o.Null = true
	var v IntegrationAccessTargetUpsertPublicV2Model
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilIntegrationAccessTargetUpsertPublicV2Model) Get() (v IntegrationAccessTargetUpsertPublicV2Model, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilIntegrationAccessTargetUpsertPublicV2Model) Or(d IntegrationAccessTargetUpsertPublicV2Model) IntegrationAccessTargetUpsertPublicV2Model {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilKubernetesSecretConfigV4 returns new OptNilKubernetesSecretConfigV4 with value set to v.
func NewOptNilKubernetesSecretConfigV4(v KubernetesSecretConfigV4) OptNilKubernetesSecretConfigV4 {
	return OptNilKubernetesSecretConfigV4{
		Value: v,
		Set:   true,
	}
}

// OptNilKubernetesSecretConfigV4 is optional nullable KubernetesSecretConfigV4.
type OptNilKubernetesSecretConfigV4 struct {
	Value KubernetesSecretConfigV4
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilKubernetesSecretConfigV4 was set.
func (o OptNilKubernetesSecretConfigV4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilKubernetesSecretConfigV4) Reset() {
	var v KubernetesSecretConfigV4
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilKubernetesSecretConfigV4) SetTo(v KubernetesSecretConfigV4) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilKubernetesSecretConfigV4) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilKubernetesSecretConfigV4) SetToNull() {
	o.Set = true
	o.Null = true
	var v KubernetesSecretConfigV4
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilKubernetesSecretConfigV4) Get() (v KubernetesSecretConfigV4, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilKubernetesSecretConfigV4) Or(d KubernetesSecretConfigV4) KubernetesSecretConfigV4 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilLinkV1 returns new OptNilLinkV1 with value set to v.
func NewOptNilLinkV1(v LinkV1) OptNilLinkV1 {
	return OptNilLinkV1{
		Value: v,
		Set:   true,
	}
}

// OptNilLinkV1 is optional nullable LinkV1.
type OptNilLinkV1 struct {
	Value LinkV1
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilLinkV1 was set.
func (o OptNilLinkV1) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilLinkV1) Reset() {
	var v LinkV1
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilLinkV1) SetTo(v LinkV1) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilLinkV1) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilLinkV1) SetToNull() {
	o.Set = true
	o.Null = true
	var v LinkV1
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilLinkV1) Get() (v LinkV1, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilLinkV1) Or(d LinkV1) LinkV1 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilOwnerMappingV4 returns new OptNilOwnerMappingV4 with value set to v.
func NewOptNilOwnerMappingV4(v OwnerMappingV4) OptNilOwnerMappingV4 {
	return OptNilOwnerMappingV4{
		Value: v,
		Set:   true,
	}
}

// OptNilOwnerMappingV4 is optional nullable OwnerMappingV4.
type OptNilOwnerMappingV4 struct {
	Value OwnerMappingV4
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilOwnerMappingV4 was set.
func (o OptNilOwnerMappingV4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilOwnerMappingV4) Reset() {
	var v OwnerMappingV4
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilOwnerMappingV4) SetTo(v OwnerMappingV4) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilOwnerMappingV4) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilOwnerMappingV4) SetToNull() {
	o.Set = true
	o.Null = true
	var v OwnerMappingV4
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilOwnerMappingV4) Get() (v OwnerMappingV4, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilOwnerMappingV4) Or(d OwnerMappingV4) OwnerMappingV4 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilOwnerV4 returns new OptNilOwnerV4 with value set to v.
func NewOptNilOwnerV4(v OwnerV4) OptNilOwnerV4 {
	return OptNilOwnerV4{
		Value: v,
		Set:   true,
	}
}

// OptNilOwnerV4 is optional nullable OwnerV4.
type OptNilOwnerV4 struct {
	Value OwnerV4
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilOwnerV4 was set.
func (o OptNilOwnerV4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilOwnerV4) Reset() {
	var v OwnerV4
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilOwnerV4) SetTo(v OwnerV4) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilOwnerV4) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilOwnerV4) SetToNull() {
	o.Set = true
	o.Null = true
	var v OwnerV4
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilOwnerV4) Get() (v OwnerV4, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilOwnerV4) Or(d OwnerV4) OwnerV4 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilReportFieldArray returns new OptNilReportFieldArray with value set to v.
func NewOptNilReportFieldArray(v []ReportField) OptNilReportFieldArray {
	return OptNilReportFieldArray{
		Value: v,
		Set:   true,
	}
}

// OptNilReportFieldArray is optional nullable []ReportField.
type OptNilReportFieldArray struct {
	Value []ReportField
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilReportFieldArray was set.
func (o OptNilReportFieldArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilReportFieldArray) Reset() {
	var v []ReportField
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilReportFieldArray) SetTo(v []ReportField) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilReportFieldArray) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilReportFieldArray) SetToNull() {
	o.Set = true
	o.Null = true
	var v []ReportField
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilReportFieldArray) Get() (v []ReportField, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilReportFieldArray) Or(d []ReportField) []ReportField {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray returns new OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray with value set to v.
func NewOptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray(v []ResourcesScopeIntegrationAccessTargetPublicV2Model) OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray {
	return OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray{
		Value: v,
		Set:   true,
	}
}

// OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray is optional nullable []ResourcesScopeIntegrationAccessTargetPublicV2Model.
type OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray struct {
	Value []ResourcesScopeIntegrationAccessTargetPublicV2Model
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray was set.
func (o OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray) Reset() {
	var v []ResourcesScopeIntegrationAccessTargetPublicV2Model
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray) SetTo(v []ResourcesScopeIntegrationAccessTargetPublicV2Model) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray) SetToNull() {
	o.Set = true
	o.Null = true
	var v []ResourcesScopeIntegrationAccessTargetPublicV2Model
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray) Get() (v []ResourcesScopeIntegrationAccessTargetPublicV2Model, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilResourcesScopeIntegrationAccessTargetPublicV2ModelArray) Or(d []ResourcesScopeIntegrationAccessTargetPublicV2Model) []ResourcesScopeIntegrationAccessTargetPublicV2Model {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilSecretConfig returns new OptNilSecretConfig with value set to v.
func NewOptNilSecretConfig(v SecretConfig) OptNilSecretConfig {
	return OptNilSecretConfig{
		Value: v,
		Set:   true,
	}
}

// OptNilSecretConfig is optional nullable SecretConfig.
type OptNilSecretConfig struct {
	Value SecretConfig
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilSecretConfig was set.
func (o OptNilSecretConfig) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilSecretConfig) Reset() {
	var v SecretConfig
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilSecretConfig) SetTo(v SecretConfig) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilSecretConfig) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilSecretConfig) SetToNull() {
	o.Set = true
	o.Null = true
	var v SecretConfig
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilSecretConfig) Get() (v SecretConfig, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilSecretConfig) Or(d SecretConfig) SecretConfig {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilSecretStoreConfigV4 returns new OptNilSecretStoreConfigV4 with value set to v.
func NewOptNilSecretStoreConfigV4(v SecretStoreConfigV4) OptNilSecretStoreConfigV4 {
	return OptNilSecretStoreConfigV4{
		Value: v,
		Set:   true,
	}
}

// OptNilSecretStoreConfigV4 is optional nullable SecretStoreConfigV4.
type OptNilSecretStoreConfigV4 struct {
	Value SecretStoreConfigV4
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilSecretStoreConfigV4 was set.
func (o OptNilSecretStoreConfigV4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilSecretStoreConfigV4) Reset() {
	var v SecretStoreConfigV4
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilSecretStoreConfigV4) SetTo(v SecretStoreConfigV4) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilSecretStoreConfigV4) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilSecretStoreConfigV4) SetToNull() {
	o.Set = true
	o.Null = true
	var v SecretStoreConfigV4
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilSecretStoreConfigV4) Get() (v SecretStoreConfigV4, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilSecretStoreConfigV4) Or(d SecretStoreConfigV4) SecretStoreConfigV4 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilStringArray returns new OptNilStringArray with value set to v.
func NewOptNilStringArray(v []string) OptNilStringArray {
	return OptNilStringArray{
		Value: v,
		Set:   true,
	}
}

// OptNilStringArray is optional nullable []string.
type OptNilStringArray struct {
	Value []string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilStringArray was set.
func (o OptNilStringArray) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilStringArray) Reset() {
	var v []string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilStringArray) SetTo(v []string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilStringArray) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilStringArray) SetToNull() {
	o.Set = true
	o.Null = true
	var v []string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilStringArray) Get() (v []string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilStringArray) Or(d []string) []string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilTimeframeV1 returns new OptNilTimeframeV1 with value set to v.
func NewOptNilTimeframeV1(v TimeframeV1) OptNilTimeframeV1 {
	return OptNilTimeframeV1{
		Value: v,
		Set:   true,
	}
}

// OptNilTimeframeV1 is optional nullable TimeframeV1.
type OptNilTimeframeV1 struct {
	Value TimeframeV1
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilTimeframeV1 was set.
func (o OptNilTimeframeV1) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilTimeframeV1) Reset() {
	var v TimeframeV1
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilTimeframeV1) SetTo(v TimeframeV1) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilTimeframeV1) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilTimeframeV1) SetToNull() {
	o.Set = true
	o.Null = true
	var v TimeframeV1
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilTimeframeV1) Get() (v TimeframeV1, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilTimeframeV1) Or(d TimeframeV1) TimeframeV1 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUpsertOwnerMappingV4 returns new OptNilUpsertOwnerMappingV4 with value set to v.
func NewOptNilUpsertOwnerMappingV4(v UpsertOwnerMappingV4) OptNilUpsertOwnerMappingV4 {
	return OptNilUpsertOwnerMappingV4{
		Value: v,
		Set:   true,
	}
}

// OptNilUpsertOwnerMappingV4 is optional nullable UpsertOwnerMappingV4.
type OptNilUpsertOwnerMappingV4 struct {
	Value UpsertOwnerMappingV4
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUpsertOwnerMappingV4 was set.
func (o OptNilUpsertOwnerMappingV4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUpsertOwnerMappingV4) Reset() {
	var v UpsertOwnerMappingV4
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUpsertOwnerMappingV4) SetTo(v UpsertOwnerMappingV4) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilUpsertOwnerMappingV4) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilUpsertOwnerMappingV4) SetToNull() {
	o.Set = true
	o.Null = true
	var v UpsertOwnerMappingV4
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUpsertOwnerMappingV4) Get() (v UpsertOwnerMappingV4, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUpsertOwnerMappingV4) Or(d UpsertOwnerMappingV4) UpsertOwnerMappingV4 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUpsertOwnerV4 returns new OptNilUpsertOwnerV4 with value set to v.
func NewOptNilUpsertOwnerV4(v UpsertOwnerV4) OptNilUpsertOwnerV4 {
	return OptNilUpsertOwnerV4{
		Value: v,
		Set:   true,
	}
}

// OptNilUpsertOwnerV4 is optional nullable UpsertOwnerV4.
type OptNilUpsertOwnerV4 struct {
	Value UpsertOwnerV4
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUpsertOwnerV4 was set.
func (o OptNilUpsertOwnerV4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUpsertOwnerV4) Reset() {
	var v UpsertOwnerV4
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUpsertOwnerV4) SetTo(v UpsertOwnerV4) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilUpsertOwnerV4) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilUpsertOwnerV4) SetToNull() {
	o.Set = true
	o.Null = true
	var v UpsertOwnerV4
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUpsertOwnerV4) Get() (v UpsertOwnerV4, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUpsertOwnerV4) Or(d UpsertOwnerV4) UpsertOwnerV4 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUpsertSecretStoreConfigV4 returns new OptNilUpsertSecretStoreConfigV4 with value set to v.
func NewOptNilUpsertSecretStoreConfigV4(v UpsertSecretStoreConfigV4) OptNilUpsertSecretStoreConfigV4 {
	return OptNilUpsertSecretStoreConfigV4{
		Value: v,
		Set:   true,
	}
}

// OptNilUpsertSecretStoreConfigV4 is optional nullable UpsertSecretStoreConfigV4.
type OptNilUpsertSecretStoreConfigV4 struct {
	Value UpsertSecretStoreConfigV4
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUpsertSecretStoreConfigV4 was set.
func (o OptNilUpsertSecretStoreConfigV4) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUpsertSecretStoreConfigV4) Reset() {
	var v UpsertSecretStoreConfigV4
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUpsertSecretStoreConfigV4) SetTo(v UpsertSecretStoreConfigV4) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilUpsertSecretStoreConfigV4) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilUpsertSecretStoreConfigV4) SetToNull() {
	o.Set = true
	o.Null = true
	var v UpsertSecretStoreConfigV4
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUpsertSecretStoreConfigV4) Get() (v UpsertSecretStoreConfigV4, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUpsertSecretStoreConfigV4) Or(d UpsertSecretStoreConfigV4) UpsertSecretStoreConfigV4 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilUserV3Attributes returns new OptNilUserV3Attributes with value set to v.
func NewOptNilUserV3Attributes(v UserV3Attributes) OptNilUserV3Attributes {
	return OptNilUserV3Attributes{
		Value: v,
		Set:   true,
	}
}

// OptNilUserV3Attributes is optional nullable UserV3Attributes.
type OptNilUserV3Attributes struct {
	Value UserV3Attributes
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilUserV3Attributes was set.
func (o OptNilUserV3Attributes) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilUserV3Attributes) Reset() {
	var v UserV3Attributes
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilUserV3Attributes) SetTo(v UserV3Attributes) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilUserV3Attributes) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilUserV3Attributes) SetToNull() {
	o.Set = true
	o.Null = true
	var v UserV3Attributes
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilUserV3Attributes) Get() (v UserV3Attributes, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilUserV3Attributes) Or(d UserV3Attributes) UserV3Attributes {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSecretConfig1 returns new OptSecretConfig1 with value set to v.
func NewOptSecretConfig1(v *SecretConfig1) OptSecretConfig1 {
	return OptSecretConfig1{
		Value: v,
		Set:   true,
	}
}

// OptSecretConfig1 is optional *SecretConfig1.
type OptSecretConfig1 struct {
	Value *SecretConfig1
	Set   bool
}

// IsSet returns true if OptSecretConfig1 was set.
func (o OptSecretConfig1) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSecretConfig1) Reset() {
	var v *SecretConfig1
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSecretConfig1) SetTo(v *SecretConfig1) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSecretConfig1) Get() (v *SecretConfig1, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSecretConfig1) Or(d *SecretConfig1) *SecretConfig1 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/OwnerMappingV4
type OwnerMappingV4 struct {
	KeyName               string       `json:"key_name"`
	AttributeType         string       `json:"attribute_type"`
	SourceIntegrationID   OptNilString `json:"source_integration_id"`
	SourceIntegrationName OptNilString `json:"source_integration_name"`
}

// GetKeyName returns the value of KeyName.
func (s *OwnerMappingV4) GetKeyName() string {
	return s.KeyName
}

// GetAttributeType returns the value of AttributeType.
func (s *OwnerMappingV4) GetAttributeType() string {
	return s.AttributeType
}

// GetSourceIntegrationID returns the value of SourceIntegrationID.
func (s *OwnerMappingV4) GetSourceIntegrationID() OptNilString {
	return s.SourceIntegrationID
}

// GetSourceIntegrationName returns the value of SourceIntegrationName.
func (s *OwnerMappingV4) GetSourceIntegrationName() OptNilString {
	return s.SourceIntegrationName
}

// SetKeyName sets the value of KeyName.
func (s *OwnerMappingV4) SetKeyName(val string) {
	s.KeyName = val
}

// SetAttributeType sets the value of AttributeType.
func (s *OwnerMappingV4) SetAttributeType(val string) {
	s.AttributeType = val
}

// SetSourceIntegrationID sets the value of SourceIntegrationID.
func (s *OwnerMappingV4) SetSourceIntegrationID(val OptNilString) {
	s.SourceIntegrationID = val
}

// SetSourceIntegrationName sets the value of SourceIntegrationName.
func (s *OwnerMappingV4) SetSourceIntegrationName(val OptNilString) {
	s.SourceIntegrationName = val
}

// Ref: #/components/schemas/OwnerV4
type OwnerV4 struct {
	AttributeType         string       `json:"attribute_type"`
	AttributeValue        []string     `json:"attribute_value"`
	SourceIntegrationID   OptNilString `json:"source_integration_id"`
	SourceIntegrationName OptNilString `json:"source_integration_name"`
}

// GetAttributeType returns the value of AttributeType.
func (s *OwnerV4) GetAttributeType() string {
	return s.AttributeType
}

// GetAttributeValue returns the value of AttributeValue.
func (s *OwnerV4) GetAttributeValue() []string {
	return s.AttributeValue
}

// GetSourceIntegrationID returns the value of SourceIntegrationID.
func (s *OwnerV4) GetSourceIntegrationID() OptNilString {
	return s.SourceIntegrationID
}

// GetSourceIntegrationName returns the value of SourceIntegrationName.
func (s *OwnerV4) GetSourceIntegrationName() OptNilString {
	return s.SourceIntegrationName
}

// SetAttributeType sets the value of AttributeType.
func (s *OwnerV4) SetAttributeType(val string) {
	s.AttributeType = val
}

// SetAttributeValue sets the value of AttributeValue.
func (s *OwnerV4) SetAttributeValue(val []string) {
	s.AttributeValue = val
}

// SetSourceIntegrationID sets the value of SourceIntegrationID.
func (s *OwnerV4) SetSourceIntegrationID(val OptNilString) {
	s.SourceIntegrationID = val
}

// SetSourceIntegrationName sets the value of SourceIntegrationName.
func (s *OwnerV4) SetSourceIntegrationName(val OptNilString) {
	s.SourceIntegrationName = val
}

// Ref: #/components/schemas/PaginatedResponseAccessBundleV1Model
type PaginatedResponseAccessBundleV1Model struct {
	Data       []AccessBundleV1 `json:"data"`
	Pagination PaginationInfo   `json:"pagination"`
}

// GetData returns the value of Data.
func (s *PaginatedResponseAccessBundleV1Model) GetData() []AccessBundleV1 {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *PaginatedResponseAccessBundleV1Model) GetPagination() PaginationInfo {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *PaginatedResponseAccessBundleV1Model) SetData(val []AccessBundleV1) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *PaginatedResponseAccessBundleV1Model) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// Ref: #/components/schemas/PaginatedResponseAccessFlowV1Model
type PaginatedResponseAccessFlowV1Model struct {
	Data       []AccessFlowV1 `json:"data"`
	Pagination PaginationInfo `json:"pagination"`
}

// GetData returns the value of Data.
func (s *PaginatedResponseAccessFlowV1Model) GetData() []AccessFlowV1 {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *PaginatedResponseAccessFlowV1Model) GetPagination() PaginationInfo {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *PaginatedResponseAccessFlowV1Model) SetData(val []AccessFlowV1) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *PaginatedResponseAccessFlowV1Model) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// Ref: #/components/schemas/PaginatedResponseAccessRequestV3
type PaginatedResponseAccessRequestV3 struct {
	Data       []AccessRequest `json:"data"`
	Pagination PaginationInfo  `json:"pagination"`
}

// GetData returns the value of Data.
func (s *PaginatedResponseAccessRequestV3) GetData() []AccessRequest {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *PaginatedResponseAccessRequestV3) GetPagination() PaginationInfo {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *PaginatedResponseAccessRequestV3) SetData(val []AccessRequest) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *PaginatedResponseAccessRequestV3) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// Ref: #/components/schemas/PaginatedResponseActivityReportJsonExportModel
type PaginatedResponseActivityReportJsonExportModel struct {
	Data       []ActivityReportJsonExportModel `json:"data"`
	Pagination PaginationInfo                  `json:"pagination"`
}

// GetData returns the value of Data.
func (s *PaginatedResponseActivityReportJsonExportModel) GetData() []ActivityReportJsonExportModel {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *PaginatedResponseActivityReportJsonExportModel) GetPagination() PaginationInfo {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *PaginatedResponseActivityReportJsonExportModel) SetData(val []ActivityReportJsonExportModel) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *PaginatedResponseActivityReportJsonExportModel) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// Ref: #/components/schemas/PaginatedResponseIdentityAttributeModel
type PaginatedResponseIdentityAttributeModel struct {
	Data       []IdentityAttributeModel `json:"data"`
	Pagination PaginationInfo           `json:"pagination"`
}

// GetData returns the value of Data.
func (s *PaginatedResponseIdentityAttributeModel) GetData() []IdentityAttributeModel {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *PaginatedResponseIdentityAttributeModel) GetPagination() PaginationInfo {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *PaginatedResponseIdentityAttributeModel) SetData(val []IdentityAttributeModel) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *PaginatedResponseIdentityAttributeModel) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// Ref: #/components/schemas/PaginatedResponseIdentityModelV2
type PaginatedResponseIdentityModelV2 struct {
	Data       []IdentityModel2 `json:"data"`
	Pagination PaginationInfo   `json:"pagination"`
}

// GetData returns the value of Data.
func (s *PaginatedResponseIdentityModelV2) GetData() []IdentityModel2 {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *PaginatedResponseIdentityModelV2) GetPagination() PaginationInfo {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *PaginatedResponseIdentityModelV2) SetData(val []IdentityModel2) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *PaginatedResponseIdentityModelV2) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// Ref: #/components/schemas/PaginatedResponseIntegrationConfigPublicModel
type PaginatedResponseIntegrationConfigPublicModel struct {
	Data       []IntegrationConfig `json:"data"`
	Pagination PaginationInfo      `json:"pagination"`
}

// GetData returns the value of Data.
func (s *PaginatedResponseIntegrationConfigPublicModel) GetData() []IntegrationConfig {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *PaginatedResponseIntegrationConfigPublicModel) GetPagination() PaginationInfo {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *PaginatedResponseIntegrationConfigPublicModel) SetData(val []IntegrationConfig) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *PaginatedResponseIntegrationConfigPublicModel) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// Ref: #/components/schemas/PaginatedResponseIntegrationModel
type PaginatedResponseIntegrationModel struct {
	Data       []Integration  `json:"data"`
	Pagination PaginationInfo `json:"pagination"`
}

// GetData returns the value of Data.
func (s *PaginatedResponseIntegrationModel) GetData() []Integration {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *PaginatedResponseIntegrationModel) GetPagination() PaginationInfo {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *PaginatedResponseIntegrationModel) SetData(val []Integration) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *PaginatedResponseIntegrationModel) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// Ref: #/components/schemas/PaginatedResponsePermissionV3Response
type PaginatedResponsePermissionV3Response struct {
	Data       []PermissionV3 `json:"data"`
	Pagination PaginationInfo `json:"pagination"`
}

// GetData returns the value of Data.
func (s *PaginatedResponsePermissionV3Response) GetData() []PermissionV3 {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *PaginatedResponsePermissionV3Response) GetPagination() PaginationInfo {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *PaginatedResponsePermissionV3Response) SetData(val []PermissionV3) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *PaginatedResponsePermissionV3Response) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// Ref: #/components/schemas/PaginatedResponseResourceV3Response
type PaginatedResponseResourceV3Response struct {
	Data       []ResourceResponse `json:"data"`
	Pagination PaginationInfo     `json:"pagination"`
}

// GetData returns the value of Data.
func (s *PaginatedResponseResourceV3Response) GetData() []ResourceResponse {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *PaginatedResponseResourceV3Response) GetPagination() PaginationInfo {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *PaginatedResponseResourceV3Response) SetData(val []ResourceResponse) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *PaginatedResponseResourceV3Response) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// Ref: #/components/schemas/PaginatedResponseSelectableIntegrationV3
type PaginatedResponseSelectableIntegrationV3 struct {
	Data       []SelectableIntegration `json:"data"`
	Pagination PaginationInfo          `json:"pagination"`
}

// GetData returns the value of Data.
func (s *PaginatedResponseSelectableIntegrationV3) GetData() []SelectableIntegration {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *PaginatedResponseSelectableIntegrationV3) GetPagination() PaginationInfo {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *PaginatedResponseSelectableIntegrationV3) SetData(val []SelectableIntegration) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *PaginatedResponseSelectableIntegrationV3) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// Ref: #/components/schemas/PaginatedResponseSelectableResourceTypeV3
type PaginatedResponseSelectableResourceTypeV3 struct {
	Data       []SelectableResourceType `json:"data"`
	Pagination PaginationInfo           `json:"pagination"`
}

// GetData returns the value of Data.
func (s *PaginatedResponseSelectableResourceTypeV3) GetData() []SelectableResourceType {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *PaginatedResponseSelectableResourceTypeV3) GetPagination() PaginationInfo {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *PaginatedResponseSelectableResourceTypeV3) SetData(val []SelectableResourceType) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *PaginatedResponseSelectableResourceTypeV3) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// Ref: #/components/schemas/PaginatedResponseSelectableResourceV3
type PaginatedResponseSelectableResourceV3 struct {
	Data       []SelectableResource `json:"data"`
	Pagination PaginationInfo       `json:"pagination"`
}

// GetData returns the value of Data.
func (s *PaginatedResponseSelectableResourceV3) GetData() []SelectableResource {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *PaginatedResponseSelectableResourceV3) GetPagination() PaginationInfo {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *PaginatedResponseSelectableResourceV3) SetData(val []SelectableResource) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *PaginatedResponseSelectableResourceV3) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// Ref: #/components/schemas/PaginatedResponseUserModel
type PaginatedResponseUserModel struct {
	Data       []UserModel    `json:"data"`
	Pagination PaginationInfo `json:"pagination"`
}

// GetData returns the value of Data.
func (s *PaginatedResponseUserModel) GetData() []UserModel {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *PaginatedResponseUserModel) GetPagination() PaginationInfo {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *PaginatedResponseUserModel) SetData(val []UserModel) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *PaginatedResponseUserModel) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// Ref: #/components/schemas/PaginationInfo
type PaginationInfo struct {
	Total  int32 `json:"total"`
	Limit  int32 `json:"limit"`
	Offset int32 `json:"offset"`
}

// GetTotal returns the value of Total.
func (s *PaginationInfo) GetTotal() int32 {
	return s.Total
}

// GetLimit returns the value of Limit.
func (s *PaginationInfo) GetLimit() int32 {
	return s.Limit
}

// GetOffset returns the value of Offset.
func (s *PaginationInfo) GetOffset() int32 {
	return s.Offset
}

// SetTotal sets the value of Total.
func (s *PaginationInfo) SetTotal(val int32) {
	s.Total = val
}

// SetLimit sets the value of Limit.
func (s *PaginationInfo) SetLimit(val int32) {
	s.Limit = val
}

// SetOffset sets the value of Offset.
func (s *PaginationInfo) SetOffset(val int32) {
	s.Offset = val
}

// Ref: #/components/schemas/PermissionV3
type PermissionV3 struct {
	Name         string `json:"name"`
	ID           string `json:"id"`
	ResourceType string `json:"resource_type"`
}

// GetName returns the value of Name.
func (s *PermissionV3) GetName() string {
	return s.Name
}

// GetID returns the value of ID.
func (s *PermissionV3) GetID() string {
	return s.ID
}

// GetResourceType returns the value of ResourceType.
func (s *PermissionV3) GetResourceType() string {
	return s.ResourceType
}

// SetName sets the value of Name.
func (s *PermissionV3) SetName(val string) {
	s.Name = val
}

// SetID sets the value of ID.
func (s *PermissionV3) SetID(val string) {
	s.ID = val
}

// SetResourceType sets the value of ResourceType.
func (s *PermissionV3) SetResourceType(val string) {
	s.ResourceType = val
}

// Ref: #/components/schemas/PublicApiListResponseAccessFlowPublicV2Model
type PublicApiListResponseAccessFlowPublicV2Model struct {
	Items      []AccessFlowPublicV2Model    `json:"items"`
	Pagination PublicApiPaginationInfoModel `json:"pagination"`
}

// GetItems returns the value of Items.
func (s *PublicApiListResponseAccessFlowPublicV2Model) GetItems() []AccessFlowPublicV2Model {
	return s.Items
}

// GetPagination returns the value of Pagination.
func (s *PublicApiListResponseAccessFlowPublicV2Model) GetPagination() PublicApiPaginationInfoModel {
	return s.Pagination
}

// SetItems sets the value of Items.
func (s *PublicApiListResponseAccessFlowPublicV2Model) SetItems(val []AccessFlowPublicV2Model) {
	s.Items = val
}

// SetPagination sets the value of Pagination.
func (s *PublicApiListResponseAccessFlowPublicV2Model) SetPagination(val PublicApiPaginationInfoModel) {
	s.Pagination = val
}

// Ref: #/components/schemas/PublicApiListResponseAccessRequestEntitlementPublicV4Model
type PublicApiListResponseAccessRequestEntitlementPublicV4Model struct {
	Items      []AccessRequestEntitlementV4 `json:"items"`
	Pagination PublicApiPaginationInfoModel `json:"pagination"`
}

// GetItems returns the value of Items.
func (s *PublicApiListResponseAccessRequestEntitlementPublicV4Model) GetItems() []AccessRequestEntitlementV4 {
	return s.Items
}

// GetPagination returns the value of Pagination.
func (s *PublicApiListResponseAccessRequestEntitlementPublicV4Model) GetPagination() PublicApiPaginationInfoModel {
	return s.Pagination
}

// SetItems sets the value of Items.
func (s *PublicApiListResponseAccessRequestEntitlementPublicV4Model) SetItems(val []AccessRequestEntitlementV4) {
	s.Items = val
}

// SetPagination sets the value of Pagination.
func (s *PublicApiListResponseAccessRequestEntitlementPublicV4Model) SetPagination(val PublicApiPaginationInfoModel) {
	s.Pagination = val
}

// Ref: #/components/schemas/PublicApiListResponseAccessRequestV4PublicModel
type PublicApiListResponseAccessRequestV4PublicModel struct {
	Items      []AccessRequestV4            `json:"items"`
	Pagination PublicApiPaginationInfoModel `json:"pagination"`
}

// GetItems returns the value of Items.
func (s *PublicApiListResponseAccessRequestV4PublicModel) GetItems() []AccessRequestV4 {
	return s.Items
}

// GetPagination returns the value of Pagination.
func (s *PublicApiListResponseAccessRequestV4PublicModel) GetPagination() PublicApiPaginationInfoModel {
	return s.Pagination
}

// SetItems sets the value of Items.
func (s *PublicApiListResponseAccessRequestV4PublicModel) SetItems(val []AccessRequestV4) {
	s.Items = val
}

// SetPagination sets the value of Pagination.
func (s *PublicApiListResponseAccessRequestV4PublicModel) SetPagination(val PublicApiPaginationInfoModel) {
	s.Pagination = val
}

// Ref: #/components/schemas/PublicApiListResponseAccessScopePublicV1Model
type PublicApiListResponseAccessScopePublicV1Model struct {
	Items      []AccessScopeV1              `json:"items"`
	Pagination PublicApiPaginationInfoModel `json:"pagination"`
}

// GetItems returns the value of Items.
func (s *PublicApiListResponseAccessScopePublicV1Model) GetItems() []AccessScopeV1 {
	return s.Items
}

// GetPagination returns the value of Pagination.
func (s *PublicApiListResponseAccessScopePublicV1Model) GetPagination() PublicApiPaginationInfoModel {
	return s.Pagination
}

// SetItems sets the value of Items.
func (s *PublicApiListResponseAccessScopePublicV1Model) SetItems(val []AccessScopeV1) {
	s.Items = val
}

// SetPagination sets the value of Pagination.
func (s *PublicApiListResponseAccessScopePublicV1Model) SetPagination(val PublicApiPaginationInfoModel) {
	s.Pagination = val
}

// Ref: #/components/schemas/PublicApiListResponseAccessSessionPublicV1Model
type PublicApiListResponseAccessSessionPublicV1Model struct {
	Items      []AccessSessionV1            `json:"items"`
	Pagination PublicApiPaginationInfoModel `json:"pagination"`
}

// GetItems returns the value of Items.
func (s *PublicApiListResponseAccessSessionPublicV1Model) GetItems() []AccessSessionV1 {
	return s.Items
}

// GetPagination returns the value of Pagination.
func (s *PublicApiListResponseAccessSessionPublicV1Model) GetPagination() PublicApiPaginationInfoModel {
	return s.Pagination
}

// SetItems sets the value of Items.
func (s *PublicApiListResponseAccessSessionPublicV1Model) SetItems(val []AccessSessionV1) {
	s.Items = val
}

// SetPagination sets the value of Pagination.
func (s *PublicApiListResponseAccessSessionPublicV1Model) SetPagination(val PublicApiPaginationInfoModel) {
	s.Pagination = val
}

// Ref: #/components/schemas/PublicApiListResponseAvailableBundlePublicV1Model
type PublicApiListResponseAvailableBundlePublicV1Model struct {
	Items      []AvailableBundleV1          `json:"items"`
	Pagination PublicApiPaginationInfoModel `json:"pagination"`
}

// GetItems returns the value of Items.
func (s *PublicApiListResponseAvailableBundlePublicV1Model) GetItems() []AvailableBundleV1 {
	return s.Items
}

// GetPagination returns the value of Pagination.
func (s *PublicApiListResponseAvailableBundlePublicV1Model) GetPagination() PublicApiPaginationInfoModel {
	return s.Pagination
}

// SetItems sets the value of Items.
func (s *PublicApiListResponseAvailableBundlePublicV1Model) SetItems(val []AvailableBundleV1) {
	s.Items = val
}

// SetPagination sets the value of Pagination.
func (s *PublicApiListResponseAvailableBundlePublicV1Model) SetPagination(val PublicApiPaginationInfoModel) {
	s.Pagination = val
}

// Ref: #/components/schemas/PublicApiListResponseAvailableEntitlementPublicV1Model
type PublicApiListResponseAvailableEntitlementPublicV1Model struct {
	Items      []AvailableEntitlementV1     `json:"items"`
	Pagination PublicApiPaginationInfoModel `json:"pagination"`
}

// GetItems returns the value of Items.
func (s *PublicApiListResponseAvailableEntitlementPublicV1Model) GetItems() []AvailableEntitlementV1 {
	return s.Items
}

// GetPagination returns the value of Pagination.
func (s *PublicApiListResponseAvailableEntitlementPublicV1Model) GetPagination() PublicApiPaginationInfoModel {
	return s.Pagination
}

// SetItems sets the value of Items.
func (s *PublicApiListResponseAvailableEntitlementPublicV1Model) SetItems(val []AvailableEntitlementV1) {
	s.Items = val
}

// SetPagination sets the value of Pagination.
func (s *PublicApiListResponseAvailableEntitlementPublicV1Model) SetPagination(val PublicApiPaginationInfoModel) {
	s.Pagination = val
}

// Ref: #/components/schemas/PublicApiListResponseBundlePublicV2Model
type PublicApiListResponseBundlePublicV2Model struct {
	Items      []BundlePublicV2Model        `json:"items"`
	Pagination PublicApiPaginationInfoModel `json:"pagination"`
}

// GetItems returns the value of Items.
func (s *PublicApiListResponseBundlePublicV2Model) GetItems() []BundlePublicV2Model {
	return s.Items
}

// GetPagination returns the value of Pagination.
func (s *PublicApiListResponseBundlePublicV2Model) GetPagination() PublicApiPaginationInfoModel {
	return s.Pagination
}

// SetItems sets the value of Items.
func (s *PublicApiListResponseBundlePublicV2Model) SetItems(val []BundlePublicV2Model) {
	s.Items = val
}

// SetPagination sets the value of Pagination.
func (s *PublicApiListResponseBundlePublicV2Model) SetPagination(val PublicApiPaginationInfoModel) {
	s.Pagination = val
}

// Ref: #/components/schemas/PublicApiListResponseConnectorPublicV3Model
type PublicApiListResponseConnectorPublicV3Model struct {
	Items      []ConnectorV3                `json:"items"`
	Pagination PublicApiPaginationInfoModel `json:"pagination"`
}

// GetItems returns the value of Items.
func (s *PublicApiListResponseConnectorPublicV3Model) GetItems() []ConnectorV3 {
	return s.Items
}

// GetPagination returns the value of Pagination.
func (s *PublicApiListResponseConnectorPublicV3Model) GetPagination() PublicApiPaginationInfoModel {
	return s.Pagination
}

// SetItems sets the value of Items.
func (s *PublicApiListResponseConnectorPublicV3Model) SetItems(val []ConnectorV3) {
	s.Items = val
}

// SetPagination sets the value of Pagination.
func (s *PublicApiListResponseConnectorPublicV3Model) SetPagination(val PublicApiPaginationInfoModel) {
	s.Pagination = val
}

// Ref: #/components/schemas/PublicApiListResponseGroupMemberPublicV1Model
type PublicApiListResponseGroupMemberPublicV1Model struct {
	Items      []GroupMemberV1              `json:"items"`
	Pagination PublicApiPaginationInfoModel `json:"pagination"`
}

// GetItems returns the value of Items.
func (s *PublicApiListResponseGroupMemberPublicV1Model) GetItems() []GroupMemberV1 {
	return s.Items
}

// GetPagination returns the value of Pagination.
func (s *PublicApiListResponseGroupMemberPublicV1Model) GetPagination() PublicApiPaginationInfoModel {
	return s.Pagination
}

// SetItems sets the value of Items.
func (s *PublicApiListResponseGroupMemberPublicV1Model) SetItems(val []GroupMemberV1) {
	s.Items = val
}

// SetPagination sets the value of Pagination.
func (s *PublicApiListResponseGroupMemberPublicV1Model) SetPagination(val PublicApiPaginationInfoModel) {
	s.Pagination = val
}

// Ref: #/components/schemas/PublicApiListResponseGroupPublicV1Model
type PublicApiListResponseGroupPublicV1Model struct {
	Items      []GroupV1                    `json:"items"`
	Pagination PublicApiPaginationInfoModel `json:"pagination"`
}

// GetItems returns the value of Items.
func (s *PublicApiListResponseGroupPublicV1Model) GetItems() []GroupV1 {
	return s.Items
}

// GetPagination returns the value of Pagination.
func (s *PublicApiListResponseGroupPublicV1Model) GetPagination() PublicApiPaginationInfoModel {
	return s.Pagination
}

// SetItems sets the value of Items.
func (s *PublicApiListResponseGroupPublicV1Model) SetItems(val []GroupV1) {
	s.Items = val
}

// SetPagination sets the value of Pagination.
func (s *PublicApiListResponseGroupPublicV1Model) SetPagination(val PublicApiPaginationInfoModel) {
	s.Pagination = val
}

// Ref: #/components/schemas/PublicApiListResponseIntegrationPublicV4Model
type PublicApiListResponseIntegrationPublicV4Model struct {
	Items      []IntegrationV4              `json:"items"`
	Pagination PublicApiPaginationInfoModel `json:"pagination"`
}

// GetItems returns the value of Items.
func (s *PublicApiListResponseIntegrationPublicV4Model) GetItems() []IntegrationV4 {
	return s.Items
}

// GetPagination returns the value of Pagination.
func (s *PublicApiListResponseIntegrationPublicV4Model) GetPagination() PublicApiPaginationInfoModel {
	return s.Pagination
}

// SetItems sets the value of Items.
func (s *PublicApiListResponseIntegrationPublicV4Model) SetItems(val []IntegrationV4) {
	s.Items = val
}

// SetPagination sets the value of Pagination.
func (s *PublicApiListResponseIntegrationPublicV4Model) SetPagination(val PublicApiPaginationInfoModel) {
	s.Pagination = val
}

// Ref: #/components/schemas/PublicApiListResponseUserPublicV3Model
type PublicApiListResponseUserPublicV3Model struct {
	Items      []UserV3                     `json:"items"`
	Pagination PublicApiPaginationInfoModel `json:"pagination"`
}

// GetItems returns the value of Items.
func (s *PublicApiListResponseUserPublicV3Model) GetItems() []UserV3 {
	return s.Items
}

// GetPagination returns the value of Pagination.
func (s *PublicApiListResponseUserPublicV3Model) GetPagination() PublicApiPaginationInfoModel {
	return s.Pagination
}

// SetItems sets the value of Items.
func (s *PublicApiListResponseUserPublicV3Model) SetItems(val []UserV3) {
	s.Items = val
}

// SetPagination sets the value of Pagination.
func (s *PublicApiListResponseUserPublicV3Model) SetPagination(val PublicApiPaginationInfoModel) {
	s.Pagination = val
}

// Ref: #/components/schemas/PublicApiMessageResponse
type PublicApiMessageResponse struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *PublicApiMessageResponse) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *PublicApiMessageResponse) SetMessage(val string) {
	s.Message = val
}

// Ref: #/components/schemas/PublicApiPaginationInfoModel
type PublicApiPaginationInfoModel struct {
	NextPageToken OptNilString `json:"next_page_token"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *PublicApiPaginationInfoModel) GetNextPageToken() OptNilString {
	return s.NextPageToken
}

// SetNextPageToken sets the value of NextPageToken.
func (s *PublicApiPaginationInfoModel) SetNextPageToken(val OptNilString) {
	s.NextPageToken = val
}

// RemoveGroupMemberV1NoContent is response for RemoveGroupMemberV1 operation.
type RemoveGroupMemberV1NoContent struct{}

// Ref: #/components/schemas/ReportField
type ReportField string

const (
	ReportFieldRequestID         ReportField = "request_id"
	ReportFieldRequestDate       ReportField = "request_date"
	ReportFieldRequestGrantDate  ReportField = "request_grant_date"
	ReportFieldRequestRevokeDate ReportField = "request_revoke_date"
	ReportFieldRequestorName     ReportField = "requestor_name"
	ReportFieldRequestorEmail    ReportField = "requestor_email"
	ReportFieldIntegration       ReportField = "integration"
	ReportFieldResources         ReportField = "resources"
	ReportFieldResourceType      ReportField = "resource_type"
	ReportFieldPermissions       ReportField = "permissions"
	ReportFieldApproverNames     ReportField = "approver_names"
	ReportFieldApproverEmails    ReportField = "approver_emails"
	ReportFieldApproverTypes     ReportField = "approver_types"
	ReportFieldJustification     ReportField = "justification"
	ReportFieldStatus            ReportField = "status"
	ReportFieldApproverReason    ReportField = "approver_reason"
	ReportFieldResourcesStatus   ReportField = "resources_status"
	ReportFieldTriggerType       ReportField = "trigger_type"
	ReportFieldAccessFlow        ReportField = "access_flow"
	ReportFieldBundleName        ReportField = "bundle_name"
)

// AllValues returns all ReportField values.
func (ReportField) AllValues() []ReportField {
	return []ReportField{
		ReportFieldRequestID,
		ReportFieldRequestDate,
		ReportFieldRequestGrantDate,
		ReportFieldRequestRevokeDate,
		ReportFieldRequestorName,
		ReportFieldRequestorEmail,
		ReportFieldIntegration,
		ReportFieldResources,
		ReportFieldResourceType,
		ReportFieldPermissions,
		ReportFieldApproverNames,
		ReportFieldApproverEmails,
		ReportFieldApproverTypes,
		ReportFieldJustification,
		ReportFieldStatus,
		ReportFieldApproverReason,
		ReportFieldResourcesStatus,
		ReportFieldTriggerType,
		ReportFieldAccessFlow,
		ReportFieldBundleName,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ReportField) MarshalText() ([]byte, error) {
	switch s {
	case ReportFieldRequestID:
		return []byte(s), nil
	case ReportFieldRequestDate:
		return []byte(s), nil
	case ReportFieldRequestGrantDate:
		return []byte(s), nil
	case ReportFieldRequestRevokeDate:
		return []byte(s), nil
	case ReportFieldRequestorName:
		return []byte(s), nil
	case ReportFieldRequestorEmail:
		return []byte(s), nil
	case ReportFieldIntegration:
		return []byte(s), nil
	case ReportFieldResources:
		return []byte(s), nil
	case ReportFieldResourceType:
		return []byte(s), nil
	case ReportFieldPermissions:
		return []byte(s), nil
	case ReportFieldApproverNames:
		return []byte(s), nil
	case ReportFieldApproverEmails:
		return []byte(s), nil
	case ReportFieldApproverTypes:
		return []byte(s), nil
	case ReportFieldJustification:
		return []byte(s), nil
	case ReportFieldStatus:
		return []byte(s), nil
	case ReportFieldApproverReason:
		return []byte(s), nil
	case ReportFieldResourcesStatus:
		return []byte(s), nil
	case ReportFieldTriggerType:
		return []byte(s), nil
	case ReportFieldAccessFlow:
		return []byte(s), nil
	case ReportFieldBundleName:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ReportField) UnmarshalText(data []byte) error {
	switch ReportField(data) {
	case ReportFieldRequestID:
		*s = ReportFieldRequestID
		return nil
	case ReportFieldRequestDate:
		*s = ReportFieldRequestDate
		return nil
	case ReportFieldRequestGrantDate:
		*s = ReportFieldRequestGrantDate
		return nil
	case ReportFieldRequestRevokeDate:
		*s = ReportFieldRequestRevokeDate
		return nil
	case ReportFieldRequestorName:
		*s = ReportFieldRequestorName
		return nil
	case ReportFieldRequestorEmail:
		*s = ReportFieldRequestorEmail
		return nil
	case ReportFieldIntegration:
		*s = ReportFieldIntegration
		return nil
	case ReportFieldResources:
		*s = ReportFieldResources
		return nil
	case ReportFieldResourceType:
		*s = ReportFieldResourceType
		return nil
	case ReportFieldPermissions:
		*s = ReportFieldPermissions
		return nil
	case ReportFieldApproverNames:
		*s = ReportFieldApproverNames
		return nil
	case ReportFieldApproverEmails:
		*s = ReportFieldApproverEmails
		return nil
	case ReportFieldApproverTypes:
		*s = ReportFieldApproverTypes
		return nil
	case ReportFieldJustification:
		*s = ReportFieldJustification
		return nil
	case ReportFieldStatus:
		*s = ReportFieldStatus
		return nil
	case ReportFieldApproverReason:
		*s = ReportFieldApproverReason
		return nil
	case ReportFieldResourcesStatus:
		*s = ReportFieldResourcesStatus
		return nil
	case ReportFieldTriggerType:
		*s = ReportFieldTriggerType
		return nil
	case ReportFieldAccessFlow:
		*s = ReportFieldAccessFlow
		return nil
	case ReportFieldBundleName:
		*s = ReportFieldBundleName
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/RequestAgainV4
type RequestAgainV4 struct {
	Justification OptNilString               `json:"justification"`
	CustomFields  RequestAgainV4CustomFields `json:"custom_fields"`
}

// GetJustification returns the value of Justification.
func (s *RequestAgainV4) GetJustification() OptNilString {
	return s.Justification
}

// GetCustomFields returns the value of CustomFields.
func (s *RequestAgainV4) GetCustomFields() RequestAgainV4CustomFields {
	return s.CustomFields
}

// SetJustification sets the value of Justification.
func (s *RequestAgainV4) SetJustification(val OptNilString) {
	s.Justification = val
}

// SetCustomFields sets the value of CustomFields.
func (s *RequestAgainV4) SetCustomFields(val RequestAgainV4CustomFields) {
	s.CustomFields = val
}

type RequestAgainV4CustomFields map[string]string

func (s *RequestAgainV4CustomFields) init() RequestAgainV4CustomFields {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/RequestEntitlementPermissionV4
type RequestEntitlementPermissionV4 struct {
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *RequestEntitlementPermissionV4) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *RequestEntitlementPermissionV4) SetName(val string) {
	s.Name = val
}

// RequestorsV2.
// Ref: #/components/schemas/RequestorsPublicV2Model
type RequestorsPublicV2Model struct {
	LogicalOperator string                   `json:"logical_operator"`
	Conditions      []ConditionPublicV2Model `json:"conditions"`
}

// GetLogicalOperator returns the value of LogicalOperator.
func (s *RequestorsPublicV2Model) GetLogicalOperator() string {
	return s.LogicalOperator
}

// GetConditions returns the value of Conditions.
func (s *RequestorsPublicV2Model) GetConditions() []ConditionPublicV2Model {
	return s.Conditions
}

// SetLogicalOperator sets the value of LogicalOperator.
func (s *RequestorsPublicV2Model) SetLogicalOperator(val string) {
	s.LogicalOperator = val
}

// SetConditions sets the value of Conditions.
func (s *RequestorsPublicV2Model) SetConditions(val []ConditionPublicV2Model) {
	s.Conditions = val
}

// RequestorsUpsertV2.
// Ref: #/components/schemas/RequestorsUpsertPublicV2Model
type RequestorsUpsertPublicV2Model struct {
	LogicalOperator string                         `json:"logical_operator"`
	Conditions      []ConditionUpsertPublicV2Model `json:"conditions"`
}

// GetLogicalOperator returns the value of LogicalOperator.
func (s *RequestorsUpsertPublicV2Model) GetLogicalOperator() string {
	return s.LogicalOperator
}

// GetConditions returns the value of Conditions.
func (s *RequestorsUpsertPublicV2Model) GetConditions() []ConditionUpsertPublicV2Model {
	return s.Conditions
}

// SetLogicalOperator sets the value of LogicalOperator.
func (s *RequestorsUpsertPublicV2Model) SetLogicalOperator(val string) {
	s.LogicalOperator = val
}

// SetConditions sets the value of Conditions.
func (s *RequestorsUpsertPublicV2Model) SetConditions(val []ConditionUpsertPublicV2Model) {
	s.Conditions = val
}

// Ref: #/components/schemas/ResourceResponse
type ResourceResponse struct {
	ID     string                 `json:"id"`
	Name   string                 `json:"name"`
	Type   string                 `json:"type"`
	Status ResourceStatusResponse `json:"status"`
}

// GetID returns the value of ID.
func (s *ResourceResponse) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *ResourceResponse) GetName() string {
	return s.Name
}

// GetType returns the value of Type.
func (s *ResourceResponse) GetType() string {
	return s.Type
}

// GetStatus returns the value of Status.
func (s *ResourceResponse) GetStatus() ResourceStatusResponse {
	return s.Status
}

// SetID sets the value of ID.
func (s *ResourceResponse) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ResourceResponse) SetName(val string) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *ResourceResponse) SetType(val string) {
	s.Type = val
}

// SetStatus sets the value of Status.
func (s *ResourceResponse) SetStatus(val ResourceStatusResponse) {
	s.Status = val
}

// Ref: #/components/schemas/ResourceStatusResponse
type ResourceStatusResponse struct {
	Status  ResourceStatusV1 `json:"status"`
	Message OptNilString     `json:"message"`
}

// GetStatus returns the value of Status.
func (s *ResourceStatusResponse) GetStatus() ResourceStatusV1 {
	return s.Status
}

// GetMessage returns the value of Message.
func (s *ResourceStatusResponse) GetMessage() OptNilString {
	return s.Message
}

// SetStatus sets the value of Status.
func (s *ResourceStatusResponse) SetStatus(val ResourceStatusV1) {
	s.Status = val
}

// SetMessage sets the value of Message.
func (s *ResourceStatusResponse) SetMessage(val OptNilString) {
	s.Message = val
}

// Ref: #/components/schemas/ResourceStatusV1
type ResourceStatusV1 string

const (
	ResourceStatusV1Active  ResourceStatusV1 = "Active"
	ResourceStatusV1Error   ResourceStatusV1 = "Error"
	ResourceStatusV1Deleted ResourceStatusV1 = "Deleted"
)

// AllValues returns all ResourceStatusV1 values.
func (ResourceStatusV1) AllValues() []ResourceStatusV1 {
	return []ResourceStatusV1{
		ResourceStatusV1Active,
		ResourceStatusV1Error,
		ResourceStatusV1Deleted,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ResourceStatusV1) MarshalText() ([]byte, error) {
	switch s {
	case ResourceStatusV1Active:
		return []byte(s), nil
	case ResourceStatusV1Error:
		return []byte(s), nil
	case ResourceStatusV1Deleted:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ResourceStatusV1) UnmarshalText(data []byte) error {
	switch ResourceStatusV1(data) {
	case ResourceStatusV1Active:
		*s = ResourceStatusV1Active
		return nil
	case ResourceStatusV1Error:
		*s = ResourceStatusV1Error
		return nil
	case ResourceStatusV1Deleted:
		*s = ResourceStatusV1Deleted
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/ResourceTypeV4
type ResourceTypeV4 struct {
	ID    string `json:"id"`
	Label string `json:"label"`
}

// GetID returns the value of ID.
func (s *ResourceTypeV4) GetID() string {
	return s.ID
}

// GetLabel returns the value of Label.
func (s *ResourceTypeV4) GetLabel() string {
	return s.Label
}

// SetID sets the value of ID.
func (s *ResourceTypeV4) SetID(val string) {
	s.ID = val
}

// SetLabel sets the value of Label.
func (s *ResourceTypeV4) SetLabel(val string) {
	s.Label = val
}

// Ref: #/components/schemas/ResourceUserTagsResponse
type ResourceUserTagsResponse struct {
	ResourceID string                       `json:"resource_id"`
	Tags       ResourceUserTagsResponseTags `json:"tags"`
}

// GetResourceID returns the value of ResourceID.
func (s *ResourceUserTagsResponse) GetResourceID() string {
	return s.ResourceID
}

// GetTags returns the value of Tags.
func (s *ResourceUserTagsResponse) GetTags() ResourceUserTagsResponseTags {
	return s.Tags
}

// SetResourceID sets the value of ResourceID.
func (s *ResourceUserTagsResponse) SetResourceID(val string) {
	s.ResourceID = val
}

// SetTags sets the value of Tags.
func (s *ResourceUserTagsResponse) SetTags(val ResourceUserTagsResponseTags) {
	s.Tags = val
}

type ResourceUserTagsResponseTags map[string]string

func (s *ResourceUserTagsResponseTags) init() ResourceUserTagsResponseTags {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// ResourcesScopeIntegrationAccessTargetV2.
// Ref: #/components/schemas/ResourcesScopeIntegrationAccessTargetPublicV2Model
type ResourcesScopeIntegrationAccessTargetPublicV2Model struct {
	ScopeMode string       `json:"scope_mode"`
	Type      string       `json:"type"`
	Key       OptNilString `json:"key"`
	Values    []string     `json:"values"`
}

// GetScopeMode returns the value of ScopeMode.
func (s *ResourcesScopeIntegrationAccessTargetPublicV2Model) GetScopeMode() string {
	return s.ScopeMode
}

// GetType returns the value of Type.
func (s *ResourcesScopeIntegrationAccessTargetPublicV2Model) GetType() string {
	return s.Type
}

// GetKey returns the value of Key.
func (s *ResourcesScopeIntegrationAccessTargetPublicV2Model) GetKey() OptNilString {
	return s.Key
}

// GetValues returns the value of Values.
func (s *ResourcesScopeIntegrationAccessTargetPublicV2Model) GetValues() []string {
	return s.Values
}

// SetScopeMode sets the value of ScopeMode.
func (s *ResourcesScopeIntegrationAccessTargetPublicV2Model) SetScopeMode(val string) {
	s.ScopeMode = val
}

// SetType sets the value of Type.
func (s *ResourcesScopeIntegrationAccessTargetPublicV2Model) SetType(val string) {
	s.Type = val
}

// SetKey sets the value of Key.
func (s *ResourcesScopeIntegrationAccessTargetPublicV2Model) SetKey(val OptNilString) {
	s.Key = val
}

// SetValues sets the value of Values.
func (s *ResourcesScopeIntegrationAccessTargetPublicV2Model) SetValues(val []string) {
	s.Values = val
}

// Ref: #/components/schemas/SecretConfig
type SecretConfig map[string]SecretConfigItem

func (s *SecretConfig) init() SecretConfig {
	m := *s
	if m == nil {
		m = map[string]SecretConfigItem{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/SecretConfig1
type SecretConfig1 struct{}

type SecretConfigItem struct{}

// Ref: #/components/schemas/SecretStoreConfigV4
type SecretStoreConfigV4 struct {
	AWS            OptNilAwsSecretConfigV4            `json:"aws"`
	Gcp            OptNilGcpSecretConfigV4            `json:"gcp"`
	Kubernetes     OptNilKubernetesSecretConfigV4     `json:"kubernetes"`
	Azure          OptNilAzureSecretConfigV4          `json:"azure"`
	HashicorpVault OptNilHashicorpVaultSecretConfigV4 `json:"hashicorp_vault"`
	Apono          OptNilAponoSecretConfigV4          `json:"apono"`
}

// GetAWS returns the value of AWS.
func (s *SecretStoreConfigV4) GetAWS() OptNilAwsSecretConfigV4 {
	return s.AWS
}

// GetGcp returns the value of Gcp.
func (s *SecretStoreConfigV4) GetGcp() OptNilGcpSecretConfigV4 {
	return s.Gcp
}

// GetKubernetes returns the value of Kubernetes.
func (s *SecretStoreConfigV4) GetKubernetes() OptNilKubernetesSecretConfigV4 {
	return s.Kubernetes
}

// GetAzure returns the value of Azure.
func (s *SecretStoreConfigV4) GetAzure() OptNilAzureSecretConfigV4 {
	return s.Azure
}

// GetHashicorpVault returns the value of HashicorpVault.
func (s *SecretStoreConfigV4) GetHashicorpVault() OptNilHashicorpVaultSecretConfigV4 {
	return s.HashicorpVault
}

// GetApono returns the value of Apono.
func (s *SecretStoreConfigV4) GetApono() OptNilAponoSecretConfigV4 {
	return s.Apono
}

// SetAWS sets the value of AWS.
func (s *SecretStoreConfigV4) SetAWS(val OptNilAwsSecretConfigV4) {
	s.AWS = val
}

// SetGcp sets the value of Gcp.
func (s *SecretStoreConfigV4) SetGcp(val OptNilGcpSecretConfigV4) {
	s.Gcp = val
}

// SetKubernetes sets the value of Kubernetes.
func (s *SecretStoreConfigV4) SetKubernetes(val OptNilKubernetesSecretConfigV4) {
	s.Kubernetes = val
}

// SetAzure sets the value of Azure.
func (s *SecretStoreConfigV4) SetAzure(val OptNilAzureSecretConfigV4) {
	s.Azure = val
}

// SetHashicorpVault sets the value of HashicorpVault.
func (s *SecretStoreConfigV4) SetHashicorpVault(val OptNilHashicorpVaultSecretConfigV4) {
	s.HashicorpVault = val
}

// SetApono sets the value of Apono.
func (s *SecretStoreConfigV4) SetApono(val OptNilAponoSecretConfigV4) {
	s.Apono = val
}

// Ref: #/components/schemas/SelectableIntegration
type SelectableIntegration struct {
	ID string `json:"id"`
}

// GetID returns the value of ID.
func (s *SelectableIntegration) GetID() string {
	return s.ID
}

// SetID sets the value of ID.
func (s *SelectableIntegration) SetID(val string) {
	s.ID = val
}

// Ref: #/components/schemas/SelectablePermissionsResponse
type SelectablePermissionsResponse struct {
	Data          []string       `json:"data"`
	Pagination    PaginationInfo `json:"pagination"`
	AllowMultiple bool           `json:"allow_multiple"`
}

// GetData returns the value of Data.
func (s *SelectablePermissionsResponse) GetData() []string {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *SelectablePermissionsResponse) GetPagination() PaginationInfo {
	return s.Pagination
}

// GetAllowMultiple returns the value of AllowMultiple.
func (s *SelectablePermissionsResponse) GetAllowMultiple() bool {
	return s.AllowMultiple
}

// SetData sets the value of Data.
func (s *SelectablePermissionsResponse) SetData(val []string) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *SelectablePermissionsResponse) SetPagination(val PaginationInfo) {
	s.Pagination = val
}

// SetAllowMultiple sets the value of AllowMultiple.
func (s *SelectablePermissionsResponse) SetAllowMultiple(val bool) {
	s.AllowMultiple = val
}

// Ref: #/components/schemas/SelectableResource
type SelectableResource struct {
	ID   string `json:"id"`
	Type string `json:"type"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *SelectableResource) GetID() string {
	return s.ID
}

// GetType returns the value of Type.
func (s *SelectableResource) GetType() string {
	return s.Type
}

// GetName returns the value of Name.
func (s *SelectableResource) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *SelectableResource) SetID(val string) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *SelectableResource) SetType(val string) {
	s.Type = val
}

// SetName sets the value of Name.
func (s *SelectableResource) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/SelectableResourceType
type SelectableResourceType struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *SelectableResourceType) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *SelectableResourceType) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *SelectableResourceType) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *SelectableResourceType) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/TagV1
type TagV1 struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// GetName returns the value of Name.
func (s *TagV1) GetName() string {
	return s.Name
}

// GetValue returns the value of Value.
func (s *TagV1) GetValue() string {
	return s.Value
}

// SetName sets the value of Name.
func (s *TagV1) SetName(val string) {
	s.Name = val
}

// SetValue sets the value of Value.
func (s *TagV1) SetValue(val string) {
	s.Value = val
}

// Ref: #/components/schemas/TimeframeV1
type TimeframeV1 struct {
	StartOfDayTimeInSeconds int64       `json:"start_of_day_time_in_seconds"`
	EndOfDayTimeInSeconds   int64       `json:"end_of_day_time_in_seconds"`
	DaysInWeek              []DayOfWeek `json:"days_in_week"`
	TimeZone                string      `json:"time_zone"`
}

// GetStartOfDayTimeInSeconds returns the value of StartOfDayTimeInSeconds.
func (s *TimeframeV1) GetStartOfDayTimeInSeconds() int64 {
	return s.StartOfDayTimeInSeconds
}

// GetEndOfDayTimeInSeconds returns the value of EndOfDayTimeInSeconds.
func (s *TimeframeV1) GetEndOfDayTimeInSeconds() int64 {
	return s.EndOfDayTimeInSeconds
}

// GetDaysInWeek returns the value of DaysInWeek.
func (s *TimeframeV1) GetDaysInWeek() []DayOfWeek {
	return s.DaysInWeek
}

// GetTimeZone returns the value of TimeZone.
func (s *TimeframeV1) GetTimeZone() string {
	return s.TimeZone
}

// SetStartOfDayTimeInSeconds sets the value of StartOfDayTimeInSeconds.
func (s *TimeframeV1) SetStartOfDayTimeInSeconds(val int64) {
	s.StartOfDayTimeInSeconds = val
}

// SetEndOfDayTimeInSeconds sets the value of EndOfDayTimeInSeconds.
func (s *TimeframeV1) SetEndOfDayTimeInSeconds(val int64) {
	s.EndOfDayTimeInSeconds = val
}

// SetDaysInWeek sets the value of DaysInWeek.
func (s *TimeframeV1) SetDaysInWeek(val []DayOfWeek) {
	s.DaysInWeek = val
}

// SetTimeZone sets the value of TimeZone.
func (s *TimeframeV1) SetTimeZone(val string) {
	s.TimeZone = val
}

// Ref: #/components/schemas/UpdateAccessBundleV1
type UpdateAccessBundleV1 struct {
	Name               OptNilString                         `json:"name"`
	IntegrationTargets OptNilAccessTargetIntegrationV1Array `json:"integration_targets"`
}

// GetName returns the value of Name.
func (s *UpdateAccessBundleV1) GetName() OptNilString {
	return s.Name
}

// GetIntegrationTargets returns the value of IntegrationTargets.
func (s *UpdateAccessBundleV1) GetIntegrationTargets() OptNilAccessTargetIntegrationV1Array {
	return s.IntegrationTargets
}

// SetName sets the value of Name.
func (s *UpdateAccessBundleV1) SetName(val OptNilString) {
	s.Name = val
}

// SetIntegrationTargets sets the value of IntegrationTargets.
func (s *UpdateAccessBundleV1) SetIntegrationTargets(val OptNilAccessTargetIntegrationV1Array) {
	s.IntegrationTargets = val
}

// Ref: #/components/schemas/UpdateAccessFlowV1
type UpdateAccessFlowV1 struct {
	Name               OptNilString                         `json:"name"`
	Active             OptNilBool                           `json:"active"`
	Trigger            OptNilAccessFlowTriggerV1            `json:"trigger"`
	Grantees           OptNilGranteeV1Array                 `json:"grantees"`
	IntegrationTargets OptNilAccessTargetIntegrationV1Array `json:"integration_targets"`
	BundleTargets      OptNilAccessTargetBundleV1Array      `json:"bundle_targets"`
	Approvers          OptNilApproverV1Array                `json:"approvers"`
	RevokeAfterInSec   OptNilInt32                          `json:"revoke_after_in_sec"`
	Settings           OptNilAccessFlowSettingsV1           `json:"settings"`
}

// GetName returns the value of Name.
func (s *UpdateAccessFlowV1) GetName() OptNilString {
	return s.Name
}

// GetActive returns the value of Active.
func (s *UpdateAccessFlowV1) GetActive() OptNilBool {
	return s.Active
}

// GetTrigger returns the value of Trigger.
func (s *UpdateAccessFlowV1) GetTrigger() OptNilAccessFlowTriggerV1 {
	return s.Trigger
}

// GetGrantees returns the value of Grantees.
func (s *UpdateAccessFlowV1) GetGrantees() OptNilGranteeV1Array {
	return s.Grantees
}

// GetIntegrationTargets returns the value of IntegrationTargets.
func (s *UpdateAccessFlowV1) GetIntegrationTargets() OptNilAccessTargetIntegrationV1Array {
	return s.IntegrationTargets
}

// GetBundleTargets returns the value of BundleTargets.
func (s *UpdateAccessFlowV1) GetBundleTargets() OptNilAccessTargetBundleV1Array {
	return s.BundleTargets
}

// GetApprovers returns the value of Approvers.
func (s *UpdateAccessFlowV1) GetApprovers() OptNilApproverV1Array {
	return s.Approvers
}

// GetRevokeAfterInSec returns the value of RevokeAfterInSec.
func (s *UpdateAccessFlowV1) GetRevokeAfterInSec() OptNilInt32 {
	return s.RevokeAfterInSec
}

// GetSettings returns the value of Settings.
func (s *UpdateAccessFlowV1) GetSettings() OptNilAccessFlowSettingsV1 {
	return s.Settings
}

// SetName sets the value of Name.
func (s *UpdateAccessFlowV1) SetName(val OptNilString) {
	s.Name = val
}

// SetActive sets the value of Active.
func (s *UpdateAccessFlowV1) SetActive(val OptNilBool) {
	s.Active = val
}

// SetTrigger sets the value of Trigger.
func (s *UpdateAccessFlowV1) SetTrigger(val OptNilAccessFlowTriggerV1) {
	s.Trigger = val
}

// SetGrantees sets the value of Grantees.
func (s *UpdateAccessFlowV1) SetGrantees(val OptNilGranteeV1Array) {
	s.Grantees = val
}

// SetIntegrationTargets sets the value of IntegrationTargets.
func (s *UpdateAccessFlowV1) SetIntegrationTargets(val OptNilAccessTargetIntegrationV1Array) {
	s.IntegrationTargets = val
}

// SetBundleTargets sets the value of BundleTargets.
func (s *UpdateAccessFlowV1) SetBundleTargets(val OptNilAccessTargetBundleV1Array) {
	s.BundleTargets = val
}

// SetApprovers sets the value of Approvers.
func (s *UpdateAccessFlowV1) SetApprovers(val OptNilApproverV1Array) {
	s.Approvers = val
}

// SetRevokeAfterInSec sets the value of RevokeAfterInSec.
func (s *UpdateAccessFlowV1) SetRevokeAfterInSec(val OptNilInt32) {
	s.RevokeAfterInSec = val
}

// SetSettings sets the value of Settings.
func (s *UpdateAccessFlowV1) SetSettings(val OptNilAccessFlowSettingsV1) {
	s.Settings = val
}

// Ref: #/components/schemas/UpdateGroupMembersV1
type UpdateGroupMembersV1 struct {
	MembersEmails []string `json:"members_emails"`
}

// GetMembersEmails returns the value of MembersEmails.
func (s *UpdateGroupMembersV1) GetMembersEmails() []string {
	return s.MembersEmails
}

// SetMembersEmails sets the value of MembersEmails.
func (s *UpdateGroupMembersV1) SetMembersEmails(val []string) {
	s.MembersEmails = val
}

// UpdateGroupMembersV1NoContent is response for UpdateGroupMembersV1 operation.
type UpdateGroupMembersV1NoContent struct{}

// Ref: #/components/schemas/UpdateGroupV1
type UpdateGroupV1 struct {
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *UpdateGroupV1) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *UpdateGroupV1) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/UpdateIntegration
type UpdateIntegration struct {
	Name                   string                    `json:"name"`
	ProvisionerID          OptNilString              `json:"provisioner_id"`
	Metadata               UpdateIntegrationMetadata `json:"metadata"`
	SecretConfig           OptNilSecretConfig        `json:"secret_config"`
	ConnectedResourceTypes OptNilStringArray         `json:"connected_resource_types"`
	CustomAccessDetails    OptNilString              `json:"custom_access_details"`
}

// GetName returns the value of Name.
func (s *UpdateIntegration) GetName() string {
	return s.Name
}

// GetProvisionerID returns the value of ProvisionerID.
func (s *UpdateIntegration) GetProvisionerID() OptNilString {
	return s.ProvisionerID
}

// GetMetadata returns the value of Metadata.
func (s *UpdateIntegration) GetMetadata() UpdateIntegrationMetadata {
	return s.Metadata
}

// GetSecretConfig returns the value of SecretConfig.
func (s *UpdateIntegration) GetSecretConfig() OptNilSecretConfig {
	return s.SecretConfig
}

// GetConnectedResourceTypes returns the value of ConnectedResourceTypes.
func (s *UpdateIntegration) GetConnectedResourceTypes() OptNilStringArray {
	return s.ConnectedResourceTypes
}

// GetCustomAccessDetails returns the value of CustomAccessDetails.
func (s *UpdateIntegration) GetCustomAccessDetails() OptNilString {
	return s.CustomAccessDetails
}

// SetName sets the value of Name.
func (s *UpdateIntegration) SetName(val string) {
	s.Name = val
}

// SetProvisionerID sets the value of ProvisionerID.
func (s *UpdateIntegration) SetProvisionerID(val OptNilString) {
	s.ProvisionerID = val
}

// SetMetadata sets the value of Metadata.
func (s *UpdateIntegration) SetMetadata(val UpdateIntegrationMetadata) {
	s.Metadata = val
}

// SetSecretConfig sets the value of SecretConfig.
func (s *UpdateIntegration) SetSecretConfig(val OptNilSecretConfig) {
	s.SecretConfig = val
}

// SetConnectedResourceTypes sets the value of ConnectedResourceTypes.
func (s *UpdateIntegration) SetConnectedResourceTypes(val OptNilStringArray) {
	s.ConnectedResourceTypes = val
}

// SetCustomAccessDetails sets the value of CustomAccessDetails.
func (s *UpdateIntegration) SetCustomAccessDetails(val OptNilString) {
	s.CustomAccessDetails = val
}

type UpdateIntegrationMetadata struct{}

// Ref: #/components/schemas/UpdateIntegrationV4
type UpdateIntegrationV4 struct {
	Name                   string                          `json:"name"`
	IntegrationConfig      JsonMapModel                    `json:"integration_config"`
	SecretStoreConfig      OptNilUpsertSecretStoreConfigV4 `json:"secret_store_config"`
	ConnectedResourceTypes OptNilStringArray               `json:"connected_resource_types"`
	CustomAccessDetails    OptNilString                    `json:"custom_access_details"`
	Owner                  OptNilUpsertOwnerV4             `json:"owner"`
	OwnersMapping          OptNilUpsertOwnerMappingV4      `json:"owners_mapping"`
}

// GetName returns the value of Name.
func (s *UpdateIntegrationV4) GetName() string {
	return s.Name
}

// GetIntegrationConfig returns the value of IntegrationConfig.
func (s *UpdateIntegrationV4) GetIntegrationConfig() JsonMapModel {
	return s.IntegrationConfig
}

// GetSecretStoreConfig returns the value of SecretStoreConfig.
func (s *UpdateIntegrationV4) GetSecretStoreConfig() OptNilUpsertSecretStoreConfigV4 {
	return s.SecretStoreConfig
}

// GetConnectedResourceTypes returns the value of ConnectedResourceTypes.
func (s *UpdateIntegrationV4) GetConnectedResourceTypes() OptNilStringArray {
	return s.ConnectedResourceTypes
}

// GetCustomAccessDetails returns the value of CustomAccessDetails.
func (s *UpdateIntegrationV4) GetCustomAccessDetails() OptNilString {
	return s.CustomAccessDetails
}

// GetOwner returns the value of Owner.
func (s *UpdateIntegrationV4) GetOwner() OptNilUpsertOwnerV4 {
	return s.Owner
}

// GetOwnersMapping returns the value of OwnersMapping.
func (s *UpdateIntegrationV4) GetOwnersMapping() OptNilUpsertOwnerMappingV4 {
	return s.OwnersMapping
}

// SetName sets the value of Name.
func (s *UpdateIntegrationV4) SetName(val string) {
	s.Name = val
}

// SetIntegrationConfig sets the value of IntegrationConfig.
func (s *UpdateIntegrationV4) SetIntegrationConfig(val JsonMapModel) {
	s.IntegrationConfig = val
}

// SetSecretStoreConfig sets the value of SecretStoreConfig.
func (s *UpdateIntegrationV4) SetSecretStoreConfig(val OptNilUpsertSecretStoreConfigV4) {
	s.SecretStoreConfig = val
}

// SetConnectedResourceTypes sets the value of ConnectedResourceTypes.
func (s *UpdateIntegrationV4) SetConnectedResourceTypes(val OptNilStringArray) {
	s.ConnectedResourceTypes = val
}

// SetCustomAccessDetails sets the value of CustomAccessDetails.
func (s *UpdateIntegrationV4) SetCustomAccessDetails(val OptNilString) {
	s.CustomAccessDetails = val
}

// SetOwner sets the value of Owner.
func (s *UpdateIntegrationV4) SetOwner(val OptNilUpsertOwnerV4) {
	s.Owner = val
}

// SetOwnersMapping sets the value of OwnersMapping.
func (s *UpdateIntegrationV4) SetOwnersMapping(val OptNilUpsertOwnerMappingV4) {
	s.OwnersMapping = val
}

// Ref: #/components/schemas/UpdateResourceUserTagsRequest
type UpdateResourceUserTagsRequest struct {
	Tags UpdateResourceUserTagsRequestTags `json:"tags"`
}

// GetTags returns the value of Tags.
func (s *UpdateResourceUserTagsRequest) GetTags() UpdateResourceUserTagsRequestTags {
	return s.Tags
}

// SetTags sets the value of Tags.
func (s *UpdateResourceUserTagsRequest) SetTags(val UpdateResourceUserTagsRequestTags) {
	s.Tags = val
}

type UpdateResourceUserTagsRequestTags map[string]string

func (s *UpdateResourceUserTagsRequestTags) init() UpdateResourceUserTagsRequestTags {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/UpsertAccessBundleV1
type UpsertAccessBundleV1 struct {
	Name               string                      `json:"name"`
	IntegrationTargets []AccessTargetIntegrationV1 `json:"integration_targets"`
}

// GetName returns the value of Name.
func (s *UpsertAccessBundleV1) GetName() string {
	return s.Name
}

// GetIntegrationTargets returns the value of IntegrationTargets.
func (s *UpsertAccessBundleV1) GetIntegrationTargets() []AccessTargetIntegrationV1 {
	return s.IntegrationTargets
}

// SetName sets the value of Name.
func (s *UpsertAccessBundleV1) SetName(val string) {
	s.Name = val
}

// SetIntegrationTargets sets the value of IntegrationTargets.
func (s *UpsertAccessBundleV1) SetIntegrationTargets(val []AccessTargetIntegrationV1) {
	s.IntegrationTargets = val
}

// Ref: #/components/schemas/UpsertAccessFlowV1
type UpsertAccessFlowV1 struct {
	Name               string                               `json:"name"`
	Active             bool                                 `json:"active"`
	Trigger            AccessFlowTriggerV1                  `json:"trigger"`
	Grantees           []GranteeV1                          `json:"grantees"`
	IntegrationTargets OptNilAccessTargetIntegrationV1Array `json:"integration_targets"`
	BundleTargets      OptNilAccessTargetBundleV1Array      `json:"bundle_targets"`
	Approvers          OptNilApproverV1Array                `json:"approvers"`
	RevokeAfterInSec   int32                                `json:"revoke_after_in_sec"`
	Settings           OptNilAccessFlowSettingsV1           `json:"settings"`
}

// GetName returns the value of Name.
func (s *UpsertAccessFlowV1) GetName() string {
	return s.Name
}

// GetActive returns the value of Active.
func (s *UpsertAccessFlowV1) GetActive() bool {
	return s.Active
}

// GetTrigger returns the value of Trigger.
func (s *UpsertAccessFlowV1) GetTrigger() AccessFlowTriggerV1 {
	return s.Trigger
}

// GetGrantees returns the value of Grantees.
func (s *UpsertAccessFlowV1) GetGrantees() []GranteeV1 {
	return s.Grantees
}

// GetIntegrationTargets returns the value of IntegrationTargets.
func (s *UpsertAccessFlowV1) GetIntegrationTargets() OptNilAccessTargetIntegrationV1Array {
	return s.IntegrationTargets
}

// GetBundleTargets returns the value of BundleTargets.
func (s *UpsertAccessFlowV1) GetBundleTargets() OptNilAccessTargetBundleV1Array {
	return s.BundleTargets
}

// GetApprovers returns the value of Approvers.
func (s *UpsertAccessFlowV1) GetApprovers() OptNilApproverV1Array {
	return s.Approvers
}

// GetRevokeAfterInSec returns the value of RevokeAfterInSec.
func (s *UpsertAccessFlowV1) GetRevokeAfterInSec() int32 {
	return s.RevokeAfterInSec
}

// GetSettings returns the value of Settings.
func (s *UpsertAccessFlowV1) GetSettings() OptNilAccessFlowSettingsV1 {
	return s.Settings
}

// SetName sets the value of Name.
func (s *UpsertAccessFlowV1) SetName(val string) {
	s.Name = val
}

// SetActive sets the value of Active.
func (s *UpsertAccessFlowV1) SetActive(val bool) {
	s.Active = val
}

// SetTrigger sets the value of Trigger.
func (s *UpsertAccessFlowV1) SetTrigger(val AccessFlowTriggerV1) {
	s.Trigger = val
}

// SetGrantees sets the value of Grantees.
func (s *UpsertAccessFlowV1) SetGrantees(val []GranteeV1) {
	s.Grantees = val
}

// SetIntegrationTargets sets the value of IntegrationTargets.
func (s *UpsertAccessFlowV1) SetIntegrationTargets(val OptNilAccessTargetIntegrationV1Array) {
	s.IntegrationTargets = val
}

// SetBundleTargets sets the value of BundleTargets.
func (s *UpsertAccessFlowV1) SetBundleTargets(val OptNilAccessTargetBundleV1Array) {
	s.BundleTargets = val
}

// SetApprovers sets the value of Approvers.
func (s *UpsertAccessFlowV1) SetApprovers(val OptNilApproverV1Array) {
	s.Approvers = val
}

// SetRevokeAfterInSec sets the value of RevokeAfterInSec.
func (s *UpsertAccessFlowV1) SetRevokeAfterInSec(val int32) {
	s.RevokeAfterInSec = val
}

// SetSettings sets the value of Settings.
func (s *UpsertAccessFlowV1) SetSettings(val OptNilAccessFlowSettingsV1) {
	s.Settings = val
}

// Ref: #/components/schemas/UpsertAccessScopeV1
type UpsertAccessScopeV1 struct {
	Name  string `json:"name"`
	Query string `json:"query"`
}

// GetName returns the value of Name.
func (s *UpsertAccessScopeV1) GetName() string {
	return s.Name
}

// GetQuery returns the value of Query.
func (s *UpsertAccessScopeV1) GetQuery() string {
	return s.Query
}

// SetName sets the value of Name.
func (s *UpsertAccessScopeV1) SetName(val string) {
	s.Name = val
}

// SetQuery sets the value of Query.
func (s *UpsertAccessScopeV1) SetQuery(val string) {
	s.Query = val
}

// UpsertBundleV2.
// Ref: #/components/schemas/UpsertBundlePublicV2Model
type UpsertBundlePublicV2Model struct {
	Name          string                                        `json:"name"`
	AccessTargets []AccessBundleAccessTargetUpsertPublicV2Model `json:"access_targets"`
}

// GetName returns the value of Name.
func (s *UpsertBundlePublicV2Model) GetName() string {
	return s.Name
}

// GetAccessTargets returns the value of AccessTargets.
func (s *UpsertBundlePublicV2Model) GetAccessTargets() []AccessBundleAccessTargetUpsertPublicV2Model {
	return s.AccessTargets
}

// SetName sets the value of Name.
func (s *UpsertBundlePublicV2Model) SetName(val string) {
	s.Name = val
}

// SetAccessTargets sets the value of AccessTargets.
func (s *UpsertBundlePublicV2Model) SetAccessTargets(val []AccessBundleAccessTargetUpsertPublicV2Model) {
	s.AccessTargets = val
}

// Ref: #/components/schemas/UpsertConnectorV3
type UpsertConnectorV3 struct {
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *UpsertConnectorV3) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *UpsertConnectorV3) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/UpsertErrorModel
type UpsertErrorModel struct {
	ErrorCode    string `json:"error_code"`
	ErrorDetails string `json:"error_details"`
}

// GetErrorCode returns the value of ErrorCode.
func (s *UpsertErrorModel) GetErrorCode() string {
	return s.ErrorCode
}

// GetErrorDetails returns the value of ErrorDetails.
func (s *UpsertErrorModel) GetErrorDetails() string {
	return s.ErrorDetails
}

// SetErrorCode sets the value of ErrorCode.
func (s *UpsertErrorModel) SetErrorCode(val string) {
	s.ErrorCode = val
}

// SetErrorDetails sets the value of ErrorDetails.
func (s *UpsertErrorModel) SetErrorDetails(val string) {
	s.ErrorDetails = val
}

// Ref: #/components/schemas/UpsertOwnerMappingV4
type UpsertOwnerMappingV4 struct {
	KeyName                    string       `json:"key_name"`
	AttributeType              string       `json:"attribute_type"`
	SourceIntegrationReference OptNilString `json:"source_integration_reference"`
}

// GetKeyName returns the value of KeyName.
func (s *UpsertOwnerMappingV4) GetKeyName() string {
	return s.KeyName
}

// GetAttributeType returns the value of AttributeType.
func (s *UpsertOwnerMappingV4) GetAttributeType() string {
	return s.AttributeType
}

// GetSourceIntegrationReference returns the value of SourceIntegrationReference.
func (s *UpsertOwnerMappingV4) GetSourceIntegrationReference() OptNilString {
	return s.SourceIntegrationReference
}

// SetKeyName sets the value of KeyName.
func (s *UpsertOwnerMappingV4) SetKeyName(val string) {
	s.KeyName = val
}

// SetAttributeType sets the value of AttributeType.
func (s *UpsertOwnerMappingV4) SetAttributeType(val string) {
	s.AttributeType = val
}

// SetSourceIntegrationReference sets the value of SourceIntegrationReference.
func (s *UpsertOwnerMappingV4) SetSourceIntegrationReference(val OptNilString) {
	s.SourceIntegrationReference = val
}

// Ref: #/components/schemas/UpsertOwnerV4
type UpsertOwnerV4 struct {
	AttributeType              string       `json:"attribute_type"`
	AttributeValue             []string     `json:"attribute_value"`
	SourceIntegrationReference OptNilString `json:"source_integration_reference"`
}

// GetAttributeType returns the value of AttributeType.
func (s *UpsertOwnerV4) GetAttributeType() string {
	return s.AttributeType
}

// GetAttributeValue returns the value of AttributeValue.
func (s *UpsertOwnerV4) GetAttributeValue() []string {
	return s.AttributeValue
}

// GetSourceIntegrationReference returns the value of SourceIntegrationReference.
func (s *UpsertOwnerV4) GetSourceIntegrationReference() OptNilString {
	return s.SourceIntegrationReference
}

// SetAttributeType sets the value of AttributeType.
func (s *UpsertOwnerV4) SetAttributeType(val string) {
	s.AttributeType = val
}

// SetAttributeValue sets the value of AttributeValue.
func (s *UpsertOwnerV4) SetAttributeValue(val []string) {
	s.AttributeValue = val
}

// SetSourceIntegrationReference sets the value of SourceIntegrationReference.
func (s *UpsertOwnerV4) SetSourceIntegrationReference(val OptNilString) {
	s.SourceIntegrationReference = val
}

// Ref: #/components/schemas/UpsertSecretStoreConfigV4
type UpsertSecretStoreConfigV4 struct {
	AWS            OptNilAwsSecretConfigV4            `json:"aws"`
	Gcp            OptNilGcpSecretConfigV4            `json:"gcp"`
	Kubernetes     OptNilKubernetesSecretConfigV4     `json:"kubernetes"`
	Azure          OptNilAzureSecretConfigV4          `json:"azure"`
	HashicorpVault OptNilHashicorpVaultSecretConfigV4 `json:"hashicorp_vault"`
}

// GetAWS returns the value of AWS.
func (s *UpsertSecretStoreConfigV4) GetAWS() OptNilAwsSecretConfigV4 {
	return s.AWS
}

// GetGcp returns the value of Gcp.
func (s *UpsertSecretStoreConfigV4) GetGcp() OptNilGcpSecretConfigV4 {
	return s.Gcp
}

// GetKubernetes returns the value of Kubernetes.
func (s *UpsertSecretStoreConfigV4) GetKubernetes() OptNilKubernetesSecretConfigV4 {
	return s.Kubernetes
}

// GetAzure returns the value of Azure.
func (s *UpsertSecretStoreConfigV4) GetAzure() OptNilAzureSecretConfigV4 {
	return s.Azure
}

// GetHashicorpVault returns the value of HashicorpVault.
func (s *UpsertSecretStoreConfigV4) GetHashicorpVault() OptNilHashicorpVaultSecretConfigV4 {
	return s.HashicorpVault
}

// SetAWS sets the value of AWS.
func (s *UpsertSecretStoreConfigV4) SetAWS(val OptNilAwsSecretConfigV4) {
	s.AWS = val
}

// SetGcp sets the value of Gcp.
func (s *UpsertSecretStoreConfigV4) SetGcp(val OptNilGcpSecretConfigV4) {
	s.Gcp = val
}

// SetKubernetes sets the value of Kubernetes.
func (s *UpsertSecretStoreConfigV4) SetKubernetes(val OptNilKubernetesSecretConfigV4) {
	s.Kubernetes = val
}

// SetAzure sets the value of Azure.
func (s *UpsertSecretStoreConfigV4) SetAzure(val OptNilAzureSecretConfigV4) {
	s.Azure = val
}

// SetHashicorpVault sets the value of HashicorpVault.
func (s *UpsertSecretStoreConfigV4) SetHashicorpVault(val OptNilHashicorpVaultSecretConfigV4) {
	s.HashicorpVault = val
}

// Ref: #/components/schemas/UserModel
type UserModel struct {
	ID        string `json:"id"`
	Email     string `json:"email"`
	FirstName string `json:"first_name"`
	LastName  string `json:"last_name"`
	Active    bool   `json:"active"`
}

// GetID returns the value of ID.
func (s *UserModel) GetID() string {
	return s.ID
}

// GetEmail returns the value of Email.
func (s *UserModel) GetEmail() string {
	return s.Email
}

// GetFirstName returns the value of FirstName.
func (s *UserModel) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *UserModel) GetLastName() string {
	return s.LastName
}

// GetActive returns the value of Active.
func (s *UserModel) GetActive() bool {
	return s.Active
}

// SetID sets the value of ID.
func (s *UserModel) SetID(val string) {
	s.ID = val
}

// SetEmail sets the value of Email.
func (s *UserModel) SetEmail(val string) {
	s.Email = val
}

// SetFirstName sets the value of FirstName.
func (s *UserModel) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *UserModel) SetLastName(val string) {
	s.LastName = val
}

// SetActive sets the value of Active.
func (s *UserModel) SetActive(val bool) {
	s.Active = val
}

// Ref: #/components/schemas/UserV3
type UserV3 struct {
	ID                    string                 `json:"id"`
	Email                 string                 `json:"email"`
	EmailAliases          []string               `json:"email_aliases"`
	FirstName             string                 `json:"first_name"`
	LastName              string                 `json:"last_name"`
	Active                bool                   `json:"active"`
	Roles                 []string               `json:"roles"`
	SourceIntegrationID   OptNilString           `json:"source_integration_id"`
	SourceIntegrationName OptNilString           `json:"source_integration_name"`
	Attributes            OptNilUserV3Attributes `json:"attributes"`
}

// GetID returns the value of ID.
func (s *UserV3) GetID() string {
	return s.ID
}

// GetEmail returns the value of Email.
func (s *UserV3) GetEmail() string {
	return s.Email
}

// GetEmailAliases returns the value of EmailAliases.
func (s *UserV3) GetEmailAliases() []string {
	return s.EmailAliases
}

// GetFirstName returns the value of FirstName.
func (s *UserV3) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *UserV3) GetLastName() string {
	return s.LastName
}

// GetActive returns the value of Active.
func (s *UserV3) GetActive() bool {
	return s.Active
}

// GetRoles returns the value of Roles.
func (s *UserV3) GetRoles() []string {
	return s.Roles
}

// GetSourceIntegrationID returns the value of SourceIntegrationID.
func (s *UserV3) GetSourceIntegrationID() OptNilString {
	return s.SourceIntegrationID
}

// GetSourceIntegrationName returns the value of SourceIntegrationName.
func (s *UserV3) GetSourceIntegrationName() OptNilString {
	return s.SourceIntegrationName
}

// GetAttributes returns the value of Attributes.
func (s *UserV3) GetAttributes() OptNilUserV3Attributes {
	return s.Attributes
}

// SetID sets the value of ID.
func (s *UserV3) SetID(val string) {
	s.ID = val
}

// SetEmail sets the value of Email.
func (s *UserV3) SetEmail(val string) {
	s.Email = val
}

// SetEmailAliases sets the value of EmailAliases.
func (s *UserV3) SetEmailAliases(val []string) {
	s.EmailAliases = val
}

// SetFirstName sets the value of FirstName.
func (s *UserV3) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *UserV3) SetLastName(val string) {
	s.LastName = val
}

// SetActive sets the value of Active.
func (s *UserV3) SetActive(val bool) {
	s.Active = val
}

// SetRoles sets the value of Roles.
func (s *UserV3) SetRoles(val []string) {
	s.Roles = val
}

// SetSourceIntegrationID sets the value of SourceIntegrationID.
func (s *UserV3) SetSourceIntegrationID(val OptNilString) {
	s.SourceIntegrationID = val
}

// SetSourceIntegrationName sets the value of SourceIntegrationName.
func (s *UserV3) SetSourceIntegrationName(val OptNilString) {
	s.SourceIntegrationName = val
}

// SetAttributes sets the value of Attributes.
func (s *UserV3) SetAttributes(val OptNilUserV3Attributes) {
	s.Attributes = val
}

type UserV3Attributes map[string]string

func (s *UserV3Attributes) init() UserV3Attributes {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}
