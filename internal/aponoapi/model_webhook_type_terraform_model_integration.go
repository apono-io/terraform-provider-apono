/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aponoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the WebhookTypeTerraformModelIntegration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookTypeTerraformModelIntegration{}

// WebhookTypeTerraformModelIntegration struct for WebhookTypeTerraformModelIntegration
type WebhookTypeTerraformModelIntegration struct {
	IntegrationId string `json:"integration_id"`
	ActionName    string `json:"action_name"`
}

type _WebhookTypeTerraformModelIntegration WebhookTypeTerraformModelIntegration

// NewWebhookTypeTerraformModelIntegration instantiates a new WebhookTypeTerraformModelIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookTypeTerraformModelIntegration(integrationId string, actionName string) *WebhookTypeTerraformModelIntegration {
	this := WebhookTypeTerraformModelIntegration{}
	this.IntegrationId = integrationId
	this.ActionName = actionName
	return &this
}

// NewWebhookTypeTerraformModelIntegrationWithDefaults instantiates a new WebhookTypeTerraformModelIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookTypeTerraformModelIntegrationWithDefaults() *WebhookTypeTerraformModelIntegration {
	this := WebhookTypeTerraformModelIntegration{}
	return &this
}

// GetIntegrationId returns the IntegrationId field value
func (o *WebhookTypeTerraformModelIntegration) GetIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value
// and a boolean to check if the value has been set.
func (o *WebhookTypeTerraformModelIntegration) GetIntegrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationId, true
}

// SetIntegrationId sets field value
func (o *WebhookTypeTerraformModelIntegration) SetIntegrationId(v string) {
	o.IntegrationId = v
}

// GetActionName returns the ActionName field value
func (o *WebhookTypeTerraformModelIntegration) GetActionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActionName
}

// GetActionNameOk returns a tuple with the ActionName field value
// and a boolean to check if the value has been set.
func (o *WebhookTypeTerraformModelIntegration) GetActionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionName, true
}

// SetActionName sets field value
func (o *WebhookTypeTerraformModelIntegration) SetActionName(v string) {
	o.ActionName = v
}

func (o WebhookTypeTerraformModelIntegration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookTypeTerraformModelIntegration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["integration_id"] = o.IntegrationId
	toSerialize["action_name"] = o.ActionName
	return toSerialize, nil
}

func (o *WebhookTypeTerraformModelIntegration) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"integration_id",
		"action_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookTypeTerraformModelIntegration := _WebhookTypeTerraformModelIntegration{}

	err = json.Unmarshal(bytes, &varWebhookTypeTerraformModelIntegration)

	if err != nil {
		return err
	}

	*o = WebhookTypeTerraformModelIntegration(varWebhookTypeTerraformModelIntegration)

	return err
}

type NullableWebhookTypeTerraformModelIntegration struct {
	value *WebhookTypeTerraformModelIntegration
	isSet bool
}

func (v NullableWebhookTypeTerraformModelIntegration) Get() *WebhookTypeTerraformModelIntegration {
	return v.value
}

func (v *NullableWebhookTypeTerraformModelIntegration) Set(val *WebhookTypeTerraformModelIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookTypeTerraformModelIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookTypeTerraformModelIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookTypeTerraformModelIntegration(val *WebhookTypeTerraformModelIntegration) *NullableWebhookTypeTerraformModelIntegration {
	return &NullableWebhookTypeTerraformModelIntegration{value: val, isSet: true}
}

func (v NullableWebhookTypeTerraformModelIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookTypeTerraformModelIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
