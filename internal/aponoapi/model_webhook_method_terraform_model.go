/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aponoapi

import (
	"encoding/json"
	"fmt"
)

// WebhookMethodTerraformModel the model 'WebhookMethodTerraformModel'
type WebhookMethodTerraformModel string

// List of WebhookMethodTerraformModel
const (
	WEBHOOKMETHODTERRAFORMMODEL_POST   WebhookMethodTerraformModel = "POST"
	WEBHOOKMETHODTERRAFORMMODEL_PUT    WebhookMethodTerraformModel = "PUT"
	WEBHOOKMETHODTERRAFORMMODEL_DELETE WebhookMethodTerraformModel = "DELETE"
	WEBHOOKMETHODTERRAFORMMODEL_GET    WebhookMethodTerraformModel = "GET"
	WEBHOOKMETHODTERRAFORMMODEL_PATCH  WebhookMethodTerraformModel = "PATCH"
)

// All allowed values of WebhookMethodTerraformModel enum
var AllowedWebhookMethodTerraformModelEnumValues = []WebhookMethodTerraformModel{
	"POST",
	"PUT",
	"DELETE",
	"GET",
	"PATCH",
}

func (v *WebhookMethodTerraformModel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WebhookMethodTerraformModel(value)
	for _, existing := range AllowedWebhookMethodTerraformModelEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WebhookMethodTerraformModel", value)
}

// NewWebhookMethodTerraformModelFromValue returns a pointer to a valid WebhookMethodTerraformModel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWebhookMethodTerraformModelFromValue(v string) (*WebhookMethodTerraformModel, error) {
	ev := WebhookMethodTerraformModel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WebhookMethodTerraformModel: valid values are %v", v, AllowedWebhookMethodTerraformModelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WebhookMethodTerraformModel) IsValid() bool {
	for _, existing := range AllowedWebhookMethodTerraformModelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WebhookMethodTerraformModel value
func (v WebhookMethodTerraformModel) Ptr() *WebhookMethodTerraformModel {
	return &v
}

type NullableWebhookMethodTerraformModel struct {
	value *WebhookMethodTerraformModel
	isSet bool
}

func (v NullableWebhookMethodTerraformModel) Get() *WebhookMethodTerraformModel {
	return v.value
}

func (v *NullableWebhookMethodTerraformModel) Set(val *WebhookMethodTerraformModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookMethodTerraformModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookMethodTerraformModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookMethodTerraformModel(val *WebhookMethodTerraformModel) *NullableWebhookMethodTerraformModel {
	return &NullableWebhookMethodTerraformModel{value: val, isSet: true}
}

func (v NullableWebhookMethodTerraformModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookMethodTerraformModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
