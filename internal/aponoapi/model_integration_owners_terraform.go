/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aponoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the IntegrationOwnersTerraform type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationOwnersTerraform{}

// IntegrationOwnersTerraform struct for IntegrationOwnersTerraform
type IntegrationOwnersTerraform struct {
	Owners []IntegrationOwnerTerraform `json:"owners"`
}

type _IntegrationOwnersTerraform IntegrationOwnersTerraform

// NewIntegrationOwnersTerraform instantiates a new IntegrationOwnersTerraform object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationOwnersTerraform(owners []IntegrationOwnerTerraform) *IntegrationOwnersTerraform {
	this := IntegrationOwnersTerraform{}
	this.Owners = owners
	return &this
}

// NewIntegrationOwnersTerraformWithDefaults instantiates a new IntegrationOwnersTerraform object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationOwnersTerraformWithDefaults() *IntegrationOwnersTerraform {
	this := IntegrationOwnersTerraform{}
	return &this
}

// GetOwners returns the Owners field value
func (o *IntegrationOwnersTerraform) GetOwners() []IntegrationOwnerTerraform {
	if o == nil {
		var ret []IntegrationOwnerTerraform
		return ret
	}

	return o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value
// and a boolean to check if the value has been set.
func (o *IntegrationOwnersTerraform) GetOwnersOk() ([]IntegrationOwnerTerraform, bool) {
	if o == nil {
		return nil, false
	}
	return o.Owners, true
}

// SetOwners sets field value
func (o *IntegrationOwnersTerraform) SetOwners(v []IntegrationOwnerTerraform) {
	o.Owners = v
}

func (o IntegrationOwnersTerraform) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationOwnersTerraform) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["owners"] = o.Owners
	return toSerialize, nil
}

func (o *IntegrationOwnersTerraform) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"owners",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIntegrationOwnersTerraform := _IntegrationOwnersTerraform{}

	err = json.Unmarshal(bytes, &varIntegrationOwnersTerraform)

	if err != nil {
		return err
	}

	*o = IntegrationOwnersTerraform(varIntegrationOwnersTerraform)

	return err
}

type NullableIntegrationOwnersTerraform struct {
	value *IntegrationOwnersTerraform
	isSet bool
}

func (v NullableIntegrationOwnersTerraform) Get() *IntegrationOwnersTerraform {
	return v.value
}

func (v *NullableIntegrationOwnersTerraform) Set(val *IntegrationOwnersTerraform) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationOwnersTerraform) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationOwnersTerraform) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationOwnersTerraform(val *IntegrationOwnersTerraform) *NullableIntegrationOwnersTerraform {
	return &NullableIntegrationOwnersTerraform{value: val, isSet: true}
}

func (v NullableIntegrationOwnersTerraform) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationOwnersTerraform) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
