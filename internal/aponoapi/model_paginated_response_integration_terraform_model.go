/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aponoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the PaginatedResponseIntegrationTerraformModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginatedResponseIntegrationTerraformModel{}

// PaginatedResponseIntegrationTerraformModel struct for PaginatedResponseIntegrationTerraformModel
type PaginatedResponseIntegrationTerraformModel struct {
	Data       []IntegrationTerraform `json:"data"`
	Pagination PaginationInfo         `json:"pagination"`
}

type _PaginatedResponseIntegrationTerraformModel PaginatedResponseIntegrationTerraformModel

// NewPaginatedResponseIntegrationTerraformModel instantiates a new PaginatedResponseIntegrationTerraformModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedResponseIntegrationTerraformModel(data []IntegrationTerraform, pagination PaginationInfo) *PaginatedResponseIntegrationTerraformModel {
	this := PaginatedResponseIntegrationTerraformModel{}
	this.Data = data
	this.Pagination = pagination
	return &this
}

// NewPaginatedResponseIntegrationTerraformModelWithDefaults instantiates a new PaginatedResponseIntegrationTerraformModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedResponseIntegrationTerraformModelWithDefaults() *PaginatedResponseIntegrationTerraformModel {
	this := PaginatedResponseIntegrationTerraformModel{}
	return &this
}

// GetData returns the Data field value
func (o *PaginatedResponseIntegrationTerraformModel) GetData() []IntegrationTerraform {
	if o == nil {
		var ret []IntegrationTerraform
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *PaginatedResponseIntegrationTerraformModel) GetDataOk() ([]IntegrationTerraform, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *PaginatedResponseIntegrationTerraformModel) SetData(v []IntegrationTerraform) {
	o.Data = v
}

// GetPagination returns the Pagination field value
func (o *PaginatedResponseIntegrationTerraformModel) GetPagination() PaginationInfo {
	if o == nil {
		var ret PaginationInfo
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *PaginatedResponseIntegrationTerraformModel) GetPaginationOk() (*PaginationInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *PaginatedResponseIntegrationTerraformModel) SetPagination(v PaginationInfo) {
	o.Pagination = v
}

func (o PaginatedResponseIntegrationTerraformModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginatedResponseIntegrationTerraformModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["pagination"] = o.Pagination
	return toSerialize, nil
}

func (o *PaginatedResponseIntegrationTerraformModel) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"pagination",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaginatedResponseIntegrationTerraformModel := _PaginatedResponseIntegrationTerraformModel{}

	err = json.Unmarshal(bytes, &varPaginatedResponseIntegrationTerraformModel)

	if err != nil {
		return err
	}

	*o = PaginatedResponseIntegrationTerraformModel(varPaginatedResponseIntegrationTerraformModel)

	return err
}

type NullablePaginatedResponseIntegrationTerraformModel struct {
	value *PaginatedResponseIntegrationTerraformModel
	isSet bool
}

func (v NullablePaginatedResponseIntegrationTerraformModel) Get() *PaginatedResponseIntegrationTerraformModel {
	return v.value
}

func (v *NullablePaginatedResponseIntegrationTerraformModel) Set(val *PaginatedResponseIntegrationTerraformModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedResponseIntegrationTerraformModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedResponseIntegrationTerraformModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedResponseIntegrationTerraformModel(val *PaginatedResponseIntegrationTerraformModel) *NullablePaginatedResponseIntegrationTerraformModel {
	return &NullablePaginatedResponseIntegrationTerraformModel{value: val, isSet: true}
}

func (v NullablePaginatedResponseIntegrationTerraformModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedResponseIntegrationTerraformModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
