/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aponoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the AccessFlowTriggerTerraformV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessFlowTriggerTerraformV1{}

// AccessFlowTriggerTerraformV1 struct for AccessFlowTriggerTerraformV1
type AccessFlowTriggerTerraformV1 struct {
	Type      string                                        `json:"type"`
	Timeframe NullableAccessFlowTriggerTerraformV1Timeframe `json:"timeframe,omitempty"`
}

type _AccessFlowTriggerTerraformV1 AccessFlowTriggerTerraformV1

// NewAccessFlowTriggerTerraformV1 instantiates a new AccessFlowTriggerTerraformV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessFlowTriggerTerraformV1(type_ string) *AccessFlowTriggerTerraformV1 {
	this := AccessFlowTriggerTerraformV1{}
	this.Type = type_
	return &this
}

// NewAccessFlowTriggerTerraformV1WithDefaults instantiates a new AccessFlowTriggerTerraformV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessFlowTriggerTerraformV1WithDefaults() *AccessFlowTriggerTerraformV1 {
	this := AccessFlowTriggerTerraformV1{}
	return &this
}

// GetType returns the Type field value
func (o *AccessFlowTriggerTerraformV1) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AccessFlowTriggerTerraformV1) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AccessFlowTriggerTerraformV1) SetType(v string) {
	o.Type = v
}

// GetTimeframe returns the Timeframe field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessFlowTriggerTerraformV1) GetTimeframe() AccessFlowTriggerTerraformV1Timeframe {
	if o == nil || IsNil(o.Timeframe.Get()) {
		var ret AccessFlowTriggerTerraformV1Timeframe
		return ret
	}
	return *o.Timeframe.Get()
}

// GetTimeframeOk returns a tuple with the Timeframe field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessFlowTriggerTerraformV1) GetTimeframeOk() (*AccessFlowTriggerTerraformV1Timeframe, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timeframe.Get(), o.Timeframe.IsSet()
}

// HasTimeframe returns a boolean if a field has been set.
func (o *AccessFlowTriggerTerraformV1) HasTimeframe() bool {
	if o != nil && o.Timeframe.IsSet() {
		return true
	}

	return false
}

// SetTimeframe gets a reference to the given NullableAccessFlowTriggerTerraformV1Timeframe and assigns it to the Timeframe field.
func (o *AccessFlowTriggerTerraformV1) SetTimeframe(v AccessFlowTriggerTerraformV1Timeframe) {
	o.Timeframe.Set(&v)
}

// SetTimeframeNil sets the value for Timeframe to be an explicit nil
func (o *AccessFlowTriggerTerraformV1) SetTimeframeNil() {
	o.Timeframe.Set(nil)
}

// UnsetTimeframe ensures that no value is present for Timeframe, not even an explicit nil
func (o *AccessFlowTriggerTerraformV1) UnsetTimeframe() {
	o.Timeframe.Unset()
}

func (o AccessFlowTriggerTerraformV1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessFlowTriggerTerraformV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if o.Timeframe.IsSet() {
		toSerialize["timeframe"] = o.Timeframe.Get()
	}
	return toSerialize, nil
}

func (o *AccessFlowTriggerTerraformV1) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccessFlowTriggerTerraformV1 := _AccessFlowTriggerTerraformV1{}

	err = json.Unmarshal(bytes, &varAccessFlowTriggerTerraformV1)

	if err != nil {
		return err
	}

	*o = AccessFlowTriggerTerraformV1(varAccessFlowTriggerTerraformV1)

	return err
}

type NullableAccessFlowTriggerTerraformV1 struct {
	value *AccessFlowTriggerTerraformV1
	isSet bool
}

func (v NullableAccessFlowTriggerTerraformV1) Get() *AccessFlowTriggerTerraformV1 {
	return v.value
}

func (v *NullableAccessFlowTriggerTerraformV1) Set(val *AccessFlowTriggerTerraformV1) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessFlowTriggerTerraformV1) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessFlowTriggerTerraformV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessFlowTriggerTerraformV1(val *AccessFlowTriggerTerraformV1) *NullableAccessFlowTriggerTerraformV1 {
	return &NullableAccessFlowTriggerTerraformV1{value: val, isSet: true}
}

func (v NullableAccessFlowTriggerTerraformV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessFlowTriggerTerraformV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
