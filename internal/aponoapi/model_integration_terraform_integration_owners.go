/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aponoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the IntegrationTerraformIntegrationOwners type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationTerraformIntegrationOwners{}

// IntegrationTerraformIntegrationOwners struct for IntegrationTerraformIntegrationOwners
type IntegrationTerraformIntegrationOwners struct {
	Owners []IntegrationOwnerTerraform `json:"owners"`
}

type _IntegrationTerraformIntegrationOwners IntegrationTerraformIntegrationOwners

// NewIntegrationTerraformIntegrationOwners instantiates a new IntegrationTerraformIntegrationOwners object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationTerraformIntegrationOwners(owners []IntegrationOwnerTerraform) *IntegrationTerraformIntegrationOwners {
	this := IntegrationTerraformIntegrationOwners{}
	this.Owners = owners
	return &this
}

// NewIntegrationTerraformIntegrationOwnersWithDefaults instantiates a new IntegrationTerraformIntegrationOwners object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationTerraformIntegrationOwnersWithDefaults() *IntegrationTerraformIntegrationOwners {
	this := IntegrationTerraformIntegrationOwners{}
	return &this
}

// GetOwners returns the Owners field value
func (o *IntegrationTerraformIntegrationOwners) GetOwners() []IntegrationOwnerTerraform {
	if o == nil {
		var ret []IntegrationOwnerTerraform
		return ret
	}

	return o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value
// and a boolean to check if the value has been set.
func (o *IntegrationTerraformIntegrationOwners) GetOwnersOk() ([]IntegrationOwnerTerraform, bool) {
	if o == nil {
		return nil, false
	}
	return o.Owners, true
}

// SetOwners sets field value
func (o *IntegrationTerraformIntegrationOwners) SetOwners(v []IntegrationOwnerTerraform) {
	o.Owners = v
}

func (o IntegrationTerraformIntegrationOwners) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationTerraformIntegrationOwners) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["owners"] = o.Owners
	return toSerialize, nil
}

func (o *IntegrationTerraformIntegrationOwners) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"owners",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIntegrationTerraformIntegrationOwners := _IntegrationTerraformIntegrationOwners{}

	err = json.Unmarshal(bytes, &varIntegrationTerraformIntegrationOwners)

	if err != nil {
		return err
	}

	*o = IntegrationTerraformIntegrationOwners(varIntegrationTerraformIntegrationOwners)

	return err
}

type NullableIntegrationTerraformIntegrationOwners struct {
	value *IntegrationTerraformIntegrationOwners
	isSet bool
}

func (v NullableIntegrationTerraformIntegrationOwners) Get() *IntegrationTerraformIntegrationOwners {
	return v.value
}

func (v *NullableIntegrationTerraformIntegrationOwners) Set(val *IntegrationTerraformIntegrationOwners) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationTerraformIntegrationOwners) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationTerraformIntegrationOwners) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationTerraformIntegrationOwners(val *IntegrationTerraformIntegrationOwners) *NullableIntegrationTerraformIntegrationOwners {
	return &NullableIntegrationTerraformIntegrationOwners{value: val, isSet: true}
}

func (v NullableIntegrationTerraformIntegrationOwners) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationTerraformIntegrationOwners) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
