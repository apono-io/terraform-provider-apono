/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aponoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the AccessTargetBundleTerraformV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessTargetBundleTerraformV1{}

// AccessTargetBundleTerraformV1 struct for AccessTargetBundleTerraformV1
type AccessTargetBundleTerraformV1 struct {
	BundleId string `json:"bundle_id"`
}

type _AccessTargetBundleTerraformV1 AccessTargetBundleTerraformV1

// NewAccessTargetBundleTerraformV1 instantiates a new AccessTargetBundleTerraformV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessTargetBundleTerraformV1(bundleId string) *AccessTargetBundleTerraformV1 {
	this := AccessTargetBundleTerraformV1{}
	this.BundleId = bundleId
	return &this
}

// NewAccessTargetBundleTerraformV1WithDefaults instantiates a new AccessTargetBundleTerraformV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessTargetBundleTerraformV1WithDefaults() *AccessTargetBundleTerraformV1 {
	this := AccessTargetBundleTerraformV1{}
	return &this
}

// GetBundleId returns the BundleId field value
func (o *AccessTargetBundleTerraformV1) GetBundleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BundleId
}

// GetBundleIdOk returns a tuple with the BundleId field value
// and a boolean to check if the value has been set.
func (o *AccessTargetBundleTerraformV1) GetBundleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BundleId, true
}

// SetBundleId sets field value
func (o *AccessTargetBundleTerraformV1) SetBundleId(v string) {
	o.BundleId = v
}

func (o AccessTargetBundleTerraformV1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessTargetBundleTerraformV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bundle_id"] = o.BundleId
	return toSerialize, nil
}

func (o *AccessTargetBundleTerraformV1) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bundle_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccessTargetBundleTerraformV1 := _AccessTargetBundleTerraformV1{}

	err = json.Unmarshal(bytes, &varAccessTargetBundleTerraformV1)

	if err != nil {
		return err
	}

	*o = AccessTargetBundleTerraformV1(varAccessTargetBundleTerraformV1)

	return err
}

type NullableAccessTargetBundleTerraformV1 struct {
	value *AccessTargetBundleTerraformV1
	isSet bool
}

func (v NullableAccessTargetBundleTerraformV1) Get() *AccessTargetBundleTerraformV1 {
	return v.value
}

func (v *NullableAccessTargetBundleTerraformV1) Set(val *AccessTargetBundleTerraformV1) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessTargetBundleTerraformV1) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessTargetBundleTerraformV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessTargetBundleTerraformV1(val *AccessTargetBundleTerraformV1) *NullableAccessTargetBundleTerraformV1 {
	return &NullableAccessTargetBundleTerraformV1{value: val, isSet: true}
}

func (v NullableAccessTargetBundleTerraformV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessTargetBundleTerraformV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
