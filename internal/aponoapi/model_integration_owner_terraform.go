/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aponoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the IntegrationOwnerTerraform type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationOwnerTerraform{}

// IntegrationOwnerTerraform struct for IntegrationOwnerTerraform
type IntegrationOwnerTerraform struct {
	IntegrationId   NullableString `json:"integration_id,omitempty"`
	AttributeTypeId string         `json:"attribute_type_id"`
	AttributeValue  []string       `json:"attribute_value"`
}

type _IntegrationOwnerTerraform IntegrationOwnerTerraform

// NewIntegrationOwnerTerraform instantiates a new IntegrationOwnerTerraform object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationOwnerTerraform(attributeTypeId string, attributeValue []string) *IntegrationOwnerTerraform {
	this := IntegrationOwnerTerraform{}
	this.AttributeTypeId = attributeTypeId
	this.AttributeValue = attributeValue
	return &this
}

// NewIntegrationOwnerTerraformWithDefaults instantiates a new IntegrationOwnerTerraform object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationOwnerTerraformWithDefaults() *IntegrationOwnerTerraform {
	this := IntegrationOwnerTerraform{}
	return &this
}

// GetIntegrationId returns the IntegrationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IntegrationOwnerTerraform) GetIntegrationId() string {
	if o == nil || IsNil(o.IntegrationId.Get()) {
		var ret string
		return ret
	}
	return *o.IntegrationId.Get()
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IntegrationOwnerTerraform) GetIntegrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntegrationId.Get(), o.IntegrationId.IsSet()
}

// HasIntegrationId returns a boolean if a field has been set.
func (o *IntegrationOwnerTerraform) HasIntegrationId() bool {
	if o != nil && o.IntegrationId.IsSet() {
		return true
	}

	return false
}

// SetIntegrationId gets a reference to the given NullableString and assigns it to the IntegrationId field.
func (o *IntegrationOwnerTerraform) SetIntegrationId(v string) {
	o.IntegrationId.Set(&v)
}

// SetIntegrationIdNil sets the value for IntegrationId to be an explicit nil
func (o *IntegrationOwnerTerraform) SetIntegrationIdNil() {
	o.IntegrationId.Set(nil)
}

// UnsetIntegrationId ensures that no value is present for IntegrationId, not even an explicit nil
func (o *IntegrationOwnerTerraform) UnsetIntegrationId() {
	o.IntegrationId.Unset()
}

// GetAttributeTypeId returns the AttributeTypeId field value
func (o *IntegrationOwnerTerraform) GetAttributeTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttributeTypeId
}

// GetAttributeTypeIdOk returns a tuple with the AttributeTypeId field value
// and a boolean to check if the value has been set.
func (o *IntegrationOwnerTerraform) GetAttributeTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeTypeId, true
}

// SetAttributeTypeId sets field value
func (o *IntegrationOwnerTerraform) SetAttributeTypeId(v string) {
	o.AttributeTypeId = v
}

// GetAttributeValue returns the AttributeValue field value
func (o *IntegrationOwnerTerraform) GetAttributeValue() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AttributeValue
}

// GetAttributeValueOk returns a tuple with the AttributeValue field value
// and a boolean to check if the value has been set.
func (o *IntegrationOwnerTerraform) GetAttributeValueOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttributeValue, true
}

// SetAttributeValue sets field value
func (o *IntegrationOwnerTerraform) SetAttributeValue(v []string) {
	o.AttributeValue = v
}

func (o IntegrationOwnerTerraform) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationOwnerTerraform) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IntegrationId.IsSet() {
		toSerialize["integration_id"] = o.IntegrationId.Get()
	}
	toSerialize["attribute_type_id"] = o.AttributeTypeId
	toSerialize["attribute_value"] = o.AttributeValue
	return toSerialize, nil
}

func (o *IntegrationOwnerTerraform) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attribute_type_id",
		"attribute_value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIntegrationOwnerTerraform := _IntegrationOwnerTerraform{}

	err = json.Unmarshal(bytes, &varIntegrationOwnerTerraform)

	if err != nil {
		return err
	}

	*o = IntegrationOwnerTerraform(varIntegrationOwnerTerraform)

	return err
}

type NullableIntegrationOwnerTerraform struct {
	value *IntegrationOwnerTerraform
	isSet bool
}

func (v NullableIntegrationOwnerTerraform) Get() *IntegrationOwnerTerraform {
	return v.value
}

func (v *NullableIntegrationOwnerTerraform) Set(val *IntegrationOwnerTerraform) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationOwnerTerraform) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationOwnerTerraform) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationOwnerTerraform(val *IntegrationOwnerTerraform) *NullableIntegrationOwnerTerraform {
	return &NullableIntegrationOwnerTerraform{value: val, isSet: true}
}

func (v NullableIntegrationOwnerTerraform) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationOwnerTerraform) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
