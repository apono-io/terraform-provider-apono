/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aponoapi

import (
	"encoding/json"
	"fmt"
)

// checks if the AccessFlowTerraformV1ApproverPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessFlowTerraformV1ApproverPolicy{}

// AccessFlowTerraformV1ApproverPolicy struct for AccessFlowTerraformV1ApproverPolicy
type AccessFlowTerraformV1ApproverPolicy struct {
	GroupsRelationship ApproverPolicyGroupsRelationshipTerraformV1 `json:"groups_relationship"`
	ConditionGroups    []ApproverConditionGroupTerraformV1         `json:"condition_groups"`
}

type _AccessFlowTerraformV1ApproverPolicy AccessFlowTerraformV1ApproverPolicy

// NewAccessFlowTerraformV1ApproverPolicy instantiates a new AccessFlowTerraformV1ApproverPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessFlowTerraformV1ApproverPolicy(groupsRelationship ApproverPolicyGroupsRelationshipTerraformV1, conditionGroups []ApproverConditionGroupTerraformV1) *AccessFlowTerraformV1ApproverPolicy {
	this := AccessFlowTerraformV1ApproverPolicy{}
	this.GroupsRelationship = groupsRelationship
	this.ConditionGroups = conditionGroups
	return &this
}

// NewAccessFlowTerraformV1ApproverPolicyWithDefaults instantiates a new AccessFlowTerraformV1ApproverPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessFlowTerraformV1ApproverPolicyWithDefaults() *AccessFlowTerraformV1ApproverPolicy {
	this := AccessFlowTerraformV1ApproverPolicy{}
	return &this
}

// GetGroupsRelationship returns the GroupsRelationship field value
func (o *AccessFlowTerraformV1ApproverPolicy) GetGroupsRelationship() ApproverPolicyGroupsRelationshipTerraformV1 {
	if o == nil {
		var ret ApproverPolicyGroupsRelationshipTerraformV1
		return ret
	}

	return o.GroupsRelationship
}

// GetGroupsRelationshipOk returns a tuple with the GroupsRelationship field value
// and a boolean to check if the value has been set.
func (o *AccessFlowTerraformV1ApproverPolicy) GetGroupsRelationshipOk() (*ApproverPolicyGroupsRelationshipTerraformV1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupsRelationship, true
}

// SetGroupsRelationship sets field value
func (o *AccessFlowTerraformV1ApproverPolicy) SetGroupsRelationship(v ApproverPolicyGroupsRelationshipTerraformV1) {
	o.GroupsRelationship = v
}

// GetConditionGroups returns the ConditionGroups field value
func (o *AccessFlowTerraformV1ApproverPolicy) GetConditionGroups() []ApproverConditionGroupTerraformV1 {
	if o == nil {
		var ret []ApproverConditionGroupTerraformV1
		return ret
	}

	return o.ConditionGroups
}

// GetConditionGroupsOk returns a tuple with the ConditionGroups field value
// and a boolean to check if the value has been set.
func (o *AccessFlowTerraformV1ApproverPolicy) GetConditionGroupsOk() ([]ApproverConditionGroupTerraformV1, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConditionGroups, true
}

// SetConditionGroups sets field value
func (o *AccessFlowTerraformV1ApproverPolicy) SetConditionGroups(v []ApproverConditionGroupTerraformV1) {
	o.ConditionGroups = v
}

func (o AccessFlowTerraformV1ApproverPolicy) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessFlowTerraformV1ApproverPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["groups_relationship"] = o.GroupsRelationship
	toSerialize["condition_groups"] = o.ConditionGroups
	return toSerialize, nil
}

func (o *AccessFlowTerraformV1ApproverPolicy) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"groups_relationship",
		"condition_groups",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccessFlowTerraformV1ApproverPolicy := _AccessFlowTerraformV1ApproverPolicy{}

	err = json.Unmarshal(bytes, &varAccessFlowTerraformV1ApproverPolicy)

	if err != nil {
		return err
	}

	*o = AccessFlowTerraformV1ApproverPolicy(varAccessFlowTerraformV1ApproverPolicy)

	return err
}

type NullableAccessFlowTerraformV1ApproverPolicy struct {
	value *AccessFlowTerraformV1ApproverPolicy
	isSet bool
}

func (v NullableAccessFlowTerraformV1ApproverPolicy) Get() *AccessFlowTerraformV1ApproverPolicy {
	return v.value
}

func (v *NullableAccessFlowTerraformV1ApproverPolicy) Set(val *AccessFlowTerraformV1ApproverPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessFlowTerraformV1ApproverPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessFlowTerraformV1ApproverPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessFlowTerraformV1ApproverPolicy(val *AccessFlowTerraformV1ApproverPolicy) *NullableAccessFlowTerraformV1ApproverPolicy {
	return &NullableAccessFlowTerraformV1ApproverPolicy{value: val, isSet: true}
}

func (v NullableAccessFlowTerraformV1ApproverPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessFlowTerraformV1ApproverPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
